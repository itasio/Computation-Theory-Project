State 129 conflicts: 1 shift/reduce
State 180 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 234 conflicts: 2 shift/reduce
State 287 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations main_block
    4        | const_declarations main_block
    5        | comp_declarations main_block
    6        | const_declarations function_blocks main_block
    7        | comp_declarations function_blocks main_block
    8        | var_declarations function_blocks main_block
    9        | const_declarations var_declarations function_blocks main_block
   10        | comp_declarations var_declarations function_blocks main_block
   11        | comp_declarations const_declarations var_declarations function_blocks main_block

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

   14 function_param_decl: %empty
   15                    | var_declaration
   16                    | function_param_decl ',' var_declaration

   17 function_return_type: TK_FUNC_RET data_type

   18 function_blocks: function_block ';'
   19                | function_blocks function_block ';'

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   25 function_call_no_assgn: TK_IDENT '(' func_param_call ')'
   26                       | TK_IDENT '(' ')'

   27 func_param_call: expr
   28                | func_param_call ',' expr

   29 listofexpr: expr
   30           | listofexpr expr

   31 expr: TK_CONSTINT
   32     | TK_CONSTFLOAT
   33     | TK_IDENT
   34     | '#' TK_IDENT
   35     | TK_CONSTSTR
   36     | KW_FALSE
   37     | KW_TRUE
   38     | expr KW_OR expr
   39     | expr KW_AND expr
   40     | KW_NOT expr
   41     | expr TK_NOTEQ expr
   42     | expr TK_EQEQ expr
   43     | expr TK_LESEQ expr
   44     | expr TK_GREEQ expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr '+' expr
   48     | expr '-' expr
   49     | expr '*' expr
   50     | expr '/' expr
   51     | expr '%' expr
   52     | expr TK_POW expr
   53     | '-' expr
   54     | '+' expr
   55     | '(' expr ')'
   56     | TK_IDENT '[' expr ']'
   57     | expr '.' expr
   58     | function_call_no_assgn

   59 listofinstructions: var_declarations const_declarations statements
   60                   | const_declarations var_declarations statements
   61                   | statements
   62                   | var_declarations statements
   63                   | const_declarations statements

   64 statements: statement
   65           | statements statement

   66 statement: fict_token '=' listofexpr ';'
   67          | fict_token TK_PLUEQ expr ';'
   68          | fict_token TK_MINEQ expr ';'
   69          | fict_token TK_MULEQ expr ';'
   70          | fict_token TK_MODEQ expr ';'
   71          | fict_token TK_DIVEQ expr ';'
   72          | fict_token TK_COLEQ expr ';'
   73          | fict_token '.' function_call_no_assgn ';'
   74          | function_call_no_assgn ';'
   75          | if_statement ';'
   76          | for_statement ';'
   77          | while_statement ';'
   78          | KW_BREAK ';'
   79          | KW_CONTINUE ';'
   80          | listCompr_with_int_values ';'
   81          | listCompr_with_array ';'
   82          | ';'

   83 fict_token: TK_IDENT
   84           | '#' TK_IDENT
   85           | TK_IDENT '[' TK_CONSTINT ']'
   86           | '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | TK_IDENT '[' TK_IDENT ']'
   88           | '#' TK_IDENT '[' TK_IDENT ']'

   89 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   95 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

  103 comp_declarations: comp_declaration ';'
  104                  | comp_declarations comp_declaration ';'

  105 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

  106 listof_comp_instructions: comp_var_declarations function_blocks

  107 comp_var_declarations: comp_var_declaration ';'
  108                      | comp_var_declarations comp_var_declaration ';'

  109 comp_var_declaration: '#' one_var
  110                     | comp_multi_var

  111 comp_multi_var: comp_multi_var_1
  112               | comp_multi_var_2
  113               | comp_multi_var_3

  114 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | '#' TK_IDENT '[' ']' ',' comp_multi_var_3

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

  118 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  119                 | '#' TK_IDENT ',' comp_multi_var_1

  120 const_declarations: const_declaration ';'
  121                   | const_declarations const_declaration ';'

  122 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

  131 var_declarations: var_declaration ';'
  132                 | var_declarations var_declaration ';'

  133 var_declaration: one_var
  134                | multi_var

  135 one_var: TK_IDENT ':' data_type
  136        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT '[' ']' ':' data_type

  138 multi_var: multi_var_1
  139          | multi_var_2
  140          | multi_var_3

  141 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT '[' ']' ',' multi_var_3

  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  145 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  146            | TK_IDENT ',' multi_var_1

  147 data_type: KW_INTEGER
  148          | KW_SCALAR
  149          | KW_STR
  150          | KW_BOOLEAN
  151          | TK_IDENT


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 34 84 86 88 109 114 115 116 117 118 119
    '%' (37) 51
    '(' (40) 12 13 20 21 22 23 24 25 26 55 89 90 91 92 93 94 95 96
    ')' (41) 12 13 20 21 22 23 24 25 26 55 89 90 91 92 93 94 95 96
    '*' (42) 49
    '+' (43) 47 54 123 126
    ',' (44) 16 28 114 115 116 117 118 119 141 142 143 144 145 146
    '-' (45) 48 53 124 127
    '.' (46) 57 73
    '/' (47) 50
    ':' (58) 12 13 20 21 22 23 24 89 90 91 92 93 94 95 96 97 98 99 100 101 102 105 114 116 118 122 123 124 125 126 127 128 129 130 135 136 137 141 143 145
    ';' (59) 12 13 18 19 21 22 23 24 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 103 104 107 108 120 121 131 132
    '<' (60) 45
    '=' (61) 66 122 123 124 125 126 127 128 129 130
    '>' (62) 46
    '[' (91) 56 85 86 87 88 97 98 99 100 101 102 114 115 116 117 136 137 141 142 143 144
    ']' (93) 56 85 86 87 88 97 98 99 100 101 102 114 115 116 117 136 137 141 142 143 144
    error (256)
    TK_IDENT <str> (258) 20 21 22 23 24 25 26 33 34 56 83 84 85 86 87 88 97 98 99 100 101 102 105 114 115 116 117 118 119 122 123 124 125 126 127 128 129 130 135 136 137 141 142 143 144 145 146 151
    TK_CONSTINT <str> (259) 31 85 86 101 102 116 117 125 126 127 136 143 144
    TK_CONSTFLOAT <str> (260) 32 122 123 124
    TK_CONSTSTR <str> (261) 35 128
    TK_POW (262) 52
    TK_PLUEQ (263) 67
    TK_MINEQ (264) 68
    TK_MULEQ (265) 69
    TK_DIVEQ (266) 71
    TK_MODEQ (267) 70
    TK_EQEQ (268) 42
    TK_NOTEQ (269) 41
    TK_GREEQ (270) 44
    TK_LESEQ (271) 43
    TK_COLEQ (272) 72 101 102
    TK_FUNC_RET (273) 17
    KW_AND (274) 39
    KW_OR (275) 38
    KW_NOT (276) 40
    KW_INTEGER (277) 125 126 127 147
    KW_FOR (278) 97 98 99 100 101 102
    KW_BREAK (279) 78
    KW_DEF (280) 12 13 20 21 22 23 24
    KW_ENDCOMP (281) 105
    KW_SCALAR (282) 122 123 124 148
    KW_CONST (283) 122 123 124 125 126 127 128 129 130
    KW_IN (284) 97 98 99 100 102
    KW_CONTINUE (285) 79
    KW_ENDDEF (286) 12 13 20 21 22 23 24
    KW_OF (287) 102
    KW_STR (288) 128 149
    KW_IF (289) 89 90 91 92 93 94
    KW_ENDFOR (290) 97 98 99 100
    KW_MAIN (291) 12 13
    KW_BOOLEAN (292) 129 130 150
    KW_ELSE (293) 91 92 93 94
    KW_WHILE (294) 95 96
    KW_RETURN (295) 21 22 23 24
    KW_ENDIF (296) 89 90 91 92 93 94
    KW_ENDWHILE (297) 95 96
    KW_COMP (298) 105
    KW_TRUE (299) 37 129
    KW_FALSE (300) 36 130
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5 6 7 8 9 10 11
        on right: 0
    main_block <str> (67)
        on left: 12 13
        on right: 1 2 3 4 5 6 7 8 9 10 11
    function_param_decl <str> (68)
        on left: 14 15 16
        on right: 16 20 21 22 23 24
    function_return_type <str> (69)
        on left: 17
        on right: 23 24
    function_blocks <str> (70)
        on left: 18 19
        on right: 2 6 7 8 9 10 11 19 106
    function_block <str> (71)
        on left: 20 21 22 23 24
        on right: 18 19
    function_call_no_assgn <str> (72)
        on left: 25 26
        on right: 58 73 74
    func_param_call <str> (73)
        on left: 27 28
        on right: 25 28
    listofexpr <str> (74)
        on left: 29 30
        on right: 30 66 89 90 91 92 93 94 95 96
    expr <str> (75)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 23 24 27 28 29 30 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 67 68 69 70 71 72 97 98 99 100 101 102
    listofinstructions <str> (76)
        on left: 59 60 61 62 63
        on right: 13 20 21 23
    statements <str> (77)
        on left: 64 65
        on right: 59 60 61 62 63 65 89 91 92 93 95 97 99
    statement <str> (78)
        on left: 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82
        on right: 64 65
    fict_token <str> (79)
        on left: 83 84 85 86 87 88
        on right: 66 67 68 69 70 71 72 73
    if_statement <str> (80)
        on left: 89 90 91 92 93 94
        on right: 75
    while_statement <str> (81)
        on left: 95 96
        on right: 77
    for_statement <str> (82)
        on left: 97 98 99 100
        on right: 76
    listCompr_with_int_values <str> (83)
        on left: 101
        on right: 80
    listCompr_with_array <str> (84)
        on left: 102
        on right: 81
    comp_declarations <str> (85)
        on left: 103 104
        on right: 5 7 10 11 104
    comp_declaration <str> (86)
        on left: 105
        on right: 103 104
    listof_comp_instructions <str> (87)
        on left: 106
        on right: 105
    comp_var_declarations <str> (88)
        on left: 107 108
        on right: 106 108
    comp_var_declaration <str> (89)
        on left: 109 110
        on right: 107 108
    comp_multi_var <str> (90)
        on left: 111 112 113
        on right: 110
    comp_multi_var_3 <str> (91)
        on left: 114 115
        on right: 113 115
    comp_multi_var_2 <str> (92)
        on left: 116 117
        on right: 112 117
    comp_multi_var_1 <str> (93)
        on left: 118 119
        on right: 111 119
    const_declarations <str> (94)
        on left: 120 121
        on right: 4 6 9 11 59 60 63 121
    const_declaration <str> (95)
        on left: 122 123 124 125 126 127 128 129 130
        on right: 120 121
    var_declarations <str> (96)
        on left: 131 132
        on right: 3 8 9 10 11 59 60 62 132
    var_declaration <str> (97)
        on left: 133 134
        on right: 15 16 131 132
    one_var <str> (98)
        on left: 135 136 137
        on right: 109 133
    multi_var <str> (99)
        on left: 138 139 140
        on right: 134
    multi_var_3 <str> (100)
        on left: 141 142
        on right: 140 142
    multi_var_2 <str> (101)
        on left: 143 144
        on right: 139 144
    multi_var_1 <str> (102)
        on left: 145 146
        on right: 138 146
    data_type <str> (103)
        on left: 147 148 149 150 151
        on right: 17 101 102 114 116 118 135 136 137 141 143 145


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations main_block
    4        | . const_declarations main_block
    5        | . comp_declarations main_block
    6        | . const_declarations function_blocks main_block
    7        | . comp_declarations function_blocks main_block
    8        | . var_declarations function_blocks main_block
    9        | . const_declarations var_declarations function_blocks main_block
   10        | . comp_declarations var_declarations function_blocks main_block
   11        | . comp_declarations const_declarations var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  103 comp_declarations: . comp_declaration ';'
  104                  | . comp_declarations comp_declaration ';'
  105 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    program             go to state 5
    main_block          go to state 6
    function_blocks     go to state 7
    function_block      go to state 8
    comp_declarations   go to state 9
    comp_declaration    go to state 10
    const_declarations  go to state 11
    const_declaration   go to state 12
    var_declarations    go to state 13
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 1

  135 one_var: TK_IDENT . ':' data_type
  136        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT . '[' ']' ':' data_type
  141 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT . '[' ']' ',' multi_var_3
  143 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  146            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 20
    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 2

   12 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   20 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23
    KW_MAIN   shift, and go to state 24


State 3

  122 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 25


State 4

  105 comp_declaration: KW_COMP . TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

    TK_IDENT  shift, and go to state 26


State 5

    0 $accept: program . $end

    $end  shift, and go to state 27


State 6

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 7

    2 program: function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 28
    function_block  go to state 29


State 8

   18 function_blocks: function_block . ';'

    ';'  shift, and go to state 30


State 9

    5 program: comp_declarations . main_block
    7        | comp_declarations . function_blocks main_block
   10        | comp_declarations . var_declarations function_blocks main_block
   11        | comp_declarations . const_declarations var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  104 comp_declarations: comp_declarations . comp_declaration ';'
  105 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    main_block          go to state 31
    function_blocks     go to state 32
    function_block      go to state 8
    comp_declaration    go to state 33
    const_declarations  go to state 34
    const_declaration   go to state 12
    var_declarations    go to state 35
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 10

  103 comp_declarations: comp_declaration . ';'

    ';'  shift, and go to state 36


State 11

    4 program: const_declarations . main_block
    6        | const_declarations . function_blocks main_block
    9        | const_declarations . var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  121 const_declarations: const_declarations . const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    main_block         go to state 37
    function_blocks    go to state 38
    function_block     go to state 8
    const_declaration  go to state 39
    var_declarations   go to state 40
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 12

  120 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 41


State 13

    3 program: var_declarations . main_block
    8        | var_declarations . function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2

    main_block       go to state 42
    function_blocks  go to state 43
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 14

  131 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 45


State 15

  133 var_declaration: one_var .

    $default  reduce using rule 133 (var_declaration)


State 16

  134 var_declaration: multi_var .

    $default  reduce using rule 134 (var_declaration)


State 17

  140 multi_var: multi_var_3 .

    $default  reduce using rule 140 (multi_var)


State 18

  139 multi_var: multi_var_2 .

    $default  reduce using rule 139 (multi_var)


State 19

  138 multi_var: multi_var_1 .

    $default  reduce using rule 138 (multi_var)


State 20

  136 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT '[' . ']' ':' data_type
  141 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT '[' . ']' ',' multi_var_3
  143 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 46
    ']'          shift, and go to state 47


State 21

  135 one_var: TK_IDENT ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 53


State 22

  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  145            | TK_IDENT ',' . TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1
  146            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 54

    multi_var_1  go to state 55


State 23

   20 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 56


State 24

   12 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 57


State 25

  122 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
  126                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
  129                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
  130                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 58


State 26

  105 comp_declaration: KW_COMP TK_IDENT . ':' listof_comp_instructions KW_ENDCOMP

    ':'  shift, and go to state 59


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 29

   19 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 60


State 30

   18 function_blocks: function_block ';' .

    $default  reduce using rule 18 (function_blocks)


State 31

    5 program: comp_declarations main_block .

    $default  reduce using rule 5 (program)


State 32

    7 program: comp_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 61
    function_block  go to state 29


State 33

  104 comp_declarations: comp_declarations comp_declaration . ';'

    ';'  shift, and go to state 62


State 34

   11 program: comp_declarations const_declarations . var_declarations function_blocks main_block
  121 const_declarations: const_declarations . const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 39
    var_declarations   go to state 63
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 35

   10 program: comp_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 65
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 36

  103 comp_declarations: comp_declaration ';' .

    $default  reduce using rule 103 (comp_declarations)


State 37

    4 program: const_declarations main_block .

    $default  reduce using rule 4 (program)


State 38

    6 program: const_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 66
    function_block  go to state 29


State 39

  121 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 67


State 40

    9 program: const_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 68
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 41

  120 const_declarations: const_declaration ';' .

    $default  reduce using rule 120 (const_declarations)


State 42

    3 program: var_declarations main_block .

    $default  reduce using rule 3 (program)


State 43

    8 program: var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 69
    function_block  go to state 29


State 44

  132 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 70


State 45

  131 var_declarations: var_declaration ';' .

    $default  reduce using rule 131 (var_declarations)


State 46

  136 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  143 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 71


State 47

  137 one_var: TK_IDENT '[' ']' . ':' data_type
  141 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 72
    ','  shift, and go to state 73


State 48

  151 data_type: TK_IDENT .

    $default  reduce using rule 151 (data_type)


State 49

  147 data_type: KW_INTEGER .

    $default  reduce using rule 147 (data_type)


State 50

  148 data_type: KW_SCALAR .

    $default  reduce using rule 148 (data_type)


State 51

  149 data_type: KW_STR .

    $default  reduce using rule 149 (data_type)


State 52

  150 data_type: KW_BOOLEAN .

    $default  reduce using rule 150 (data_type)


State 53

  135 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 135 (one_var)


State 54

  145 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  145            | TK_IDENT ',' TK_IDENT . ':' data_type
  146            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 74
    ','  shift, and go to state 22


State 55

  146 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 146 (multi_var_1)


State 56

   14 function_param_decl: . %empty  [')', ',']
   15                    | . var_declaration
   16                    | . function_param_decl ',' var_declaration
   20 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 14 (function_param_decl)

    function_param_decl  go to state 75
    var_declaration      go to state 76
    one_var              go to state 15
    multi_var            go to state 16
    multi_var_3          go to state 17
    multi_var_2          go to state 18
    multi_var_1          go to state 19


State 57

   12 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 77


State 58

  122 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
  123                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
  126                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTINT ':' KW_INTEGER
  127                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTINT ':' KW_INTEGER
  128                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
  129                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
  130                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 78
    TK_CONSTFLOAT  shift, and go to state 79
    TK_CONSTSTR    shift, and go to state 80
    KW_TRUE        shift, and go to state 81
    KW_FALSE       shift, and go to state 82
    '+'            shift, and go to state 83
    '-'            shift, and go to state 84


State 59

  105 comp_declaration: KW_COMP TK_IDENT ':' . listof_comp_instructions KW_ENDCOMP
  106 listof_comp_instructions: . comp_var_declarations function_blocks
  107 comp_var_declarations: . comp_var_declaration ';'
  108                      | . comp_var_declarations comp_var_declaration ';'
  109 comp_var_declaration: . '#' one_var
  110                     | . comp_multi_var
  111 comp_multi_var: . comp_multi_var_1
  112               | . comp_multi_var_2
  113               | . comp_multi_var_3
  114 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  116 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  118 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  119                 | . '#' TK_IDENT ',' comp_multi_var_1

    '#'  shift, and go to state 85

    listof_comp_instructions  go to state 86
    comp_var_declarations     go to state 87
    comp_var_declaration      go to state 88
    comp_multi_var            go to state 89
    comp_multi_var_3          go to state 90
    comp_multi_var_2          go to state 91
    comp_multi_var_1          go to state 92


State 60

   19 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 19 (function_blocks)


State 61

    7 program: comp_declarations function_blocks main_block .

    $default  reduce using rule 7 (program)


State 62

  104 comp_declarations: comp_declarations comp_declaration ';' .

    $default  reduce using rule 104 (comp_declarations)


State 63

   11 program: comp_declarations const_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 93
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 64

   20 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23


State 65

   10 program: comp_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 94
    function_block  go to state 29


State 66

    6 program: const_declarations function_blocks main_block .

    $default  reduce using rule 6 (program)


State 67

  121 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 121 (const_declarations)


State 68

    9 program: const_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 95
    function_block  go to state 29


State 69

    8 program: var_declarations function_blocks main_block .

    $default  reduce using rule 8 (program)


State 70

  132 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 132 (var_declarations)


State 71

  136 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 96
    ','  shift, and go to state 97


State 72

  137 one_var: TK_IDENT '[' ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 98


State 73

  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  141            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  142            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 99

    multi_var_3  go to state 100


State 74

  145 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 101


State 75

   16 function_param_decl: function_param_decl . ',' var_declaration
   20 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


State 76

   15 function_param_decl: var_declaration .

    $default  reduce using rule 15 (function_param_decl)


State 77

   12 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 104


State 78

  125 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 105


State 79

  122 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 106


State 80

  128 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 107


State 81

  129 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 108


State 82

  130 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 109


State 83

  123 const_declaration: KW_CONST TK_IDENT '=' '+' . TK_CONSTFLOAT ':' KW_SCALAR
  126                  | KW_CONST TK_IDENT '=' '+' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 110
    TK_CONSTFLOAT  shift, and go to state 111


State 84

  124 const_declaration: KW_CONST TK_IDENT '=' '-' . TK_CONSTFLOAT ':' KW_SCALAR
  127                  | KW_CONST TK_IDENT '=' '-' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 112
    TK_CONSTFLOAT  shift, and go to state 113


State 85

  109 comp_var_declaration: '#' . one_var
  114 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3
  116 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  118 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  119                 | '#' . TK_IDENT ',' comp_multi_var_1
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type

    TK_IDENT  shift, and go to state 114

    one_var  go to state 115


State 86

  105 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions . KW_ENDCOMP

    KW_ENDCOMP  shift, and go to state 116


State 87

   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  106 listof_comp_instructions: comp_var_declarations . function_blocks
  108 comp_var_declarations: comp_var_declarations . comp_var_declaration ';'
  109 comp_var_declaration: . '#' one_var
  110                     | . comp_multi_var
  111 comp_multi_var: . comp_multi_var_1
  112               | . comp_multi_var_2
  113               | . comp_multi_var_3
  114 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  116 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  118 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  119                 | . '#' TK_IDENT ',' comp_multi_var_1

    KW_DEF  shift, and go to state 64
    '#'     shift, and go to state 85

    function_blocks       go to state 117
    function_block        go to state 8
    comp_var_declaration  go to state 118
    comp_multi_var        go to state 89
    comp_multi_var_3      go to state 90
    comp_multi_var_2      go to state 91
    comp_multi_var_1      go to state 92


State 88

  107 comp_var_declarations: comp_var_declaration . ';'

    ';'  shift, and go to state 119


State 89

  110 comp_var_declaration: comp_multi_var .

    $default  reduce using rule 110 (comp_var_declaration)


State 90

  113 comp_multi_var: comp_multi_var_3 .

    $default  reduce using rule 113 (comp_multi_var)


State 91

  112 comp_multi_var: comp_multi_var_2 .

    $default  reduce using rule 112 (comp_multi_var)


State 92

  111 comp_multi_var: comp_multi_var_1 .

    $default  reduce using rule 111 (comp_multi_var)


State 93

   11 program: comp_declarations const_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 120
    function_block  go to state 29


State 94

   10 program: comp_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 10 (program)


State 95

    9 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 9 (program)


State 96

  136 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 121


State 97

  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  143            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  144            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 122

    multi_var_2  go to state 123


State 98

  137 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 137 (one_var)


State 99

  141 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  141            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  142            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 124


State 100

  142 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 142 (multi_var_3)


State 101

  145 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 145 (multi_var_1)


State 102

   17 function_return_type: . TK_FUNC_RET data_type
   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 125
    ':'          shift, and go to state 126

    function_return_type  go to state 127


State 103

   16 function_param_decl: function_param_decl ',' . var_declaration
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 128
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 104

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: . var_declarations const_declarations statements
   60                   | . const_declarations var_declarations statements
   61                   | . statements
   62                   | . var_declarations statements
   63                   | . const_declarations statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_ENDDEF    shift, and go to state 133
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 139
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 105

  125 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 150


State 106

  122 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 151


State 107

  128 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 152


State 108

  129 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 153


State 109

  130 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 154


State 110

  126 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 155


State 111

  123 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 156


State 112

  127 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 157


State 113

  124 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 158


State 114

  114 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3
  116 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2
  118 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  119                 | '#' TK_IDENT . ',' comp_multi_var_1
  135 one_var: TK_IDENT . ':' data_type
  136        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT . '[' ']' ':' data_type

    '['  shift, and go to state 159
    ':'  shift, and go to state 21
    ','  shift, and go to state 160


State 115

  109 comp_var_declaration: '#' one_var .

    $default  reduce using rule 109 (comp_var_declaration)


State 116

  105 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP .

    $default  reduce using rule 105 (comp_declaration)


State 117

   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  106 listof_comp_instructions: comp_var_declarations function_blocks .  [KW_ENDCOMP]

    KW_DEF  shift, and go to state 64

    $default  reduce using rule 106 (listof_comp_instructions)

    function_block  go to state 29


State 118

  108 comp_var_declarations: comp_var_declarations comp_var_declaration . ';'

    ';'  shift, and go to state 161


State 119

  107 comp_var_declarations: comp_var_declaration ';' .

    $default  reduce using rule 107 (comp_var_declarations)


State 120

   11 program: comp_declarations const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 11 (program)


State 121

  136 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 136 (one_var)


State 122

  143 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  143            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 162


State 123

  144 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 144 (multi_var_2)


State 124

  141 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  141            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  142            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 163


State 125

   17 function_return_type: TK_FUNC_RET . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 164


State 126

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: . var_declarations const_declarations statements
   60                   | . const_declarations var_declarations statements
   61                   | . statements
   62                   | . var_declarations statements
   63                   | . const_declarations statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_RETURN    shift, and go to state 165
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 166
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 127

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 167


State 128

   16 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 16 (function_param_decl)


State 129

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   83 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   85           | TK_IDENT . '[' TK_CONSTINT ']'
   87           | TK_IDENT . '[' TK_IDENT ']'
  101 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  135 one_var: TK_IDENT . ':' data_type
  136        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT . '[' ']' ':' data_type
  141 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT . '[' ']' ',' multi_var_3
  143 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  146            | TK_IDENT . ',' multi_var_1

    TK_COLEQ  shift, and go to state 168
    '('       shift, and go to state 169
    '['       shift, and go to state 170
    ':'       shift, and go to state 21
    ','       shift, and go to state 22

    TK_COLEQ  [reduce using rule 83 (fict_token)]
    $default  reduce using rule 83 (fict_token)


State 130

   97 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 171


State 131

   78 statement: KW_BREAK . ';'

    ';'  shift, and go to state 172


State 132

   79 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 173


State 133

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 174


State 134

   89 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   90             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   91             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 175


State 135

   95 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 176


State 136

   82 statement: ';' .

    $default  reduce using rule 82 (statement)


State 137

   84 fict_token: '#' . TK_IDENT
   86           | '#' . TK_IDENT '[' TK_CONSTINT ']'
   88           | '#' . TK_IDENT '[' TK_IDENT ']'

    TK_IDENT  shift, and go to state 177


State 138

   74 statement: function_call_no_assgn . ';'

    ';'  shift, and go to state 178


State 139

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 179


State 140

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   61 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 61 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 141

   64 statements: statement .

    $default  reduce using rule 64 (statements)


State 142

   66 statement: fict_token . '=' listofexpr ';'
   67          | fict_token . TK_PLUEQ expr ';'
   68          | fict_token . TK_MINEQ expr ';'
   69          | fict_token . TK_MULEQ expr ';'
   70          | fict_token . TK_MODEQ expr ';'
   71          | fict_token . TK_DIVEQ expr ';'
   72          | fict_token . TK_COLEQ expr ';'
   73          | fict_token . '.' function_call_no_assgn ';'

    TK_PLUEQ  shift, and go to state 182
    TK_MINEQ  shift, and go to state 183
    TK_MULEQ  shift, and go to state 184
    TK_DIVEQ  shift, and go to state 185
    TK_MODEQ  shift, and go to state 186
    TK_COLEQ  shift, and go to state 187
    '='       shift, and go to state 188
    '.'       shift, and go to state 189


State 143

   75 statement: if_statement . ';'

    ';'  shift, and go to state 190


State 144

   77 statement: while_statement . ';'

    ';'  shift, and go to state 191


State 145

   76 statement: for_statement . ';'

    ';'  shift, and go to state 192


State 146

   80 statement: listCompr_with_int_values . ';'

    ';'  shift, and go to state 193


State 147

   81 statement: listCompr_with_array . ';'

    ';'  shift, and go to state 194


State 148

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: const_declarations . var_declarations statements
   63                   | const_declarations . statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  121 const_declarations: const_declarations . const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 195
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declaration          go to state 39
    var_declarations           go to state 196
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 149

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: var_declarations . const_declarations statements
   62                   | var_declarations . statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 197
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 198
    const_declaration          go to state 12
    var_declaration            go to state 44
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 150

  125 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 125 (const_declaration)


State 151

  122 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 122 (const_declaration)


State 152

  128 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 128 (const_declaration)


State 153

  129 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 129 (const_declaration)


State 154

  130 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 130 (const_declaration)


State 155

  126 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 199


State 156

  123 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 200


State 157

  127 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 201


State 158

  124 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 202


State 159

  114 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3
  116 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2
  136 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT '[' . ']' ':' data_type

    TK_CONSTINT  shift, and go to state 203
    ']'          shift, and go to state 204


State 160

  118 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  118                 | '#' TK_IDENT ',' . '#' TK_IDENT ':' data_type
  119                 | . '#' TK_IDENT ',' comp_multi_var_1
  119                 | '#' TK_IDENT ',' . comp_multi_var_1

    '#'  shift, and go to state 205

    comp_multi_var_1  go to state 206


State 161

  108 comp_var_declarations: comp_var_declarations comp_var_declaration ';' .

    $default  reduce using rule 108 (comp_var_declarations)


State 162

  143 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  143            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 207


State 163

  141 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  141            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  142            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 208
    ','  shift, and go to state 73


State 164

   17 function_return_type: TK_FUNC_RET data_type .

    $default  reduce using rule 17 (function_return_type)


State 165

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 209


State 166

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 210
    KW_RETURN  shift, and go to state 211


State 167

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: . var_declarations const_declarations statements
   60                   | . const_declarations var_declarations statements
   61                   | . statements
   62                   | . var_declarations statements
   63                   | . const_declarations statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  120 const_declarations: . const_declaration ';'
  121                   | . const_declarations const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  131 var_declarations: . var_declaration ';'
  132                 | . var_declarations var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_RETURN    shift, and go to state 212
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 213
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 168

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    '['  shift, and go to state 214


State 169

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   25                       | TK_IDENT '(' . func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   26                       | TK_IDENT '(' . ')'
   27 func_param_call: . expr
   28                | . func_param_call ',' expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 225
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    func_param_call         go to state 228
    expr                    go to state 229


State 170

   85 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   87           | TK_IDENT '[' . TK_IDENT ']'
  136 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  137        | TK_IDENT '[' . ']' ':' data_type
  141 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | TK_IDENT '[' . ']' ',' multi_var_3
  143 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_IDENT     shift, and go to state 230
    TK_CONSTINT  shift, and go to state 231
    ']'          shift, and go to state 47


State 171

   97 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 232


State 172

   78 statement: KW_BREAK ';' .

    $default  reduce using rule 78 (statement)


State 173

   79 statement: KW_CONTINUE ';' .

    $default  reduce using rule 79 (statement)


State 174

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 12 (main_block)


State 175

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   89 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   90             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   91             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 233
    expr                    go to state 234


State 176

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   95 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   96                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 235
    expr                    go to state 234


State 177

   84 fict_token: '#' TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   86           | '#' TK_IDENT . '[' TK_CONSTINT ']'
   88           | '#' TK_IDENT . '[' TK_IDENT ']'

    '['  shift, and go to state 236

    $default  reduce using rule 84 (fict_token)


State 178

   74 statement: function_call_no_assgn ';' .

    $default  reduce using rule 74 (statement)


State 179

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 237


State 180

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   83 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   85           | TK_IDENT . '[' TK_CONSTINT ']'
   87           | TK_IDENT . '[' TK_IDENT ']'
  101 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_COLEQ  shift, and go to state 168
    '('       shift, and go to state 169
    '['       shift, and go to state 238

    TK_COLEQ  [reduce using rule 83 (fict_token)]
    $default  reduce using rule 83 (fict_token)


State 181

   65 statements: statements statement .

    $default  reduce using rule 65 (statements)


State 182

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   67 statement: fict_token TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 239


State 183

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   68 statement: fict_token TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 240


State 184

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   69 statement: fict_token TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 241


State 185

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   71 statement: fict_token TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 242


State 186

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   70 statement: fict_token TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 243


State 187

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   72 statement: fict_token TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 244


State 188

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   66 statement: fict_token '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 245
    expr                    go to state 234


State 189

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   73 statement: fict_token '.' . function_call_no_assgn ';'

    TK_IDENT  shift, and go to state 246

    function_call_no_assgn  go to state 247


State 190

   75 statement: if_statement ';' .

    $default  reduce using rule 75 (statement)


State 191

   77 statement: while_statement ';' .

    $default  reduce using rule 77 (statement)


State 192

   76 statement: for_statement ';' .

    $default  reduce using rule 76 (statement)


State 193

   80 statement: listCompr_with_int_values ';' .

    $default  reduce using rule 80 (statement)


State 194

   81 statement: listCompr_with_array ';' .

    $default  reduce using rule 81 (statement)


State 195

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   63 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 63 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 196

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: const_declarations var_declarations . statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  132 var_declarations: var_declarations . var_declaration ';'
  133 var_declaration: . one_var
  134                | . multi_var
  135 one_var: . TK_IDENT ':' data_type
  136        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  137        | . TK_IDENT '[' ']' ':' data_type
  138 multi_var: . multi_var_1
  139          | . multi_var_2
  140          | . multi_var_3
  141 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  142            | . TK_IDENT '[' ']' ',' multi_var_3
  143 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  145 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  146            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 248
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    var_declaration            go to state 44
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 197

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   62 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 62 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 198

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: var_declarations const_declarations . statements
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  121 const_declarations: const_declarations . const_declaration ';'
  122 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  123                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  124                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  125                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  126                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  127                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  128                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  129                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  130                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 249
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declaration          go to state 39


State 199

  126 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 126 (const_declaration)


State 200

  123 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 123 (const_declaration)


State 201

  127 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 127 (const_declaration)


State 202

  124 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 124 (const_declaration)


State 203

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2
  136 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 250


State 204

  114 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  115                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3
  137 one_var: TK_IDENT '[' ']' . ':' data_type

    ':'  shift, and go to state 72
    ','  shift, and go to state 251


State 205

  118 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  118                 | '#' TK_IDENT ',' '#' . TK_IDENT ':' data_type
  119                 | '#' . TK_IDENT ',' comp_multi_var_1

    TK_IDENT  shift, and go to state 252


State 206

  119 comp_multi_var_1: '#' TK_IDENT ',' comp_multi_var_1 .

    $default  reduce using rule 119 (comp_multi_var_1)


State 207

  143 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  143            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 253


State 208

  141 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 254


State 209

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 255


State 210

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 211

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 256


State 212

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 257


State 213

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 258


State 214

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 259


State 215

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   33 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']
   56     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 169
    '['  shift, and go to state 260

    '('       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 216

   31 expr: TK_CONSTINT .

    $default  reduce using rule 31 (expr)


State 217

   32 expr: TK_CONSTFLOAT .

    $default  reduce using rule 32 (expr)


State 218

   35 expr: TK_CONSTSTR .

    $default  reduce using rule 35 (expr)


State 219

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   40     | KW_NOT . expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 261


State 220

   37 expr: KW_TRUE .

    $default  reduce using rule 37 (expr)


State 221

   36 expr: KW_FALSE .

    $default  reduce using rule 36 (expr)


State 222

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   54     | '+' . expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 262


State 223

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   53     | '-' . expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 263


State 224

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   55     | '(' . expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 264


State 225

   26 function_call_no_assgn: TK_IDENT '(' ')' .

    $default  reduce using rule 26 (function_call_no_assgn)


State 226

   34 expr: '#' . TK_IDENT

    TK_IDENT  shift, and go to state 265


State 227

   58 expr: function_call_no_assgn .

    $default  reduce using rule 58 (expr)


State 228

   25 function_call_no_assgn: TK_IDENT '(' func_param_call . ')'
   28 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 266
    ','  shift, and go to state 267


State 229

   27 func_param_call: expr .  [')', ',']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 27 (func_param_call)


State 230

   87 fict_token: TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 283


State 231

   85 fict_token: TK_IDENT '[' TK_CONSTINT . ']'
  136 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  143 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 284


State 232

   97 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 285


State 233

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   89 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   90             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   91             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 286
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 287


State 234

   29 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    '+'       [reduce using rule 29 (listofexpr)]
    '-'       [reduce using rule 29 (listofexpr)]
    $default  reduce using rule 29 (listofexpr)


State 235

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   95 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   96                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 288
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 287


State 236

   86 fict_token: '#' TK_IDENT '[' . TK_CONSTINT ']'
   88           | '#' TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 289
    TK_CONSTINT  shift, and go to state 290


State 237

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 13 (main_block)


State 238

   85 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   87           | TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 230
    TK_CONSTINT  shift, and go to state 291


State 239

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   67 statement: fict_token TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 292


State 240

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   68 statement: fict_token TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 293


State 241

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   69 statement: fict_token TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 294


State 242

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   71 statement: fict_token TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 295


State 243

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   70 statement: fict_token TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 296


State 244

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   72 statement: fict_token TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 297


State 245

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   66 statement: fict_token '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ';'            shift, and go to state 298
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 287


State 246

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'

    '('  shift, and go to state 169


State 247

   73 statement: fict_token '.' function_call_no_assgn . ';'

    ';'  shift, and go to state 299


State 248

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 60 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 249

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   59 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 59 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 250

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2
  136 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 96
    ','  shift, and go to state 300


State 251

  114 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  114                 | '#' TK_IDENT '[' ']' ',' . '#' TK_IDENT '[' ']' ':' data_type
  115                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  115                 | '#' TK_IDENT '[' ']' ',' . comp_multi_var_3

    '#'  shift, and go to state 301

    comp_multi_var_3  go to state 302


State 252

  118 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  118                 | '#' TK_IDENT ',' '#' TK_IDENT . ':' data_type
  119                 | '#' TK_IDENT . ',' comp_multi_var_1

    ':'  shift, and go to state 303
    ','  shift, and go to state 160


State 253

  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  143            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 304
    ','  shift, and go to state 97


State 254

  141 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 141 (multi_var_3)


State 255

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 22 (function_block)


State 256

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 305


State 257

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 306


State 258

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 307


State 259

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    KW_FOR    shift, and go to state 308
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282


State 260

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   56     | TK_IDENT '[' . expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 309


State 261

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   40     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 40 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 40 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 40 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 40 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 40 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 40 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 40 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 40 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 40 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 40 and token '.' resolved as shift (KW_NOT < '.').


State 262

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   54     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 54 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 54 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 54 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 54 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 54 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 54 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 54 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 54 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 54 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 54 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 54 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 54 and token '.' resolved as shift (UPLUS < '.').


State 263

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   53     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 53 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 53 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 53 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 53 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 53 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 53 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 53 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 53 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 53 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 53 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 53 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 53 and token '.' resolved as shift (UMINUS < '.').


State 264

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   55     | '(' expr . ')'
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ')'       shift, and go to state 310


State 265

   34 expr: '#' TK_IDENT .

    $default  reduce using rule 34 (expr)


State 266

   25 function_call_no_assgn: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 25 (function_call_no_assgn)


State 267

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   28 func_param_call: func_param_call ',' . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 311


State 268

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   52     | expr TK_POW . expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 312


State 269

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   42     | expr TK_EQEQ . expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 313


State 270

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   41     | expr TK_NOTEQ . expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 314


State 271

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   44     | expr TK_GREEQ . expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 315


State 272

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   43     | expr TK_LESEQ . expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 316


State 273

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   39     | expr KW_AND . expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 317


State 274

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   38     | expr KW_OR . expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 318


State 275

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   45     | expr '<' . expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 319


State 276

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   46     | expr '>' . expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 320


State 277

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   47     | expr '+' . expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 321


State 278

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   48     | expr '-' . expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 322


State 279

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   49     | expr '*' . expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 323


State 280

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   50     | expr '/' . expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 324


State 281

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   51     | expr '%' . expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 325


State 282

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   57     | expr '.' . expr
   58     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 326


State 283

   87 fict_token: TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 87 (fict_token)


State 284

   85 fict_token: TK_IDENT '[' TK_CONSTINT ']' .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
  136 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  144            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 96
    ','  shift, and go to state 97

    $default  reduce using rule 85 (fict_token)


State 285

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 327


State 286

   89 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   90             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   91             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 328


State 287

   30 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    '+'       [reduce using rule 30 (listofexpr)]
    '-'       [reduce using rule 30 (listofexpr)]
    $default  reduce using rule 30 (listofexpr)


State 288

   95 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   96                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 329


State 289

   88 fict_token: '#' TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 330


State 290

   86 fict_token: '#' TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 331


State 291

   85 fict_token: TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 332


State 292

   67 statement: fict_token TK_PLUEQ expr ';' .

    $default  reduce using rule 67 (statement)


State 293

   68 statement: fict_token TK_MINEQ expr ';' .

    $default  reduce using rule 68 (statement)


State 294

   69 statement: fict_token TK_MULEQ expr ';' .

    $default  reduce using rule 69 (statement)


State 295

   71 statement: fict_token TK_DIVEQ expr ';' .

    $default  reduce using rule 71 (statement)


State 296

   70 statement: fict_token TK_MODEQ expr ';' .

    $default  reduce using rule 70 (statement)


State 297

   72 statement: fict_token TK_COLEQ expr ';' .

    $default  reduce using rule 72 (statement)


State 298

   66 statement: fict_token '=' listofexpr ';' .

    $default  reduce using rule 66 (statement)


State 299

   73 statement: fict_token '.' function_call_no_assgn ';' .

    $default  reduce using rule 73 (statement)


State 300

  116 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  117                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . comp_multi_var_2

    '#'  shift, and go to state 333

    comp_multi_var_2  go to state 334


State 301

  114 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  114                 | '#' TK_IDENT '[' ']' ',' '#' . TK_IDENT '[' ']' ':' data_type
  115                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3

    TK_IDENT  shift, and go to state 335


State 302

  115 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' comp_multi_var_3 .

    $default  reduce using rule 115 (comp_multi_var_3)


State 303

  118 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 336


State 304

  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 337


State 305

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 21 (function_block)


State 306

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 338


State 307

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ';'       shift, and go to state 339


State 308

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 340


State 309

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   56     | TK_IDENT '[' expr . ']'
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ']'       shift, and go to state 341


State 310

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 311

   28 func_param_call: func_param_call ',' expr .  [')', ',']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 28 (func_param_call)


State 312

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   52     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 52 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 52 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 52 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 52 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 52 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 52 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 52 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 52 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 52 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 52 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 52 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 52 and token '.' resolved as shift (TK_POW < '.').


State 313

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   42     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 42 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 42 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 42 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 42 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 42 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 42 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 42 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 42 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 42 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 42 and token '.' resolved as shift (TK_EQEQ < '.').


State 314

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   41     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 41 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 41 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 41 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 41 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 41 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 41 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 41 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 41 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 41 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 41 and token '.' resolved as shift (TK_NOTEQ < '.').


State 315

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   44     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '+'     shift, and go to state 277
    '-'     shift, and go to state 278
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 44 and token '<' resolved as reduce (%left '<').
    Conflict between rule 44 and token '>' resolved as reduce (%left '>').
    Conflict between rule 44 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 44 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 44 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 44 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 44 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 44 and token '.' resolved as shift (TK_GREEQ < '.').


State 316

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   43     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '+'     shift, and go to state 277
    '-'     shift, and go to state 278
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 43 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 43 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 43 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 43 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 43 and token '.' resolved as shift (TK_LESEQ < '.').


State 317

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   39     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 39 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 39 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 39 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 39 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 39 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 39 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 39 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 39 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 39 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 39 and token '.' resolved as shift (KW_AND < '.').


State 318

   38 expr: expr . KW_OR expr
   38     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 38 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 38 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 38 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 38 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 38 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 38 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 38 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 38 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 38 and token '.' resolved as shift (KW_OR < '.').


State 319

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   45     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '+'     shift, and go to state 277
    '-'     shift, and go to state 278
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').
    Conflict between rule 45 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 45 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 45 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 45 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 45 and token '.' resolved as shift ('<' < '.').


State 320

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '+'     shift, and go to state 277
    '-'     shift, and go to state 278
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 46 and token '<' resolved as reduce (%left '<').
    Conflict between rule 46 and token '>' resolved as reduce (%left '>').
    Conflict between rule 46 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 46 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 46 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 46 and token '.' resolved as shift ('>' < '.').


State 321

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   47     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 47 and token '+' resolved as reduce (%left '+').
    Conflict between rule 47 and token '-' resolved as reduce (%left '-').
    Conflict between rule 47 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 47 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 47 and token '.' resolved as shift ('+' < '.').


State 322

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   48     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '*'     shift, and go to state 279
    '/'     shift, and go to state 280
    '%'     shift, and go to state 281
    '.'     shift, and go to state 282

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 48 and token '+' resolved as reduce (%left '+').
    Conflict between rule 48 and token '-' resolved as reduce (%left '-').
    Conflict between rule 48 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 48 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 48 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 48 and token '.' resolved as shift ('-' < '.').


State 323

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   49     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 49 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 49 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 49 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 49 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 49 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 49 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').
    Conflict between rule 49 and token '.' resolved as shift ('*' < '.').


State 324

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   50     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 50 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 50 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 50 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 50 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 50 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 50 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').
    Conflict between rule 50 and token '.' resolved as shift ('/' < '.').


State 325

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   51     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   52     | expr . TK_POW expr
   57     | expr . '.' expr

    TK_POW  shift, and go to state 268
    '.'     shift, and go to state 282

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 51 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 51 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 51 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 51 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 51 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 51 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 51 and token '*' resolved as reduce (%left '*').
    Conflict between rule 51 and token '/' resolved as reduce (%left '/').
    Conflict between rule 51 and token '%' resolved as reduce (%left '%').
    Conflict between rule 51 and token '.' resolved as shift ('%' < '.').


State 326

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   57     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']

    $default  reduce using rule 57 (expr)

    Conflict between rule 57 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 57 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 57 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 57 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 57 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 57 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 57 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 57 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 57 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 57 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 57 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 57 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 57 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 57 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 57 and token '.' resolved as reduce (%left '.').


State 327

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ':'       shift, and go to state 342


State 328

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   91             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ELSE      shift, and go to state 343
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 344
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 345
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 329

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   95                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   96                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDWHILE  shift, and go to state 346
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 347
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 330

   88 fict_token: '#' TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 88 (fict_token)


State 331

   86 fict_token: '#' TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 86 (fict_token)


State 332

   85 fict_token: TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 85 (fict_token)


State 333

  116 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

    TK_IDENT  shift, and go to state 348


State 334

  117 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2 .

    $default  reduce using rule 117 (comp_multi_var_2)


State 335

  114 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  114                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT . '[' ']' ':' data_type
  115                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3

    '['  shift, and go to state 349


State 336

  118 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type .

    $default  reduce using rule 118 (comp_multi_var_1)


State 337

  143 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 143 (multi_var_2)


State 338

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 24 (function_block)


State 339

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 350


State 340

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    ':'  shift, and go to state 351


State 341

   56 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 56 (expr)


State 342

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 352


State 343

   92 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 353


State 344

   90 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 90 (if_statement)


State 345

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   91             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ELSE      shift, and go to state 354
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 355
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 346

   96 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 96 (while_statement)


State 347

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   95                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDWHILE  shift, and go to state 356
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 348

  116 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2

    '['  shift, and go to state 357


State 349

  114 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  114                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' . ']' ':' data_type
  115                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3

    ']'  shift, and go to state 358


State 350

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 23 (function_block)


State 351

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT     shift, and go to state 48
    TK_CONSTINT  shift, and go to state 359
    KW_INTEGER   shift, and go to state 49
    KW_SCALAR    shift, and go to state 50
    KW_STR       shift, and go to state 51
    KW_BOOLEAN   shift, and go to state 52

    data_type  go to state 360


State 352

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ']'       shift, and go to state 361
    ':'       shift, and go to state 362


State 353

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 363
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 364
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 354

   91 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 365


State 355

   89 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 89 (if_statement)


State 356

   95 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 95 (while_statement)


State 357

  116 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  117                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2

    TK_CONSTINT  shift, and go to state 366


State 358

  114 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  114                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' . ':' data_type
  115                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3

    ':'  shift, and go to state 367
    ','  shift, and go to state 251


State 359

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 368


State 360

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type . KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    KW_IN  shift, and go to state 369


State 361

   99 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 370


State 362

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . expr '.' expr
   58     | . function_call_no_assgn
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 371


State 363

   94 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 94 (if_statement)


State 364

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   92             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 372
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 365

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   91             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 373
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 374
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 366

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  117                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2

    ']'  shift, and go to state 375


State 367

  114 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 376


State 368

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 377


State 369

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN . TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 378


State 370

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  100              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 379
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 380
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 371

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | expr . '.' expr
   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 268
    TK_EQEQ   shift, and go to state 269
    TK_NOTEQ  shift, and go to state 270
    TK_GREEQ  shift, and go to state 271
    TK_LESEQ  shift, and go to state 272
    KW_AND    shift, and go to state 273
    KW_OR     shift, and go to state 274
    '<'       shift, and go to state 275
    '>'       shift, and go to state 276
    '+'       shift, and go to state 277
    '-'       shift, and go to state 278
    '*'       shift, and go to state 279
    '/'       shift, and go to state 280
    '%'       shift, and go to state 281
    '.'       shift, and go to state 282
    ']'       shift, and go to state 381


State 372

   92 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 92 (if_statement)


State 373

   93 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 93 (if_statement)


State 374

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   91             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 382
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 375

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  116                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  117                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2

    ':'  shift, and go to state 383
    ','  shift, and go to state 300


State 376

  114 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 114 (comp_multi_var_3)


State 377

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 384


State 378

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT . KW_OF TK_CONSTINT ']' ':' data_type

    KW_OF  shift, and go to state 385


State 379

  100 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 100 (for_statement)


State 380

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   99              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 386
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 381

   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 387


State 382

   91 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 91 (if_statement)


State 383

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 388


State 384

  101 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 101 (listCompr_with_int_values)


State 385

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF . TK_CONSTINT ']' ':' data_type

    TK_CONSTINT  shift, and go to state 389


State 386

   99 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 99 (for_statement)


State 387

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 statements: . statement
   65           | . statements statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   97              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   98              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 390
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 391
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 388

  116 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 116 (comp_multi_var_2)


State 389

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 392


State 390

   98 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 98 (for_statement)


State 391

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: statements . statement
   66 statement: . fict_token '=' listofexpr ';'
   67          | . fict_token TK_PLUEQ expr ';'
   68          | . fict_token TK_MINEQ expr ';'
   69          | . fict_token TK_MULEQ expr ';'
   70          | . fict_token TK_MODEQ expr ';'
   71          | . fict_token TK_DIVEQ expr ';'
   72          | . fict_token TK_COLEQ expr ';'
   73          | . fict_token '.' function_call_no_assgn ';'
   74          | . function_call_no_assgn ';'
   75          | . if_statement ';'
   76          | . for_statement ';'
   77          | . while_statement ';'
   78          | . KW_BREAK ';'
   79          | . KW_CONTINUE ';'
   80          | . listCompr_with_int_values ';'
   81          | . listCompr_with_array ';'
   82          | . ';'
   83 fict_token: . TK_IDENT
   84           | . '#' TK_IDENT
   85           | . TK_IDENT '[' TK_CONSTINT ']'
   86           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   87           | . TK_IDENT '[' TK_IDENT ']'
   88           | . '#' TK_IDENT '[' TK_IDENT ']'
   89 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   91             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   92             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   93             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   95 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   96                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   97 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   97              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   98              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   99              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  100              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  101 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  102 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 393
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 392

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 394


State 393

   97 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 97 (for_statement)


State 394

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' . data_type
  147 data_type: . KW_INTEGER
  148          | . KW_SCALAR
  149          | . KW_STR
  150          | . KW_BOOLEAN
  151          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 395


State 395

  102 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 102 (listCompr_with_array)
