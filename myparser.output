Nonterminals useless in grammar

    in_loop_stmts


Terminals unused in grammar

    KW_ENDCOMP
    KW_OF
    KW_COMP


State 129 conflicts: 2 shift/reduce
State 167 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    7 function_param: %empty
    8               | var_declaration
    9               | function_param ',' var_declaration

   10 function_return_type: TK_FUNC_RET KW_INTEGER
   11                     | TK_FUNC_RET KW_SCALAR
   12                     | TK_FUNC_RET KW_STR
   13                     | TK_FUNC_RET KW_BOOLEAN

   14 function_blocks: function_block ';'
   15                | function_blocks function_block ';'

   16 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   21 listofexpr: expr
   22           | listofexpr expr

   23 expr: TK_CONSTINT
   24     | TK_CONSTFLOAT
   25     | TK_IDENT
   26     | expr KW_OR expr
   27     | expr KW_AND expr
   28     | KW_NOT expr
   29     | expr TK_NOTEQ expr
   30     | expr TK_EQEQ expr
   31     | expr TK_LESEQ expr
   32     | expr TK_GREEQ expr
   33     | expr '<' expr
   34     | expr '>' expr
   35     | expr '+' expr
   36     | expr '-' expr
   37     | expr '*' expr
   38     | expr '/' expr
   39     | expr '%' expr
   40     | expr TK_POW expr
   41     | '-' expr
   42     | '+' expr
   43     | '(' expr ')'
   44     | TK_IDENT '[' expr ']'
   45     | expr '.' expr

   46 listofinstructions: var_declarations const_declarations statements
   47                   | const_declarations var_declarations statements
   48                   | statements

   49 statements: statement
   50           | statements statement

   51 statement: TK_IDENT '=' listofexpr ';'
   52          | TK_IDENT TK_PLUEQ expr ';'
   53          | TK_IDENT TK_MINEQ expr ';'
   54          | TK_IDENT TK_MULEQ expr ';'
   55          | TK_IDENT TK_MODEQ expr ';'
   56          | TK_IDENT TK_DIVEQ expr ';'
   57          | TK_IDENT TK_COLEQ expr ';'
   58          | if_statement ';'
   59          | for_statement ';'
   60          | while_statement ';'
   61          | KW_BREAK ';'
   62          | KW_CONTINUE ';'
   63          | ';'

   64 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   70 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   76 const_declarations: const_declaration ';'
   77                   | const_declarations const_declaration ';'

   78 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

   83 var_declarations: var_declaration ';'
   84                 | var_declarations var_declaration ';'

   85 var_declaration: TK_IDENT ':' data_type

   86 data_type: KW_INTEGER
   87          | KW_SCALAR
   88          | KW_STR
   89          | KW_BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 39
    '(' (40) 5 6 16 17 18 19 20 43 64 65 66 67 68 69 70 71
    ')' (41) 5 6 16 17 18 19 20 43 64 65 66 67 68 69 70 71
    '*' (42) 37
    '+' (43) 35 42
    ',' (44) 9
    '-' (45) 36 41
    '.' (46) 45
    '/' (47) 38
    ':' (58) 5 6 16 17 18 19 20 64 65 66 67 68 69 70 71 72 73 74 75 78 79 80 81 82 85
    ';' (59) 5 6 14 15 17 18 19 20 51 52 53 54 55 56 57 58 59 60 61 62 63 76 77 83 84
    '<' (60) 33
    '=' (61) 51 78 79 80 81 82
    '>' (62) 34
    '[' (91) 44 72 73 74 75
    ']' (93) 44 72 73 74 75
    error (256)
    TK_IDENT <str> (258) 16 17 18 19 20 25 44 51 52 53 54 55 56 57 72 73 74 75 78 79 80 81 82 85
    TK_CONSTINT <str> (259) 23 79
    TK_CONSTFLOAT <str> (260) 24 78
    TK_CONSTSTR <str> (261) 80
    TK_POW (262) 40
    TK_PLUEQ (263) 52
    TK_MINEQ (264) 53
    TK_MULEQ (265) 54
    TK_DIVEQ (266) 56
    TK_MODEQ (267) 55
    TK_EQEQ (268) 30
    TK_NOTEQ (269) 29
    TK_GREEQ (270) 32
    TK_LESEQ (271) 31
    TK_COLEQ (272) 57
    TK_FUNC_RET (273) 10 11 12 13
    KW_AND (274) 27
    KW_OR (275) 26
    KW_NOT (276) 28
    KW_INTEGER (277) 10 79 86
    KW_FOR (278) 72 73 74 75
    KW_BREAK (279) 61
    KW_DEF (280) 5 6 16 17 18 19 20
    KW_ENDCOMP (281)
    KW_SCALAR (282) 11 78 87
    KW_CONST (283) 78 79 80 81 82
    KW_IN (284) 72 73 74 75
    KW_CONTINUE (285) 62
    KW_ENDDEF (286) 5 6 16 17 18 19 20
    KW_OF (287)
    KW_STR (288) 12 80 88
    KW_IF (289) 64 65 66 67 68 69
    KW_ENDFOR (290) 72 73 74 75
    KW_MAIN (291) 5 6
    KW_BOOLEAN (292) 13 81 82 89
    KW_ELSE (293) 66 67 68 69
    KW_WHILE (294) 70 71
    KW_RETURN (295) 17 18 19 20
    KW_ENDIF (296) 64 65 66 67 68 69
    KW_ENDWHILE (297) 70 71
    KW_COMP (298)
    KW_TRUE (299) 81
    KW_FALSE (300) 82
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program (65)
        on left: 1 2 3 4
        on right: 0
    main_block <str> (66)
        on left: 5 6
        on right: 1 2 3 4
    function_param <str> (67)
        on left: 7 8 9
        on right: 9 16 17 18 19 20
    function_return_type <str> (68)
        on left: 10 11 12 13
        on right: 19 20
    function_blocks <str> (69)
        on left: 14 15
        on right: 2 3 4 15
    function_block <str> (70)
        on left: 16 17 18 19 20
        on right: 14 15
    listofexpr <str> (71)
        on left: 21 22
        on right: 22 51 64 65 66 67 68 69 70 71
    expr <str> (72)
        on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
        on right: 19 20 21 22 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 52 53 54 55 56 57 72 73 74 75
    listofinstructions <str> (73)
        on left: 46 47 48
        on right: 6 16 17 19
    statements <str> (74)
        on left: 49 50
        on right: 46 47 48 50 64 66 67 68 70 72 74
    statement <str> (75)
        on left: 51 52 53 54 55 56 57 58 59 60 61 62 63
        on right: 49 50
    if_statement <str> (76)
        on left: 64 65 66 67 68 69
        on right: 58
    while_statement <str> (77)
        on left: 70 71
        on right: 60
    for_statement <str> (78)
        on left: 72 73 74 75
        on right: 59
    const_declarations <str> (79)
        on left: 76 77
        on right: 4 46 47 77
    const_declaration <str> (80)
        on left: 78 79 80 81 82
        on right: 76 77
    var_declarations <str> (81)
        on left: 83 84
        on right: 3 4 46 47 84
    var_declaration <str> (82)
        on left: 85
        on right: 8 9 83 84
    data_type <str> (83)
        on left: 86 87 88 89
        on right: 85


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   76 const_declarations: . const_declaration ';'
   77                   | . const_declarations const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    program             go to state 4
    main_block          go to state 5
    function_blocks     go to state 6
    function_block      go to state 7
    const_declarations  go to state 8
    const_declaration   go to state 9
    var_declarations    go to state 10
    var_declaration     go to state 11


State 1

   85 var_declaration: TK_IDENT . ':' data_type

    ':'  shift, and go to state 12


State 2

    5 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_block: KW_DEF . TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 13
    KW_MAIN   shift, and go to state 14


State 3

   78 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 15


State 4

    0 $accept: program . $end

    $end  shift, and go to state 16


State 5

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 6

    2 program: function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 17
    function_block  go to state 18


State 7

   14 function_blocks: function_block . ';'

    ';'  shift, and go to state 19


State 8

    4 program: const_declarations . var_declarations function_blocks main_block
   77 const_declarations: const_declarations . const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 20
    var_declarations   go to state 21
    var_declaration    go to state 11


State 9

   76 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 22


State 10

    3 program: var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   84 var_declarations: var_declarations . var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 23

    function_blocks  go to state 24
    function_block   go to state 7
    var_declaration  go to state 25


State 11

   83 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 26


State 12

   85 var_declaration: TK_IDENT ':' . data_type
   86 data_type: . KW_INTEGER
   87          | . KW_SCALAR
   88          | . KW_STR
   89          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 27
    KW_SCALAR   shift, and go to state 28
    KW_STR      shift, and go to state 29
    KW_BOOLEAN  shift, and go to state 30

    data_type  go to state 31


State 13

   16 function_block: KW_DEF TK_IDENT . '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT . '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT . '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT . '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT . '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 32


State 14

    5 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 33


State 15

   78 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
   80                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
   81                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
   82                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 34


State 16

    0 $accept: program $end .

    $default  accept


State 17

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 18

   15 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 35


State 19

   14 function_blocks: function_block ';' .

    $default  reduce using rule 14 (function_blocks)


State 20

   77 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 36


State 21

    4 program: const_declarations var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   84 var_declarations: var_declarations . var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 23

    function_blocks  go to state 37
    function_block   go to state 7
    var_declaration  go to state 25


State 22

   76 const_declarations: const_declaration ';' .

    $default  reduce using rule 76 (const_declarations)


State 23

   16 function_block: KW_DEF . TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 13


State 24

    3 program: var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 38
    function_block  go to state 18


State 25

   84 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 39


State 26

   83 var_declarations: var_declaration ';' .

    $default  reduce using rule 83 (var_declarations)


State 27

   86 data_type: KW_INTEGER .

    $default  reduce using rule 86 (data_type)


State 28

   87 data_type: KW_SCALAR .

    $default  reduce using rule 87 (data_type)


State 29

   88 data_type: KW_STR .

    $default  reduce using rule 88 (data_type)


State 30

   89 data_type: KW_BOOLEAN .

    $default  reduce using rule 89 (data_type)


State 31

   85 var_declaration: TK_IDENT ':' data_type .

    $default  reduce using rule 85 (var_declaration)


State 32

    7 function_param: . %empty  [')', ',']
    8               | . var_declaration
    9               | . function_param ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' . function_param ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' . function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' . function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' . function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' . function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 7 (function_param)

    function_param   go to state 40
    var_declaration  go to state 41


State 33

    5 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 42


State 34

   78 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
   79                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
   80                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
   81                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
   82                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 43
    TK_CONSTFLOAT  shift, and go to state 44
    TK_CONSTSTR    shift, and go to state 45
    KW_TRUE        shift, and go to state 46
    KW_FALSE       shift, and go to state 47


State 35

   15 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 15 (function_blocks)


State 36

   77 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 77 (const_declarations)


State 37

    4 program: const_declarations var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 48
    function_block  go to state 18


State 38

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 39

   84 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 84 (var_declarations)


State 40

    9 function_param: function_param . ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' function_param . ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param . ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 49
    ','  shift, and go to state 50


State 41

    8 function_param: var_declaration .

    $default  reduce using rule 8 (function_param)


State 42

    5 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 51


State 43

   79 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 52


State 44

   78 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 53


State 45

   80 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 54


State 46

   81 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 55


State 47

   82 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 56


State 48

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 49

   10 function_return_type: . TK_FUNC_RET KW_INTEGER
   11                     | . TK_FUNC_RET KW_SCALAR
   12                     | . TK_FUNC_RET KW_STR
   13                     | . TK_FUNC_RET KW_BOOLEAN
   16 function_block: KW_DEF TK_IDENT '(' function_param ')' . ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param ')' . ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 57
    ':'          shift, and go to state 58

    function_return_type  go to state 59


State 50

    9 function_param: function_param ',' . var_declaration
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 60


State 51

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   46 listofinstructions: . var_declarations const_declarations statements
   47                   | . const_declarations var_declarations statements
   48                   | . statements
   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   76 const_declarations: . const_declaration ';'
   77                   | . const_declarations const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 61
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 64
    KW_ENDDEF    shift, and go to state 65
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    listofinstructions  go to state 69
    statements          go to state 70
    statement           go to state 71
    if_statement        go to state 72
    while_statement     go to state 73
    for_statement       go to state 74
    const_declarations  go to state 75
    const_declaration   go to state 9
    var_declarations    go to state 76
    var_declaration     go to state 11


State 52

   79 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 77


State 53

   78 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 78


State 54

   80 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 79


State 55

   81 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 80


State 56

   82 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 81


State 57

   10 function_return_type: TK_FUNC_RET . KW_INTEGER
   11                     | TK_FUNC_RET . KW_SCALAR
   12                     | TK_FUNC_RET . KW_STR
   13                     | TK_FUNC_RET . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 82
    KW_SCALAR   shift, and go to state 83
    KW_STR      shift, and go to state 84
    KW_BOOLEAN  shift, and go to state 85


State 58

   16 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' . listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param ')' ':' . KW_RETURN ';' KW_ENDDEF
   46 listofinstructions: . var_declarations const_declarations statements
   47                   | . const_declarations var_declarations statements
   48                   | . statements
   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   76 const_declarations: . const_declaration ';'
   77                   | . const_declarations const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 61
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_RETURN    shift, and go to state 86
    ';'          shift, and go to state 68

    listofinstructions  go to state 87
    statements          go to state 70
    statement           go to state 71
    if_statement        go to state 72
    while_statement     go to state 73
    for_statement       go to state 74
    const_declarations  go to state 75
    const_declaration   go to state 9
    var_declarations    go to state 76
    var_declaration     go to state 11


State 59

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 88


State 60

    9 function_param: function_param ',' var_declaration .

    $default  reduce using rule 9 (function_param)


State 61

   51 statement: TK_IDENT . '=' listofexpr ';'
   52          | TK_IDENT . TK_PLUEQ expr ';'
   53          | TK_IDENT . TK_MINEQ expr ';'
   54          | TK_IDENT . TK_MULEQ expr ';'
   55          | TK_IDENT . TK_MODEQ expr ';'
   56          | TK_IDENT . TK_DIVEQ expr ';'
   57          | TK_IDENT . TK_COLEQ expr ';'
   85 var_declaration: TK_IDENT . ':' data_type

    TK_PLUEQ  shift, and go to state 89
    TK_MINEQ  shift, and go to state 90
    TK_MULEQ  shift, and go to state 91
    TK_DIVEQ  shift, and go to state 92
    TK_MODEQ  shift, and go to state 93
    TK_COLEQ  shift, and go to state 94
    '='       shift, and go to state 95
    ':'       shift, and go to state 12


State 62

   72 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 96


State 63

   61 statement: KW_BREAK . ';'

    ';'  shift, and go to state 97


State 64

   62 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 98


State 65

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 99


State 66

   64 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   65             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   66             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 100


State 67

   70 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 101


State 68

   63 statement: ';' .

    $default  reduce using rule 63 (statement)


State 69

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 102


State 70

   48 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    $default  reduce using rule 48 (listofinstructions)

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 71

   49 statements: statement .

    $default  reduce using rule 49 (statements)


State 72

   58 statement: if_statement . ';'

    ';'  shift, and go to state 105


State 73

   60 statement: while_statement . ';'

    ';'  shift, and go to state 106


State 74

   59 statement: for_statement . ';'

    ';'  shift, and go to state 107


State 75

   47 listofinstructions: const_declarations . var_declarations statements
   77 const_declarations: const_declarations . const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 20
    var_declarations   go to state 108
    var_declaration    go to state 11


State 76

   46 listofinstructions: var_declarations . const_declarations statements
   76 const_declarations: . const_declaration ';'
   77                   | . const_declarations const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   84 var_declarations: var_declarations . var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declarations  go to state 109
    const_declaration   go to state 9
    var_declaration     go to state 25


State 77

   79 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 79 (const_declaration)


State 78

   78 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 78 (const_declaration)


State 79

   80 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 80 (const_declaration)


State 80

   81 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 81 (const_declaration)


State 81

   82 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 82 (const_declaration)


State 82

   10 function_return_type: TK_FUNC_RET KW_INTEGER .

    $default  reduce using rule 10 (function_return_type)


State 83

   11 function_return_type: TK_FUNC_RET KW_SCALAR .

    $default  reduce using rule 11 (function_return_type)


State 84

   12 function_return_type: TK_FUNC_RET KW_STR .

    $default  reduce using rule 12 (function_return_type)


State 85

   13 function_return_type: TK_FUNC_RET KW_BOOLEAN .

    $default  reduce using rule 13 (function_return_type)


State 86

   18 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 110


State 87

   16 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions . KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 111
    KW_RETURN  shift, and go to state 112


State 88

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   46 listofinstructions: . var_declarations const_declarations statements
   47                   | . const_declarations var_declarations statements
   48                   | . statements
   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   76 const_declarations: . const_declaration ';'
   77                   | . const_declarations const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   83 var_declarations: . var_declaration ';'
   84                 | . var_declarations var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 61
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_RETURN    shift, and go to state 113
    ';'          shift, and go to state 68

    listofinstructions  go to state 114
    statements          go to state 70
    statement           go to state 71
    if_statement        go to state 72
    while_statement     go to state 73
    for_statement       go to state 74
    const_declarations  go to state 75
    const_declaration   go to state 9
    var_declarations    go to state 76
    var_declaration     go to state 11


State 89

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   52 statement: TK_IDENT TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 122


State 90

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   53 statement: TK_IDENT TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 123


State 91

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   54 statement: TK_IDENT TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 124


State 92

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   56 statement: TK_IDENT TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 125


State 93

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   55 statement: TK_IDENT TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 126


State 94

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   57 statement: TK_IDENT TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 127


State 95

   21 listofexpr: . expr
   22           | . listofexpr expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   51 statement: TK_IDENT '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    listofexpr  go to state 128
    expr        go to state 129


State 96

   72 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 130


State 97

   61 statement: KW_BREAK ';' .

    $default  reduce using rule 61 (statement)


State 98

   62 statement: KW_CONTINUE ';' .

    $default  reduce using rule 62 (statement)


State 99

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 5 (main_block)


State 100

   21 listofexpr: . expr
   22           | . listofexpr expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   64 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   65             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   66             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    listofexpr  go to state 131
    expr        go to state 129


State 101

   21 listofexpr: . expr
   22           | . listofexpr expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   70 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   71                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    listofexpr  go to state 132
    expr        go to state 129


State 102

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 133


State 103

   51 statement: TK_IDENT . '=' listofexpr ';'
   52          | TK_IDENT . TK_PLUEQ expr ';'
   53          | TK_IDENT . TK_MINEQ expr ';'
   54          | TK_IDENT . TK_MULEQ expr ';'
   55          | TK_IDENT . TK_MODEQ expr ';'
   56          | TK_IDENT . TK_DIVEQ expr ';'
   57          | TK_IDENT . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 89
    TK_MINEQ  shift, and go to state 90
    TK_MULEQ  shift, and go to state 91
    TK_DIVEQ  shift, and go to state 92
    TK_MODEQ  shift, and go to state 93
    TK_COLEQ  shift, and go to state 94
    '='       shift, and go to state 95


State 104

   50 statements: statements statement .

    $default  reduce using rule 50 (statements)


State 105

   58 statement: if_statement ';' .

    $default  reduce using rule 58 (statement)


State 106

   60 statement: while_statement ';' .

    $default  reduce using rule 60 (statement)


State 107

   59 statement: for_statement ';' .

    $default  reduce using rule 59 (statement)


State 108

   47 listofinstructions: const_declarations var_declarations . statements
   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   84 var_declarations: var_declarations . var_declaration ';'
   85 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 61
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statements       go to state 134
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74
    var_declaration  go to state 25


State 109

   46 listofinstructions: var_declarations const_declarations . statements
   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   77 const_declarations: const_declarations . const_declaration ';'
   78 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   79                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   80                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   81                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   82                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statements         go to state 135
    statement          go to state 71
    if_statement       go to state 72
    while_statement    go to state 73
    for_statement      go to state 74
    const_declaration  go to state 20


State 110

   18 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 136


State 111

   16 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 16 (function_block)


State 112

   17 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 137


State 113

   20 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 138


State 114

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 139


State 115

   25 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';']
   44     | TK_IDENT . '[' expr ']'

    '['  shift, and go to state 140

    $default  reduce using rule 25 (expr)


State 116

   23 expr: TK_CONSTINT .

    $default  reduce using rule 23 (expr)


State 117

   24 expr: TK_CONSTFLOAT .

    $default  reduce using rule 24 (expr)


State 118

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   28     | KW_NOT . expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 141


State 119

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   42     | '+' . expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 142


State 120

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   41     | '-' . expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 143


State 121

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   43     | '(' . expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 144


State 122

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   52 statement: TK_IDENT TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 160


State 123

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   53 statement: TK_IDENT TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 161


State 124

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   54 statement: TK_IDENT TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 162


State 125

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   56 statement: TK_IDENT TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 163


State 126

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   55 statement: TK_IDENT TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 164


State 127

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   57 statement: TK_IDENT TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 165


State 128

   22 listofexpr: listofexpr . expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   51 statement: TK_IDENT '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121
    ';'            shift, and go to state 166

    expr  go to state 167


State 129

   21 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_NOT, '+', '-', '(', ')', ';']
   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    '+'       [reduce using rule 21 (listofexpr)]
    '-'       [reduce using rule 21 (listofexpr)]
    $default  reduce using rule 21 (listofexpr)


State 130

   72 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 168


State 131

   22 listofexpr: listofexpr . expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   64 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   65             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   66             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121
    ')'            shift, and go to state 169

    expr  go to state 167


State 132

   22 listofexpr: listofexpr . expr
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   70 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   71                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121
    ')'            shift, and go to state 170

    expr  go to state 167


State 133

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 134

   47 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    $default  reduce using rule 47 (listofinstructions)

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 135

   46 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    $default  reduce using rule 46 (listofinstructions)

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 136

   18 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 18 (function_block)


State 137

   17 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 171


State 138

   20 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 172


State 139

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 173


State 140

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   44     | TK_IDENT '[' . expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 174


State 141

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   28     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 28 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 28 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 28 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 28 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 28 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 28 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 28 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 28 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 28 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 28 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 28 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 28 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 28 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 28 and token '.' resolved as shift (KW_NOT < '.').


State 142

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   42     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 42 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 42 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 42 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 42 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 42 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 42 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 42 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 42 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 42 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 42 and token '.' resolved as shift (UPLUS < '.').


State 143

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   41     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 41 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 41 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 41 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 41 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 41 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 41 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 41 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 41 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 41 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 41 and token '.' resolved as shift (UMINUS < '.').


State 144

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   43     | '(' expr . ')'
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ')'       shift, and go to state 175


State 145

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   40     | expr TK_POW . expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 176


State 146

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   30     | expr TK_EQEQ . expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 177


State 147

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   29     | expr TK_NOTEQ . expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 178


State 148

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   32     | expr TK_GREEQ . expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 179


State 149

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   31     | expr TK_LESEQ . expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 180


State 150

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   27     | expr KW_AND . expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 181


State 151

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   26     | expr KW_OR . expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 182


State 152

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   33     | expr '<' . expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 183


State 153

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   34     | expr '>' . expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 184


State 154

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   35     | expr '+' . expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 185


State 155

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   36     | expr '-' . expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 186


State 156

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   37     | expr '*' . expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 187


State 157

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   38     | expr '/' . expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 188


State 158

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   39     | expr '%' . expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 189


State 159

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   45     | expr '.' . expr

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 190


State 160

   52 statement: TK_IDENT TK_PLUEQ expr ';' .

    $default  reduce using rule 52 (statement)


State 161

   53 statement: TK_IDENT TK_MINEQ expr ';' .

    $default  reduce using rule 53 (statement)


State 162

   54 statement: TK_IDENT TK_MULEQ expr ';' .

    $default  reduce using rule 54 (statement)


State 163

   56 statement: TK_IDENT TK_DIVEQ expr ';' .

    $default  reduce using rule 56 (statement)


State 164

   55 statement: TK_IDENT TK_MODEQ expr ';' .

    $default  reduce using rule 55 (statement)


State 165

   57 statement: TK_IDENT TK_COLEQ expr ';' .

    $default  reduce using rule 57 (statement)


State 166

   51 statement: TK_IDENT '=' listofexpr ';' .

    $default  reduce using rule 51 (statement)


State 167

   22 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_NOT, '+', '-', '(', ')', ';']
   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    '+'       [reduce using rule 22 (listofexpr)]
    '-'       [reduce using rule 22 (listofexpr)]
    $default  reduce using rule 22 (listofexpr)


State 168

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 191


State 169

   64 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   65             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   66             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   68             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 192


State 170

   70 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   71                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 193


State 171

   17 function_block: KW_DEF TK_IDENT '(' function_param ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 17 (function_block)


State 172

   20 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 194


State 173

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ';'       shift, and go to state 195


State 174

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   44     | TK_IDENT '[' expr . ']'
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ']'       shift, and go to state 196


State 175

   43 expr: '(' expr ')' .

    $default  reduce using rule 43 (expr)


State 176

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   40     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 40 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 40 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 40 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 40 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 40 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 40 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 40 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 40 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 40 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 40 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 40 and token '.' resolved as shift (TK_POW < '.').


State 177

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   30     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 30 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 30 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 30 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 30 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 30 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 30 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 30 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 30 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 30 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 30 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 30 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 30 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 30 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 30 and token '.' resolved as shift (TK_EQEQ < '.').


State 178

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   29     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 29 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 29 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 29 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 29 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 29 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 29 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 29 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 29 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 29 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 29 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 29 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 29 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 29 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 29 and token '.' resolved as shift (TK_NOTEQ < '.').


State 179

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   32     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '+'     shift, and go to state 154
    '-'     shift, and go to state 155
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 32 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 32 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 32 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 32 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 32 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 32 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 32 and token '<' resolved as reduce (%left '<').
    Conflict between rule 32 and token '>' resolved as reduce (%left '>').
    Conflict between rule 32 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 32 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 32 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 32 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 32 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 32 and token '.' resolved as shift (TK_GREEQ < '.').


State 180

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   31     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '+'     shift, and go to state 154
    '-'     shift, and go to state 155
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 31 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 31 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 31 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 31 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 31 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 31 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 31 and token '<' resolved as reduce (%left '<').
    Conflict between rule 31 and token '>' resolved as reduce (%left '>').
    Conflict between rule 31 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 31 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 31 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 31 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 31 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 31 and token '.' resolved as shift (TK_LESEQ < '.').


State 181

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   27     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 27 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 27 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 27 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 27 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 27 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 27 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 27 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 27 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 27 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 27 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 27 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 27 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 27 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 27 and token '.' resolved as shift (KW_AND < '.').


State 182

   26 expr: expr . KW_OR expr
   26     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 26 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 26 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 26 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 26 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 26 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 26 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 26 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 26 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 26 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 26 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 26 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 26 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 26 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 26 and token '.' resolved as shift (KW_OR < '.').


State 183

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   33     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '+'     shift, and go to state 154
    '-'     shift, and go to state 155
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 33 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 33 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 33 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 33 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 33 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 33 and token '<' resolved as reduce (%left '<').
    Conflict between rule 33 and token '>' resolved as reduce (%left '>').
    Conflict between rule 33 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 33 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 33 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 33 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 33 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 33 and token '.' resolved as shift ('<' < '.').


State 184

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   34     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '+'     shift, and go to state 154
    '-'     shift, and go to state 155
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 34 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 34 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 34 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 34 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 34 and token '<' resolved as reduce (%left '<').
    Conflict between rule 34 and token '>' resolved as reduce (%left '>').
    Conflict between rule 34 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 34 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 34 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 34 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 34 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 34 and token '.' resolved as shift ('>' < '.').


State 185

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   35     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';']
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 35 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 35 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 35 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 35 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 35 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 35 and token '+' resolved as reduce (%left '+').
    Conflict between rule 35 and token '-' resolved as reduce (%left '-').
    Conflict between rule 35 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 35 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 35 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 35 and token '.' resolved as shift ('+' < '.').


State 186

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   36     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';']
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '*'     shift, and go to state 156
    '/'     shift, and go to state 157
    '%'     shift, and go to state 158
    '.'     shift, and go to state 159

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 36 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 36 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 36 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 36 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 36 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 36 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 36 and token '+' resolved as reduce (%left '+').
    Conflict between rule 36 and token '-' resolved as reduce (%left '-').
    Conflict between rule 36 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 36 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 36 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 36 and token '.' resolved as shift ('-' < '.').


State 187

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   37     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 37 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 37 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 37 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 37 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 37 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 37 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 37 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 37 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 37 and token '*' resolved as reduce (%left '*').
    Conflict between rule 37 and token '/' resolved as reduce (%left '/').
    Conflict between rule 37 and token '%' resolved as reduce (%left '%').
    Conflict between rule 37 and token '.' resolved as shift ('*' < '.').


State 188

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   38     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 38 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 38 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 38 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 38 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 38 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 38 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 38 and token '*' resolved as reduce (%left '*').
    Conflict between rule 38 and token '/' resolved as reduce (%left '/').
    Conflict between rule 38 and token '%' resolved as reduce (%left '%').
    Conflict between rule 38 and token '.' resolved as shift ('/' < '.').


State 189

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   39     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   40     | expr . TK_POW expr
   45     | expr . '.' expr

    TK_POW  shift, and go to state 145
    '.'     shift, and go to state 159

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 39 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 39 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 39 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 39 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 39 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 39 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 39 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 39 and token '*' resolved as reduce (%left '*').
    Conflict between rule 39 and token '/' resolved as reduce (%left '/').
    Conflict between rule 39 and token '%' resolved as reduce (%left '%').
    Conflict between rule 39 and token '.' resolved as shift ('%' < '.').


State 190

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   45     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';']

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 45 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 45 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 45 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 45 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 45 and token '.' resolved as reduce (%left '.').


State 191

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ':'       shift, and go to state 197


State 192

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   64             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   65             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   66             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   68             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ELSE      shift, and go to state 198
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 199
    ';'          shift, and go to state 68

    statements       go to state 200
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 193

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   70                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   71                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDWHILE  shift, and go to state 201
    ';'          shift, and go to state 68

    statements       go to state 202
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 194

   20 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 195

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 203


State 196

   44 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 44 (expr)


State 197

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 204


State 198

   67 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   69             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 205


State 199

   65 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 65 (if_statement)


State 200

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   64             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   66             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   68             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ELSE      shift, and go to state 206
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 207
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 201

   71 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 71 (while_statement)


State 202

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   70                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDWHILE  shift, and go to state 208
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 203

   19 function_block: KW_DEF TK_IDENT '(' function_param ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 19 (function_block)


State 204

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ']'       shift, and go to state 209
    ':'       shift, and go to state 210


State 205

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   69             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 211
    ';'          shift, and go to state 68

    statements       go to state 212
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 206

   66 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   68             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 213


State 207

   64 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 64 (if_statement)


State 208

   70 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 70 (while_statement)


State 209

   74 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 214


State 210

   23 expr: . TK_CONSTINT
   24     | . TK_CONSTFLOAT
   25     | . TK_IDENT
   26     | . expr KW_OR expr
   27     | . expr KW_AND expr
   28     | . KW_NOT expr
   29     | . expr TK_NOTEQ expr
   30     | . expr TK_EQEQ expr
   31     | . expr TK_LESEQ expr
   32     | . expr TK_GREEQ expr
   33     | . expr '<' expr
   34     | . expr '>' expr
   35     | . expr '+' expr
   36     | . expr '-' expr
   37     | . expr '*' expr
   38     | . expr '/' expr
   39     | . expr '%' expr
   40     | . expr TK_POW expr
   41     | . '-' expr
   42     | . '+' expr
   43     | . '(' expr ')'
   44     | . TK_IDENT '[' expr ']'
   45     | . expr '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 115
    TK_CONSTINT    shift, and go to state 116
    TK_CONSTFLOAT  shift, and go to state 117
    KW_NOT         shift, and go to state 118
    '+'            shift, and go to state 119
    '-'            shift, and go to state 120
    '('            shift, and go to state 121

    expr  go to state 215


State 211

   69 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 69 (if_statement)


State 212

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   67             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 216
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 213

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   66             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   68             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 217
    ';'          shift, and go to state 68

    statements       go to state 218
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 214

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   75              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ENDFOR    shift, and go to state 219
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statements       go to state 220
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 215

   26 expr: expr . KW_OR expr
   27     | expr . KW_AND expr
   29     | expr . TK_NOTEQ expr
   30     | expr . TK_EQEQ expr
   31     | expr . TK_LESEQ expr
   32     | expr . TK_GREEQ expr
   33     | expr . '<' expr
   34     | expr . '>' expr
   35     | expr . '+' expr
   36     | expr . '-' expr
   37     | expr . '*' expr
   38     | expr . '/' expr
   39     | expr . '%' expr
   40     | expr . TK_POW expr
   45     | expr . '.' expr
   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 145
    TK_EQEQ   shift, and go to state 146
    TK_NOTEQ  shift, and go to state 147
    TK_GREEQ  shift, and go to state 148
    TK_LESEQ  shift, and go to state 149
    KW_AND    shift, and go to state 150
    KW_OR     shift, and go to state 151
    '<'       shift, and go to state 152
    '>'       shift, and go to state 153
    '+'       shift, and go to state 154
    '-'       shift, and go to state 155
    '*'       shift, and go to state 156
    '/'       shift, and go to state 157
    '%'       shift, and go to state 158
    '.'       shift, and go to state 159
    ']'       shift, and go to state 221


State 216

   67 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 67 (if_statement)


State 217

   68 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 68 (if_statement)


State 218

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   66             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_WHILE     shift, and go to state 67
    KW_ENDIF     shift, and go to state 222
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 219

   75 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 75 (for_statement)


State 220

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   74              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ENDFOR    shift, and go to state 223
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 221

   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 224


State 222

   66 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 66 (if_statement)


State 223

   74 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 74 (for_statement)


State 224

   49 statements: . statement
   50           | . statements statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   72              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   73              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ENDFOR    shift, and go to state 225
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statements       go to state 226
    statement        go to state 71
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 225

   73 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 73 (for_statement)


State 226

   50 statements: statements . statement
   51 statement: . TK_IDENT '=' listofexpr ';'
   52          | . TK_IDENT TK_PLUEQ expr ';'
   53          | . TK_IDENT TK_MINEQ expr ';'
   54          | . TK_IDENT TK_MULEQ expr ';'
   55          | . TK_IDENT TK_MODEQ expr ';'
   56          | . TK_IDENT TK_DIVEQ expr ';'
   57          | . TK_IDENT TK_COLEQ expr ';'
   58          | . if_statement ';'
   59          | . for_statement ';'
   60          | . while_statement ';'
   61          | . KW_BREAK ';'
   62          | . KW_CONTINUE ';'
   63          | . ';'
   64 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   65             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   66             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   67             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   68             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   69             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   70 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   71                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   72 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   72              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   73              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   74              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   75              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 103
    KW_FOR       shift, and go to state 62
    KW_BREAK     shift, and go to state 63
    KW_CONTINUE  shift, and go to state 64
    KW_IF        shift, and go to state 66
    KW_ENDFOR    shift, and go to state 227
    KW_WHILE     shift, and go to state 67
    ';'          shift, and go to state 68

    statement        go to state 104
    if_statement     go to state 72
    while_statement  go to state 73
    for_statement    go to state 74


State 227

   72 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 72 (for_statement)
