State 119 conflicts: 1 shift/reduce
State 173 conflicts: 1 shift/reduce
State 207 conflicts: 1 shift/reduce
State 226 conflicts: 2 shift/reduce
State 277 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block
    5        | comp_declarations const_declarations var_declarations function_blocks main_block

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    8 function_param_decl: %empty
    9                    | var_declaration
   10                    | function_param_decl ',' var_declaration

   11 function_return_type: TK_FUNC_RET KW_INTEGER
   12                     | TK_FUNC_RET KW_SCALAR
   13                     | TK_FUNC_RET KW_STR
   14                     | TK_FUNC_RET KW_BOOLEAN

   15 function_blocks: function_block ';'
   16                | function_blocks function_block ';'

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   22 function_call_no_assgn: TK_IDENT '(' func_param_call ')'
   23                       | TK_IDENT '(' ')'

   24 func_param_call: expr
   25                | func_param_call ',' expr

   26 listofexpr: expr
   27           | listofexpr expr

   28 expr: TK_CONSTINT
   29     | TK_CONSTFLOAT
   30     | TK_IDENT
   31     | '#' TK_IDENT
   32     | TK_CONSTSTR
   33     | KW_FALSE
   34     | KW_TRUE
   35     | expr KW_OR expr
   36     | expr KW_AND expr
   37     | KW_NOT expr
   38     | expr TK_NOTEQ expr
   39     | expr TK_EQEQ expr
   40     | expr TK_LESEQ expr
   41     | expr TK_GREEQ expr
   42     | expr '<' expr
   43     | expr '>' expr
   44     | expr '+' expr
   45     | expr '-' expr
   46     | expr '*' expr
   47     | expr '/' expr
   48     | expr '%' expr
   49     | expr TK_POW expr
   50     | '-' expr
   51     | '+' expr
   52     | '(' expr ')'
   53     | TK_IDENT '[' expr ']'
   54     | expr '.' expr
   55     | function_call_no_assgn

   56 listofinstructions: var_declarations const_declarations statements
   57                   | const_declarations var_declarations statements
   58                   | statements
   59                   | var_declarations statements
   60                   | const_declarations statements

   61 statements: statement
   62           | statements statement

   63 statement: fict_token '=' listofexpr ';'
   64          | fict_token TK_PLUEQ expr ';'
   65          | fict_token TK_MINEQ expr ';'
   66          | fict_token TK_MULEQ expr ';'
   67          | fict_token TK_MODEQ expr ';'
   68          | fict_token TK_DIVEQ expr ';'
   69          | fict_token TK_COLEQ expr ';'
   70          | if_statement ';'
   71          | for_statement ';'
   72          | while_statement ';'
   73          | KW_BREAK ';'
   74          | KW_CONTINUE ';'
   75          | function_call_no_assgn ';'
   76          | listCompr_with_int_values ';'
   77          | listCompr_with_array ';'
   78          | ';'

   79 fict_token: TK_IDENT
   80           | '#' TK_IDENT
   81           | TK_IDENT '[' TK_CONSTINT ']'
   82           | '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | TK_IDENT '[' TK_IDENT ']'
   84           | '#' TK_IDENT '[' TK_IDENT ']'

   85 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   91 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

   99 comp_declarations: comp_declaration ';'
  100                  | comp_declarations comp_declaration ';'

  101 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

  102 listof_comp_instructions: comp_var_declarations function_blocks

  103 comp_var_declarations: comp_var_declaration ';'
  104                      | comp_var_declarations comp_var_declaration ';'

  105 comp_var_declaration: '#' one_var
  106                     | comp_multi_var

  107 comp_multi_var: comp_multi_var_1
  108               | comp_multi_var_2
  109               | comp_multi_var_3

  110 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | '#' TK_IDENT '[' ']' ',' comp_multi_var_3

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

  114 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  115                 | '#' TK_IDENT ',' comp_multi_var_1

  116 const_declarations: const_declaration ';'
  117                   | const_declarations const_declaration ';'

  118 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

  127 var_declarations: var_declaration ';'
  128                 | var_declarations var_declaration ';'

  129 var_declaration: one_var
  130                | multi_var

  131 one_var: TK_IDENT ':' data_type
  132        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT '[' ']' ':' data_type

  134 multi_var: multi_var_1
  135          | multi_var_2
  136          | multi_var_3

  137 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT '[' ']' ',' multi_var_3

  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  141 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  142            | TK_IDENT ',' multi_var_1

  143 data_type: KW_INTEGER
  144          | KW_SCALAR
  145          | KW_STR
  146          | KW_BOOLEAN
  147          | TK_IDENT


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 31 80 82 84 105 110 111 112 113 114 115
    '%' (37) 48
    '(' (40) 6 7 17 18 19 20 21 22 23 52 85 86 87 88 89 90 91 92
    ')' (41) 6 7 17 18 19 20 21 22 23 52 85 86 87 88 89 90 91 92
    '*' (42) 46
    '+' (43) 44 51 119 122
    ',' (44) 10 25 110 111 112 113 114 115 137 138 139 140 141 142
    '-' (45) 45 50 120 123
    '.' (46) 54
    '/' (47) 47
    ':' (58) 6 7 17 18 19 20 21 85 86 87 88 89 90 91 92 93 94 95 96 97 98 101 110 112 114 118 119 120 121 122 123 124 125 126 131 132 133 137 139 141
    ';' (59) 6 7 15 16 18 19 20 21 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 99 100 103 104 116 117 127 128
    '<' (60) 42
    '=' (61) 63 118 119 120 121 122 123 124 125 126
    '>' (62) 43
    '[' (91) 53 81 82 83 84 93 94 95 96 97 98 110 111 112 113 132 133 137 138 139 140
    ']' (93) 53 81 82 83 84 93 94 95 96 97 98 110 111 112 113 132 133 137 138 139 140
    error (256)
    TK_IDENT <str> (258) 17 18 19 20 21 22 23 30 31 53 79 80 81 82 83 84 93 94 95 96 97 98 101 110 111 112 113 114 115 118 119 120 121 122 123 124 125 126 131 132 133 137 138 139 140 141 142 147
    TK_CONSTINT <str> (259) 28 81 82 97 98 112 113 121 122 123 132 139 140
    TK_CONSTFLOAT <str> (260) 29 118 119 120
    TK_CONSTSTR <str> (261) 32 124
    TK_POW (262) 49
    TK_PLUEQ (263) 64
    TK_MINEQ (264) 65
    TK_MULEQ (265) 66
    TK_DIVEQ (266) 68
    TK_MODEQ (267) 67
    TK_EQEQ (268) 39
    TK_NOTEQ (269) 38
    TK_GREEQ (270) 41
    TK_LESEQ (271) 40
    TK_COLEQ (272) 69 97 98
    TK_FUNC_RET (273) 11 12 13 14
    KW_AND (274) 36
    KW_OR (275) 35
    KW_NOT (276) 37
    KW_INTEGER (277) 11 121 122 123 143
    KW_FOR (278) 93 94 95 96 97 98
    KW_BREAK (279) 73
    KW_DEF (280) 6 7 17 18 19 20 21
    KW_ENDCOMP (281) 101
    KW_SCALAR (282) 12 118 119 120 144
    KW_CONST (283) 118 119 120 121 122 123 124 125 126
    KW_IN (284) 93 94 95 96 98
    KW_CONTINUE (285) 74
    KW_ENDDEF (286) 6 7 17 18 19 20 21
    KW_OF (287) 98
    KW_STR (288) 13 124 145
    KW_IF (289) 85 86 87 88 89 90
    KW_ENDFOR (290) 93 94 95 96
    KW_MAIN (291) 6 7
    KW_BOOLEAN (292) 14 125 126 146
    KW_ELSE (293) 87 88 89 90
    KW_WHILE (294) 91 92
    KW_RETURN (295) 18 19 20 21
    KW_ENDIF (296) 85 86 87 88 89 90
    KW_ENDWHILE (297) 91 92
    KW_COMP (298) 101
    KW_TRUE (299) 34 125
    KW_FALSE (300) 33 126
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5
        on right: 0
    main_block <str> (67)
        on left: 6 7
        on right: 1 2 3 4 5
    function_param_decl <str> (68)
        on left: 8 9 10
        on right: 10 17 18 19 20 21
    function_return_type <str> (69)
        on left: 11 12 13 14
        on right: 20 21
    function_blocks <str> (70)
        on left: 15 16
        on right: 2 3 4 5 16 102
    function_block <str> (71)
        on left: 17 18 19 20 21
        on right: 15 16
    function_call_no_assgn <str> (72)
        on left: 22 23
        on right: 55 75
    func_param_call <str> (73)
        on left: 24 25
        on right: 22 25
    listofexpr <str> (74)
        on left: 26 27
        on right: 27 63 85 86 87 88 89 90 91 92
    expr <str> (75)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55
        on right: 20 21 24 25 26 27 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 64 65 66 67 68 69 93 94 95 96 97 98
    listofinstructions <str> (76)
        on left: 56 57 58 59 60
        on right: 7 17 18 20
    statements <str> (77)
        on left: 61 62
        on right: 56 57 58 59 60 62 85 87 88 89 91 93 95
    statement <str> (78)
        on left: 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
        on right: 61 62
    fict_token <str> (79)
        on left: 79 80 81 82 83 84
        on right: 63 64 65 66 67 68 69
    if_statement <str> (80)
        on left: 85 86 87 88 89 90
        on right: 70
    while_statement <str> (81)
        on left: 91 92
        on right: 72
    for_statement <str> (82)
        on left: 93 94 95 96
        on right: 71
    listCompr_with_int_values <str> (83)
        on left: 97
        on right: 76
    listCompr_with_array <str> (84)
        on left: 98
        on right: 77
    comp_declarations <str> (85)
        on left: 99 100
        on right: 5 100
    comp_declaration <str> (86)
        on left: 101
        on right: 99 100
    listof_comp_instructions <str> (87)
        on left: 102
        on right: 101
    comp_var_declarations <str> (88)
        on left: 103 104
        on right: 102 104
    comp_var_declaration <str> (89)
        on left: 105 106
        on right: 103 104
    comp_multi_var <str> (90)
        on left: 107 108 109
        on right: 106
    comp_multi_var_3 <str> (91)
        on left: 110 111
        on right: 109 111
    comp_multi_var_2 <str> (92)
        on left: 112 113
        on right: 108 113
    comp_multi_var_1 <str> (93)
        on left: 114 115
        on right: 107 115
    const_declarations <str> (94)
        on left: 116 117
        on right: 4 5 56 57 60 117
    const_declaration <str> (95)
        on left: 118 119 120 121 122 123 124 125 126
        on right: 116 117
    var_declarations <str> (96)
        on left: 127 128
        on right: 3 4 5 56 57 59 128
    var_declaration <str> (97)
        on left: 129 130
        on right: 9 10 127 128
    one_var <str> (98)
        on left: 131 132 133
        on right: 105 129
    multi_var <str> (99)
        on left: 134 135 136
        on right: 130
    multi_var_3 <str> (100)
        on left: 137 138
        on right: 136 138
    multi_var_2 <str> (101)
        on left: 139 140
        on right: 135 140
    multi_var_1 <str> (102)
        on left: 141 142
        on right: 134 142
    data_type <str> (103)
        on left: 143 144 145 146 147
        on right: 97 98 110 112 114 131 132 133 137 139 141


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5        | . comp_declarations const_declarations var_declarations function_blocks main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   99 comp_declarations: . comp_declaration ';'
  100                  | . comp_declarations comp_declaration ';'
  101 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    program             go to state 5
    main_block          go to state 6
    function_blocks     go to state 7
    function_block      go to state 8
    comp_declarations   go to state 9
    comp_declaration    go to state 10
    const_declarations  go to state 11
    const_declaration   go to state 12
    var_declarations    go to state 13
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 1

  131 one_var: TK_IDENT . ':' data_type
  132        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT . '[' ']' ':' data_type
  137 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT . '[' ']' ',' multi_var_3
  139 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  142            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 20
    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 2

    6 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   17 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23
    KW_MAIN   shift, and go to state 24


State 3

  118 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 25


State 4

  101 comp_declaration: KW_COMP . TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

    TK_IDENT  shift, and go to state 26


State 5

    0 $accept: program . $end

    $end  shift, and go to state 27


State 6

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 7

    2 program: function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 28
    function_block  go to state 29


State 8

   15 function_blocks: function_block . ';'

    ';'  shift, and go to state 30


State 9

    5 program: comp_declarations . const_declarations var_declarations function_blocks main_block
  100 comp_declarations: comp_declarations . comp_declaration ';'
  101 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    comp_declaration    go to state 31
    const_declarations  go to state 32
    const_declaration   go to state 12


State 10

   99 comp_declarations: comp_declaration . ';'

    ';'  shift, and go to state 33


State 11

    4 program: const_declarations . var_declarations function_blocks main_block
  117 const_declarations: const_declarations . const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 34
    var_declarations   go to state 35
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 12

  116 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 36


State 13

    3 program: var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  128 var_declarations: var_declarations . var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 38
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 14

  127 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 40


State 15

  129 var_declaration: one_var .

    $default  reduce using rule 129 (var_declaration)


State 16

  130 var_declaration: multi_var .

    $default  reduce using rule 130 (var_declaration)


State 17

  136 multi_var: multi_var_3 .

    $default  reduce using rule 136 (multi_var)


State 18

  135 multi_var: multi_var_2 .

    $default  reduce using rule 135 (multi_var)


State 19

  134 multi_var: multi_var_1 .

    $default  reduce using rule 134 (multi_var)


State 20

  132 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT '[' . ']' ':' data_type
  137 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT '[' . ']' ',' multi_var_3
  139 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 41
    ']'          shift, and go to state 42


State 21

  131 one_var: TK_IDENT ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 48


State 22

  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  141            | TK_IDENT ',' . TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1
  142            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 49

    multi_var_1  go to state 50


State 23

   17 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 51


State 24

    6 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 52


State 25

  118 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
  122                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
  125                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
  126                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 53


State 26

  101 comp_declaration: KW_COMP TK_IDENT . ':' listof_comp_instructions KW_ENDCOMP

    ':'  shift, and go to state 54


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 29

   16 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 55


State 30

   15 function_blocks: function_block ';' .

    $default  reduce using rule 15 (function_blocks)


State 31

  100 comp_declarations: comp_declarations comp_declaration . ';'

    ';'  shift, and go to state 56


State 32

    5 program: comp_declarations const_declarations . var_declarations function_blocks main_block
  117 const_declarations: const_declarations . const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 34
    var_declarations   go to state 57
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 33

   99 comp_declarations: comp_declaration ';' .

    $default  reduce using rule 99 (comp_declarations)


State 34

  117 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 58


State 35

    4 program: const_declarations var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  128 var_declarations: var_declarations . var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 59
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 36

  116 const_declarations: const_declaration ';' .

    $default  reduce using rule 116 (const_declarations)


State 37

   17 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23


State 38

    3 program: var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 60
    function_block  go to state 29


State 39

  128 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 61


State 40

  127 var_declarations: var_declaration ';' .

    $default  reduce using rule 127 (var_declarations)


State 41

  132 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  139 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 62


State 42

  133 one_var: TK_IDENT '[' ']' . ':' data_type
  137 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 63
    ','  shift, and go to state 64


State 43

  147 data_type: TK_IDENT .

    $default  reduce using rule 147 (data_type)


State 44

  143 data_type: KW_INTEGER .

    $default  reduce using rule 143 (data_type)


State 45

  144 data_type: KW_SCALAR .

    $default  reduce using rule 144 (data_type)


State 46

  145 data_type: KW_STR .

    $default  reduce using rule 145 (data_type)


State 47

  146 data_type: KW_BOOLEAN .

    $default  reduce using rule 146 (data_type)


State 48

  131 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 131 (one_var)


State 49

  141 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  141            | TK_IDENT ',' TK_IDENT . ':' data_type
  142            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 65
    ','  shift, and go to state 22


State 50

  142 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 142 (multi_var_1)


State 51

    8 function_param_decl: . %empty  [')', ',']
    9                    | . var_declaration
   10                    | . function_param_decl ',' var_declaration
   17 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 8 (function_param_decl)

    function_param_decl  go to state 66
    var_declaration      go to state 67
    one_var              go to state 15
    multi_var            go to state 16
    multi_var_3          go to state 17
    multi_var_2          go to state 18
    multi_var_1          go to state 19


State 52

    6 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 68


State 53

  118 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
  119                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
  122                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTINT ':' KW_INTEGER
  123                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTINT ':' KW_INTEGER
  124                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
  125                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
  126                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 69
    TK_CONSTFLOAT  shift, and go to state 70
    TK_CONSTSTR    shift, and go to state 71
    KW_TRUE        shift, and go to state 72
    KW_FALSE       shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75


State 54

  101 comp_declaration: KW_COMP TK_IDENT ':' . listof_comp_instructions KW_ENDCOMP
  102 listof_comp_instructions: . comp_var_declarations function_blocks
  103 comp_var_declarations: . comp_var_declaration ';'
  104                      | . comp_var_declarations comp_var_declaration ';'
  105 comp_var_declaration: . '#' one_var
  106                     | . comp_multi_var
  107 comp_multi_var: . comp_multi_var_1
  108               | . comp_multi_var_2
  109               | . comp_multi_var_3
  110 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  112 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  114 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  115                 | . '#' TK_IDENT ',' comp_multi_var_1

    '#'  shift, and go to state 76

    listof_comp_instructions  go to state 77
    comp_var_declarations     go to state 78
    comp_var_declaration      go to state 79
    comp_multi_var            go to state 80
    comp_multi_var_3          go to state 81
    comp_multi_var_2          go to state 82
    comp_multi_var_1          go to state 83


State 55

   16 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 16 (function_blocks)


State 56

  100 comp_declarations: comp_declarations comp_declaration ';' .

    $default  reduce using rule 100 (comp_declarations)


State 57

    5 program: comp_declarations const_declarations var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  128 var_declarations: var_declarations . var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 84
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 58

  117 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 117 (const_declarations)


State 59

    4 program: const_declarations var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 85
    function_block  go to state 29


State 60

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 61

  128 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 128 (var_declarations)


State 62

  132 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 86
    ','  shift, and go to state 87


State 63

  133 one_var: TK_IDENT '[' ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 88


State 64

  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  137            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  138            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 89

    multi_var_3  go to state 90


State 65

  141 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 91


State 66

   10 function_param_decl: function_param_decl . ',' var_declaration
   17 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 92
    ','  shift, and go to state 93


State 67

    9 function_param_decl: var_declaration .

    $default  reduce using rule 9 (function_param_decl)


State 68

    6 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 94


State 69

  121 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 95


State 70

  118 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 96


State 71

  124 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 97


State 72

  125 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 98


State 73

  126 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 99


State 74

  119 const_declaration: KW_CONST TK_IDENT '=' '+' . TK_CONSTFLOAT ':' KW_SCALAR
  122                  | KW_CONST TK_IDENT '=' '+' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 100
    TK_CONSTFLOAT  shift, and go to state 101


State 75

  120 const_declaration: KW_CONST TK_IDENT '=' '-' . TK_CONSTFLOAT ':' KW_SCALAR
  123                  | KW_CONST TK_IDENT '=' '-' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 102
    TK_CONSTFLOAT  shift, and go to state 103


State 76

  105 comp_var_declaration: '#' . one_var
  110 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3
  112 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  114 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  115                 | '#' . TK_IDENT ',' comp_multi_var_1
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type

    TK_IDENT  shift, and go to state 104

    one_var  go to state 105


State 77

  101 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions . KW_ENDCOMP

    KW_ENDCOMP  shift, and go to state 106


State 78

   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  102 listof_comp_instructions: comp_var_declarations . function_blocks
  104 comp_var_declarations: comp_var_declarations . comp_var_declaration ';'
  105 comp_var_declaration: . '#' one_var
  106                     | . comp_multi_var
  107 comp_multi_var: . comp_multi_var_1
  108               | . comp_multi_var_2
  109               | . comp_multi_var_3
  110 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  112 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  114 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  115                 | . '#' TK_IDENT ',' comp_multi_var_1

    KW_DEF  shift, and go to state 37
    '#'     shift, and go to state 76

    function_blocks       go to state 107
    function_block        go to state 8
    comp_var_declaration  go to state 108
    comp_multi_var        go to state 80
    comp_multi_var_3      go to state 81
    comp_multi_var_2      go to state 82
    comp_multi_var_1      go to state 83


State 79

  103 comp_var_declarations: comp_var_declaration . ';'

    ';'  shift, and go to state 109


State 80

  106 comp_var_declaration: comp_multi_var .

    $default  reduce using rule 106 (comp_var_declaration)


State 81

  109 comp_multi_var: comp_multi_var_3 .

    $default  reduce using rule 109 (comp_multi_var)


State 82

  108 comp_multi_var: comp_multi_var_2 .

    $default  reduce using rule 108 (comp_multi_var)


State 83

  107 comp_multi_var: comp_multi_var_1 .

    $default  reduce using rule 107 (comp_multi_var)


State 84

    5 program: comp_declarations const_declarations var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 110
    function_block  go to state 29


State 85

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 86

  132 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 111


State 87

  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  139            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  140            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 112

    multi_var_2  go to state 113


State 88

  133 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 133 (one_var)


State 89

  137 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  137            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  138            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 114


State 90

  138 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 138 (multi_var_3)


State 91

  141 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 141 (multi_var_1)


State 92

   11 function_return_type: . TK_FUNC_RET KW_INTEGER
   12                     | . TK_FUNC_RET KW_SCALAR
   13                     | . TK_FUNC_RET KW_STR
   14                     | . TK_FUNC_RET KW_BOOLEAN
   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 115
    ':'          shift, and go to state 116

    function_return_type  go to state 117


State 93

   10 function_param_decl: function_param_decl ',' . var_declaration
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 118
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 94

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: . var_declarations const_declarations statements
   57                   | . const_declarations var_declarations statements
   58                   | . statements
   59                   | . var_declarations statements
   60                   | . const_declarations statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_ENDDEF    shift, and go to state 123
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    listofinstructions         go to state 129
    statements                 go to state 130
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declarations         go to state 138
    const_declaration          go to state 12
    var_declarations           go to state 139
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 95

  121 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 140


State 96

  118 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 141


State 97

  124 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 142


State 98

  125 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 143


State 99

  126 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 144


State 100

  122 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 145


State 101

  119 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 146


State 102

  123 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 147


State 103

  120 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 148


State 104

  110 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3
  112 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2
  114 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  115                 | '#' TK_IDENT . ',' comp_multi_var_1
  131 one_var: TK_IDENT . ':' data_type
  132        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT . '[' ']' ':' data_type

    '['  shift, and go to state 149
    ':'  shift, and go to state 21
    ','  shift, and go to state 150


State 105

  105 comp_var_declaration: '#' one_var .

    $default  reduce using rule 105 (comp_var_declaration)


State 106

  101 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP .

    $default  reduce using rule 101 (comp_declaration)


State 107

   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  102 listof_comp_instructions: comp_var_declarations function_blocks .  [KW_ENDCOMP]

    KW_DEF  shift, and go to state 37

    $default  reduce using rule 102 (listof_comp_instructions)

    function_block  go to state 29


State 108

  104 comp_var_declarations: comp_var_declarations comp_var_declaration . ';'

    ';'  shift, and go to state 151


State 109

  103 comp_var_declarations: comp_var_declaration ';' .

    $default  reduce using rule 103 (comp_var_declarations)


State 110

    5 program: comp_declarations const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 5 (program)


State 111

  132 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 132 (one_var)


State 112

  139 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  139            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 152


State 113

  140 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 140 (multi_var_2)


State 114

  137 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  137            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  138            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 153


State 115

   11 function_return_type: TK_FUNC_RET . KW_INTEGER
   12                     | TK_FUNC_RET . KW_SCALAR
   13                     | TK_FUNC_RET . KW_STR
   14                     | TK_FUNC_RET . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 154
    KW_SCALAR   shift, and go to state 155
    KW_STR      shift, and go to state 156
    KW_BOOLEAN  shift, and go to state 157


State 116

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: . var_declarations const_declarations statements
   57                   | . const_declarations var_declarations statements
   58                   | . statements
   59                   | . var_declarations statements
   60                   | . const_declarations statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_RETURN    shift, and go to state 158
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    listofinstructions         go to state 159
    statements                 go to state 130
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declarations         go to state 138
    const_declaration          go to state 12
    var_declarations           go to state 139
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 117

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 160


State 118

   10 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 10 (function_param_decl)


State 119

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   79 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
   81           | TK_IDENT . '[' TK_CONSTINT ']'
   83           | TK_IDENT . '[' TK_IDENT ']'
   97 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  131 one_var: TK_IDENT . ':' data_type
  132        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT . '[' ']' ':' data_type
  137 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT . '[' ']' ',' multi_var_3
  139 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  142            | TK_IDENT . ',' multi_var_1

    TK_COLEQ  shift, and go to state 161
    '('       shift, and go to state 162
    '['       shift, and go to state 163
    ':'       shift, and go to state 21
    ','       shift, and go to state 22

    TK_COLEQ  [reduce using rule 79 (fict_token)]
    $default  reduce using rule 79 (fict_token)


State 120

   93 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 164


State 121

   73 statement: KW_BREAK . ';'

    ';'  shift, and go to state 165


State 122

   74 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 166


State 123

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 167


State 124

   85 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   86             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   87             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 168


State 125

   91 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 169


State 126

   78 statement: ';' .

    $default  reduce using rule 78 (statement)


State 127

   80 fict_token: '#' . TK_IDENT
   82           | '#' . TK_IDENT '[' TK_CONSTINT ']'
   84           | '#' . TK_IDENT '[' TK_IDENT ']'

    TK_IDENT  shift, and go to state 170


State 128

   75 statement: function_call_no_assgn . ';'

    ';'  shift, and go to state 171


State 129

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 172


State 130

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   58 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    $default  reduce using rule 58 (listofinstructions)

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 131

   61 statements: statement .

    $default  reduce using rule 61 (statements)


State 132

   63 statement: fict_token . '=' listofexpr ';'
   64          | fict_token . TK_PLUEQ expr ';'
   65          | fict_token . TK_MINEQ expr ';'
   66          | fict_token . TK_MULEQ expr ';'
   67          | fict_token . TK_MODEQ expr ';'
   68          | fict_token . TK_DIVEQ expr ';'
   69          | fict_token . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 175
    TK_MINEQ  shift, and go to state 176
    TK_MULEQ  shift, and go to state 177
    TK_DIVEQ  shift, and go to state 178
    TK_MODEQ  shift, and go to state 179
    TK_COLEQ  shift, and go to state 180
    '='       shift, and go to state 181


State 133

   70 statement: if_statement . ';'

    ';'  shift, and go to state 182


State 134

   72 statement: while_statement . ';'

    ';'  shift, and go to state 183


State 135

   71 statement: for_statement . ';'

    ';'  shift, and go to state 184


State 136

   76 statement: listCompr_with_int_values . ';'

    ';'  shift, and go to state 185


State 137

   77 statement: listCompr_with_array . ';'

    ';'  shift, and go to state 186


State 138

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   57 listofinstructions: const_declarations . var_declarations statements
   60                   | const_declarations . statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  117 const_declarations: const_declarations . const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 187
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declaration          go to state 34
    var_declarations           go to state 188
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 139

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: var_declarations . const_declarations statements
   59                   | var_declarations . statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  128 var_declarations: var_declarations . var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 189
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declarations         go to state 190
    const_declaration          go to state 12
    var_declaration            go to state 39
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 140

  121 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 121 (const_declaration)


State 141

  118 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 118 (const_declaration)


State 142

  124 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 124 (const_declaration)


State 143

  125 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 125 (const_declaration)


State 144

  126 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 126 (const_declaration)


State 145

  122 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 191


State 146

  119 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 192


State 147

  123 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 193


State 148

  120 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 194


State 149

  110 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3
  112 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2
  132 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT '[' . ']' ':' data_type

    TK_CONSTINT  shift, and go to state 195
    ']'          shift, and go to state 196


State 150

  114 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  114                 | '#' TK_IDENT ',' . '#' TK_IDENT ':' data_type
  115                 | . '#' TK_IDENT ',' comp_multi_var_1
  115                 | '#' TK_IDENT ',' . comp_multi_var_1

    '#'  shift, and go to state 197

    comp_multi_var_1  go to state 198


State 151

  104 comp_var_declarations: comp_var_declarations comp_var_declaration ';' .

    $default  reduce using rule 104 (comp_var_declarations)


State 152

  139 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  139            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 199


State 153

  137 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  137            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  138            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 200
    ','  shift, and go to state 64


State 154

   11 function_return_type: TK_FUNC_RET KW_INTEGER .

    $default  reduce using rule 11 (function_return_type)


State 155

   12 function_return_type: TK_FUNC_RET KW_SCALAR .

    $default  reduce using rule 12 (function_return_type)


State 156

   13 function_return_type: TK_FUNC_RET KW_STR .

    $default  reduce using rule 13 (function_return_type)


State 157

   14 function_return_type: TK_FUNC_RET KW_BOOLEAN .

    $default  reduce using rule 14 (function_return_type)


State 158

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 201


State 159

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 202
    KW_RETURN  shift, and go to state 203


State 160

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: . var_declarations const_declarations statements
   57                   | . const_declarations var_declarations statements
   58                   | . statements
   59                   | . var_declarations statements
   60                   | . const_declarations statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  116 const_declarations: . const_declaration ';'
  117                   | . const_declarations const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  127 var_declarations: . var_declaration ';'
  128                 | . var_declarations var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_RETURN    shift, and go to state 204
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    listofinstructions         go to state 205
    statements                 go to state 130
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declarations         go to state 138
    const_declaration          go to state 12
    var_declarations           go to state 139
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 161

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    '['  shift, and go to state 206


State 162

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | TK_IDENT '(' . func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   23                       | TK_IDENT '(' . ')'
   24 func_param_call: . expr
   25                | . func_param_call ',' expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    ')'            shift, and go to state 217
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    func_param_call         go to state 220
    expr                    go to state 221


State 163

   81 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   83           | TK_IDENT '[' . TK_IDENT ']'
  132 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  133        | TK_IDENT '[' . ']' ':' data_type
  137 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | TK_IDENT '[' . ']' ',' multi_var_3
  139 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_IDENT     shift, and go to state 222
    TK_CONSTINT  shift, and go to state 223
    ']'          shift, and go to state 42


State 164

   93 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 224


State 165

   73 statement: KW_BREAK ';' .

    $default  reduce using rule 73 (statement)


State 166

   74 statement: KW_CONTINUE ';' .

    $default  reduce using rule 74 (statement)


State 167

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 168

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   85 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   86             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   87             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    listofexpr              go to state 225
    expr                    go to state 226


State 169

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   91 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   92                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    listofexpr              go to state 227
    expr                    go to state 226


State 170

   80 fict_token: '#' TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
   82           | '#' TK_IDENT . '[' TK_CONSTINT ']'
   84           | '#' TK_IDENT . '[' TK_IDENT ']'

    '['  shift, and go to state 228

    $default  reduce using rule 80 (fict_token)


State 171

   75 statement: function_call_no_assgn ';' .

    $default  reduce using rule 75 (statement)


State 172

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 229


State 173

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   79 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
   81           | TK_IDENT . '[' TK_CONSTINT ']'
   83           | TK_IDENT . '[' TK_IDENT ']'
   97 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_COLEQ  shift, and go to state 161
    '('       shift, and go to state 162
    '['       shift, and go to state 230

    TK_COLEQ  [reduce using rule 79 (fict_token)]
    $default  reduce using rule 79 (fict_token)


State 174

   62 statements: statements statement .

    $default  reduce using rule 62 (statements)


State 175

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   64 statement: fict_token TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 231


State 176

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   65 statement: fict_token TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 232


State 177

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   66 statement: fict_token TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 233


State 178

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   68 statement: fict_token TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 234


State 179

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   67 statement: fict_token TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 235


State 180

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   69 statement: fict_token TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 236


State 181

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   63 statement: fict_token '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    listofexpr              go to state 237
    expr                    go to state 226


State 182

   70 statement: if_statement ';' .

    $default  reduce using rule 70 (statement)


State 183

   72 statement: while_statement ';' .

    $default  reduce using rule 72 (statement)


State 184

   71 statement: for_statement ';' .

    $default  reduce using rule 71 (statement)


State 185

   76 statement: listCompr_with_int_values ';' .

    $default  reduce using rule 76 (statement)


State 186

   77 statement: listCompr_with_array ';' .

    $default  reduce using rule 77 (statement)


State 187

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    $default  reduce using rule 60 (listofinstructions)

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 188

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   57 listofinstructions: const_declarations var_declarations . statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  128 var_declarations: var_declarations . var_declaration ';'
  129 var_declaration: . one_var
  130                | . multi_var
  131 one_var: . TK_IDENT ':' data_type
  132        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  133        | . TK_IDENT '[' ']' ':' data_type
  134 multi_var: . multi_var_1
  135          | . multi_var_2
  136          | . multi_var_3
  137 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  138            | . TK_IDENT '[' ']' ',' multi_var_3
  139 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  141 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  142            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 119
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 238
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    var_declaration            go to state 39
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 189

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   59 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    $default  reduce using rule 59 (listofinstructions)

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 190

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: var_declarations const_declarations . statements
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  117 const_declarations: const_declarations . const_declaration ';'
  118 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  119                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  120                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  121                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  122                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  123                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  124                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  125                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  126                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 239
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137
    const_declaration          go to state 34


State 191

  122 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 122 (const_declaration)


State 192

  119 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 119 (const_declaration)


State 193

  123 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 123 (const_declaration)


State 194

  120 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 120 (const_declaration)


State 195

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2
  132 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 240


State 196

  110 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  111                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3
  133 one_var: TK_IDENT '[' ']' . ':' data_type

    ':'  shift, and go to state 63
    ','  shift, and go to state 241


State 197

  114 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  114                 | '#' TK_IDENT ',' '#' . TK_IDENT ':' data_type
  115                 | '#' . TK_IDENT ',' comp_multi_var_1

    TK_IDENT  shift, and go to state 242


State 198

  115 comp_multi_var_1: '#' TK_IDENT ',' comp_multi_var_1 .

    $default  reduce using rule 115 (comp_multi_var_1)


State 199

  139 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  139            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 243


State 200

  137 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 244


State 201

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 245


State 202

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 17 (function_block)


State 203

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 246


State 204

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 247


State 205

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 248


State 206

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 249


State 207

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   30 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']
   53     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 162
    '['  shift, and go to state 250

    '('       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 208

   28 expr: TK_CONSTINT .

    $default  reduce using rule 28 (expr)


State 209

   29 expr: TK_CONSTFLOAT .

    $default  reduce using rule 29 (expr)


State 210

   32 expr: TK_CONSTSTR .

    $default  reduce using rule 32 (expr)


State 211

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   37     | KW_NOT . expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 251


State 212

   34 expr: KW_TRUE .

    $default  reduce using rule 34 (expr)


State 213

   33 expr: KW_FALSE .

    $default  reduce using rule 33 (expr)


State 214

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   51     | '+' . expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 252


State 215

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   50     | '-' . expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 253


State 216

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   52     | '(' . expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 254


State 217

   23 function_call_no_assgn: TK_IDENT '(' ')' .

    $default  reduce using rule 23 (function_call_no_assgn)


State 218

   31 expr: '#' . TK_IDENT

    TK_IDENT  shift, and go to state 255


State 219

   55 expr: function_call_no_assgn .

    $default  reduce using rule 55 (expr)


State 220

   22 function_call_no_assgn: TK_IDENT '(' func_param_call . ')'
   25 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 256
    ','  shift, and go to state 257


State 221

   24 func_param_call: expr .  [')', ',']
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 24 (func_param_call)


State 222

   83 fict_token: TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 273


State 223

   81 fict_token: TK_IDENT '[' TK_CONSTINT . ']'
  132 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  139 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 274


State 224

   93 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 275


State 225

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   85 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   86             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   87             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    ')'            shift, and go to state 276
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 277


State 226

   26 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    '+'       [reduce using rule 26 (listofexpr)]
    '-'       [reduce using rule 26 (listofexpr)]
    $default  reduce using rule 26 (listofexpr)


State 227

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   91 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   92                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    ')'            shift, and go to state 278
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 277


State 228

   82 fict_token: '#' TK_IDENT '[' . TK_CONSTINT ']'
   84           | '#' TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 279
    TK_CONSTINT  shift, and go to state 280


State 229

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 7 (main_block)


State 230

   81 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   83           | TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 222
    TK_CONSTINT  shift, and go to state 281


State 231

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   64 statement: fict_token TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 282


State 232

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   65 statement: fict_token TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 283


State 233

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   66 statement: fict_token TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 284


State 234

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   68 statement: fict_token TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 285


State 235

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   67 statement: fict_token TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 286


State 236

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   69 statement: fict_token TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 287


State 237

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   63 statement: fict_token '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    ';'            shift, and go to state 288
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 277


State 238

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   57 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    $default  reduce using rule 57 (listofinstructions)

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 239

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    $default  reduce using rule 56 (listofinstructions)

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 240

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2
  132 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 86
    ','  shift, and go to state 289


State 241

  110 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  110                 | '#' TK_IDENT '[' ']' ',' . '#' TK_IDENT '[' ']' ':' data_type
  111                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  111                 | '#' TK_IDENT '[' ']' ',' . comp_multi_var_3

    '#'  shift, and go to state 290

    comp_multi_var_3  go to state 291


State 242

  114 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  114                 | '#' TK_IDENT ',' '#' TK_IDENT . ':' data_type
  115                 | '#' TK_IDENT . ',' comp_multi_var_1

    ':'  shift, and go to state 292
    ','  shift, and go to state 150


State 243

  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  139            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 293
    ','  shift, and go to state 87


State 244

  137 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 137 (multi_var_3)


State 245

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 19 (function_block)


State 246

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 294


State 247

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 295


State 248

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 296


State 249

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    KW_FOR    shift, and go to state 297
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272


State 250

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   53     | TK_IDENT '[' . expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 298


State 251

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   37     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 37 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 37 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 37 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 37 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 37 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 37 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 37 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 37 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 37 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 37 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 37 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 37 and token '.' resolved as shift (KW_NOT < '.').


State 252

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   51     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 51 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 51 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 51 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 51 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 51 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 51 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 51 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 51 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 51 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 51 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 51 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 51 and token '.' resolved as shift (UPLUS < '.').


State 253

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   50     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 50 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 50 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 50 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 50 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 50 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 50 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 50 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 50 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 50 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 50 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 50 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 50 and token '.' resolved as shift (UMINUS < '.').


State 254

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   52     | '(' expr . ')'
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ')'       shift, and go to state 299


State 255

   31 expr: '#' TK_IDENT .

    $default  reduce using rule 31 (expr)


State 256

   22 function_call_no_assgn: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 22 (function_call_no_assgn)


State 257

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   25 func_param_call: func_param_call ',' . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 300


State 258

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   49     | expr TK_POW . expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 301


State 259

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   39     | expr TK_EQEQ . expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 302


State 260

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   38     | expr TK_NOTEQ . expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 303


State 261

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   41     | expr TK_GREEQ . expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 304


State 262

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   40     | expr TK_LESEQ . expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 305


State 263

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   36     | expr KW_AND . expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 306


State 264

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   35     | expr KW_OR . expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 307


State 265

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   42     | expr '<' . expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 308


State 266

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   43     | expr '>' . expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 309


State 267

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   44     | expr '+' . expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 310


State 268

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   45     | expr '-' . expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 311


State 269

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   46     | expr '*' . expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 312


State 270

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   47     | expr '/' . expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 313


State 271

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   48     | expr '%' . expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 314


State 272

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   54     | expr '.' . expr
   55     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 315


State 273

   83 fict_token: TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 83 (fict_token)


State 274

   81 fict_token: TK_IDENT '[' TK_CONSTINT ']' .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
  132 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  140            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 86
    ','  shift, and go to state 87

    $default  reduce using rule 81 (fict_token)


State 275

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 316


State 276

   85 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   86             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   87             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 317


State 277

   27 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    '+'       [reduce using rule 27 (listofexpr)]
    '-'       [reduce using rule 27 (listofexpr)]
    $default  reduce using rule 27 (listofexpr)


State 278

   91 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   92                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 318


State 279

   84 fict_token: '#' TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 319


State 280

   82 fict_token: '#' TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 320


State 281

   81 fict_token: TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 321


State 282

   64 statement: fict_token TK_PLUEQ expr ';' .

    $default  reduce using rule 64 (statement)


State 283

   65 statement: fict_token TK_MINEQ expr ';' .

    $default  reduce using rule 65 (statement)


State 284

   66 statement: fict_token TK_MULEQ expr ';' .

    $default  reduce using rule 66 (statement)


State 285

   68 statement: fict_token TK_DIVEQ expr ';' .

    $default  reduce using rule 68 (statement)


State 286

   67 statement: fict_token TK_MODEQ expr ';' .

    $default  reduce using rule 67 (statement)


State 287

   69 statement: fict_token TK_COLEQ expr ';' .

    $default  reduce using rule 69 (statement)


State 288

   63 statement: fict_token '=' listofexpr ';' .

    $default  reduce using rule 63 (statement)


State 289

  112 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  113                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . comp_multi_var_2

    '#'  shift, and go to state 322

    comp_multi_var_2  go to state 323


State 290

  110 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  110                 | '#' TK_IDENT '[' ']' ',' '#' . TK_IDENT '[' ']' ':' data_type
  111                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3

    TK_IDENT  shift, and go to state 324


State 291

  111 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' comp_multi_var_3 .

    $default  reduce using rule 111 (comp_multi_var_3)


State 292

  114 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 325


State 293

  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 326


State 294

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 18 (function_block)


State 295

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 327


State 296

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ';'       shift, and go to state 328


State 297

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 329


State 298

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   53     | TK_IDENT '[' expr . ']'
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ']'       shift, and go to state 330


State 299

   52 expr: '(' expr ')' .

    $default  reduce using rule 52 (expr)


State 300

   25 func_param_call: func_param_call ',' expr .  [')', ',']
   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 25 (func_param_call)


State 301

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   49     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 49 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 49 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 49 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 49 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 49 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 49 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 49 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 49 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 49 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 49 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 49 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 49 and token '.' resolved as shift (TK_POW < '.').


State 302

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   39     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 39 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 39 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 39 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 39 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 39 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 39 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 39 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 39 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 39 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 39 and token '.' resolved as shift (TK_EQEQ < '.').


State 303

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   38     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 38 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 38 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 38 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 38 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 38 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 38 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 38 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 38 and token '.' resolved as shift (TK_NOTEQ < '.').


State 304

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   41     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '+'     shift, and go to state 267
    '-'     shift, and go to state 268
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 41 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 41 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 41 and token '<' resolved as reduce (%left '<').
    Conflict between rule 41 and token '>' resolved as reduce (%left '>').
    Conflict between rule 41 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 41 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 41 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 41 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 41 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 41 and token '.' resolved as shift (TK_GREEQ < '.').


State 305

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   40     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '+'     shift, and go to state 267
    '-'     shift, and go to state 268
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 40 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 40 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 40 and token '<' resolved as reduce (%left '<').
    Conflict between rule 40 and token '>' resolved as reduce (%left '>').
    Conflict between rule 40 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 40 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 40 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 40 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 40 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 40 and token '.' resolved as shift (TK_LESEQ < '.').


State 306

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   36     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 36 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 36 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 36 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 36 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 36 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 36 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 36 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 36 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 36 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 36 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 36 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 36 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 36 and token '.' resolved as shift (KW_AND < '.').


State 307

   35 expr: expr . KW_OR expr
   35     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',', '#']
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 35 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 35 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 35 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 35 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 35 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 35 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 35 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 35 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 35 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 35 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 35 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 35 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 35 and token '.' resolved as shift (KW_OR < '.').


State 308

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   42     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '+'     shift, and go to state 267
    '-'     shift, and go to state 268
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 42 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 42 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 42 and token '<' resolved as reduce (%left '<').
    Conflict between rule 42 and token '>' resolved as reduce (%left '>').
    Conflict between rule 42 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 42 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 42 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 42 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 42 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 42 and token '.' resolved as shift ('<' < '.').


State 309

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   43     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',', '#']
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '+'     shift, and go to state 267
    '-'     shift, and go to state 268
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 43 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 43 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 43 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 43 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 43 and token '.' resolved as shift ('>' < '.').


State 310

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   44     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 44 and token '+' resolved as reduce (%left '+').
    Conflict between rule 44 and token '-' resolved as reduce (%left '-').
    Conflict between rule 44 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 44 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 44 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 44 and token '.' resolved as shift ('+' < '.').


State 311

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   45     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '*'     shift, and go to state 269
    '/'     shift, and go to state 270
    '%'     shift, and go to state 271
    '.'     shift, and go to state 272

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 45 and token '+' resolved as reduce (%left '+').
    Conflict between rule 45 and token '-' resolved as reduce (%left '-').
    Conflict between rule 45 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 45 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 45 and token '.' resolved as shift ('-' < '.').


State 312

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   46     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 46 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 46 and token '*' resolved as reduce (%left '*').
    Conflict between rule 46 and token '/' resolved as reduce (%left '/').
    Conflict between rule 46 and token '%' resolved as reduce (%left '%').
    Conflict between rule 46 and token '.' resolved as shift ('*' < '.').


State 313

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   47     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 47 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 47 and token '*' resolved as reduce (%left '*').
    Conflict between rule 47 and token '/' resolved as reduce (%left '/').
    Conflict between rule 47 and token '%' resolved as reduce (%left '%').
    Conflict between rule 47 and token '.' resolved as shift ('/' < '.').


State 314

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   48     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   49     | expr . TK_POW expr
   54     | expr . '.' expr

    TK_POW  shift, and go to state 258
    '.'     shift, and go to state 272

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 48 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 48 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 48 and token '*' resolved as reduce (%left '*').
    Conflict between rule 48 and token '/' resolved as reduce (%left '/').
    Conflict between rule 48 and token '%' resolved as reduce (%left '%').
    Conflict between rule 48 and token '.' resolved as shift ('%' < '.').


State 315

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   54     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 54 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 54 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 54 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 54 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 54 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 54 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 54 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 54 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 54 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 54 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 54 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 54 and token '.' resolved as reduce (%left '.').


State 316

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ':'       shift, and go to state 331


State 317

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   87             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ELSE      shift, and go to state 332
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 333
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 334
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 318

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   91                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   92                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDWHILE  shift, and go to state 335
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 336
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 319

   84 fict_token: '#' TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 84 (fict_token)


State 320

   82 fict_token: '#' TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 82 (fict_token)


State 321

   81 fict_token: TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 81 (fict_token)


State 322

  112 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

    TK_IDENT  shift, and go to state 337


State 323

  113 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2 .

    $default  reduce using rule 113 (comp_multi_var_2)


State 324

  110 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  110                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT . '[' ']' ':' data_type
  111                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3

    '['  shift, and go to state 338


State 325

  114 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type .

    $default  reduce using rule 114 (comp_multi_var_1)


State 326

  139 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 139 (multi_var_2)


State 327

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 21 (function_block)


State 328

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 339


State 329

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    ':'  shift, and go to state 340


State 330

   53 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 53 (expr)


State 331

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 341


State 332

   88 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 342


State 333

   86 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 86 (if_statement)


State 334

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   87             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ELSE      shift, and go to state 343
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 344
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 335

   92 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 92 (while_statement)


State 336

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   91                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDWHILE  shift, and go to state 345
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 337

  112 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2

    '['  shift, and go to state 346


State 338

  110 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  110                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' . ']' ':' data_type
  111                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3

    ']'  shift, and go to state 347


State 339

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 340

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT     shift, and go to state 43
    TK_CONSTINT  shift, and go to state 348
    KW_INTEGER   shift, and go to state 44
    KW_SCALAR    shift, and go to state 45
    KW_STR       shift, and go to state 46
    KW_BOOLEAN   shift, and go to state 47

    data_type  go to state 349


State 341

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ']'       shift, and go to state 350
    ':'       shift, and go to state 351


State 342

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   90             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 352
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 353
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 343

   87 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 354


State 344

   85 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 85 (if_statement)


State 345

   91 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 91 (while_statement)


State 346

  112 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  113                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2

    TK_CONSTINT  shift, and go to state 355


State 347

  110 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  110                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' . ':' data_type
  111                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3

    ':'  shift, and go to state 356
    ','  shift, and go to state 241


State 348

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 357


State 349

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type . KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    KW_IN  shift, and go to state 358


State 350

   95 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 359


State 351

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . '#' TK_IDENT
   32     | . TK_CONSTSTR
   33     | . KW_FALSE
   34     | . KW_TRUE
   35     | . expr KW_OR expr
   36     | . expr KW_AND expr
   37     | . KW_NOT expr
   38     | . expr TK_NOTEQ expr
   39     | . expr TK_EQEQ expr
   40     | . expr TK_LESEQ expr
   41     | . expr TK_GREEQ expr
   42     | . expr '<' expr
   43     | . expr '>' expr
   44     | . expr '+' expr
   45     | . expr '-' expr
   46     | . expr '*' expr
   47     | . expr '/' expr
   48     | . expr '%' expr
   49     | . expr TK_POW expr
   50     | . '-' expr
   51     | . '+' expr
   52     | . '(' expr ')'
   53     | . TK_IDENT '[' expr ']'
   54     | . expr '.' expr
   55     | . function_call_no_assgn
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 207
    TK_CONSTINT    shift, and go to state 208
    TK_CONSTFLOAT  shift, and go to state 209
    TK_CONSTSTR    shift, and go to state 210
    KW_NOT         shift, and go to state 211
    KW_TRUE        shift, and go to state 212
    KW_FALSE       shift, and go to state 213
    '+'            shift, and go to state 214
    '-'            shift, and go to state 215
    '('            shift, and go to state 216
    '#'            shift, and go to state 218

    function_call_no_assgn  go to state 219
    expr                    go to state 360


State 352

   90 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 90 (if_statement)


State 353

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   88             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 361
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 354

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   87             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   89             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 362
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 363
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 355

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  113                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2

    ']'  shift, and go to state 364


State 356

  110 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 365


State 357

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 366


State 358

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN . TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 367


State 359

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   96              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ENDFOR    shift, and go to state 368
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 369
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 360

   35 expr: expr . KW_OR expr
   36     | expr . KW_AND expr
   38     | expr . TK_NOTEQ expr
   39     | expr . TK_EQEQ expr
   40     | expr . TK_LESEQ expr
   41     | expr . TK_GREEQ expr
   42     | expr . '<' expr
   43     | expr . '>' expr
   44     | expr . '+' expr
   45     | expr . '-' expr
   46     | expr . '*' expr
   47     | expr . '/' expr
   48     | expr . '%' expr
   49     | expr . TK_POW expr
   54     | expr . '.' expr
   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 258
    TK_EQEQ   shift, and go to state 259
    TK_NOTEQ  shift, and go to state 260
    TK_GREEQ  shift, and go to state 261
    TK_LESEQ  shift, and go to state 262
    KW_AND    shift, and go to state 263
    KW_OR     shift, and go to state 264
    '<'       shift, and go to state 265
    '>'       shift, and go to state 266
    '+'       shift, and go to state 267
    '-'       shift, and go to state 268
    '*'       shift, and go to state 269
    '/'       shift, and go to state 270
    '%'       shift, and go to state 271
    '.'       shift, and go to state 272
    ']'       shift, and go to state 370


State 361

   88 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 88 (if_statement)


State 362

   89 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 89 (if_statement)


State 363

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   87             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_WHILE     shift, and go to state 125
    KW_ENDIF     shift, and go to state 371
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 364

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  112                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  113                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2

    ':'  shift, and go to state 372
    ','  shift, and go to state 289


State 365

  110 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 110 (comp_multi_var_3)


State 366

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 373


State 367

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT . KW_OF TK_CONSTINT ']' ':' data_type

    KW_OF  shift, and go to state 374


State 368

   96 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 96 (for_statement)


State 369

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   95              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ENDFOR    shift, and go to state 375
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 370

   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 376


State 371

   87 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 87 (if_statement)


State 372

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 377


State 373

   97 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 97 (listCompr_with_int_values)


State 374

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF . TK_CONSTINT ']' ':' data_type

    TK_CONSTINT  shift, and go to state 378


State 375

   95 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 95 (for_statement)


State 376

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: . statement
   62           | . statements statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   93              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   94              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ENDFOR    shift, and go to state 379
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statements                 go to state 380
    statement                  go to state 131
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 377

  112 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 112 (comp_multi_var_2)


State 378

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 381


State 379

   94 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 94 (for_statement)


State 380

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   62 statements: statements . statement
   63 statement: . fict_token '=' listofexpr ';'
   64          | . fict_token TK_PLUEQ expr ';'
   65          | . fict_token TK_MINEQ expr ';'
   66          | . fict_token TK_MULEQ expr ';'
   67          | . fict_token TK_MODEQ expr ';'
   68          | . fict_token TK_DIVEQ expr ';'
   69          | . fict_token TK_COLEQ expr ';'
   70          | . if_statement ';'
   71          | . for_statement ';'
   72          | . while_statement ';'
   73          | . KW_BREAK ';'
   74          | . KW_CONTINUE ';'
   75          | . function_call_no_assgn ';'
   76          | . listCompr_with_int_values ';'
   77          | . listCompr_with_array ';'
   78          | . ';'
   79 fict_token: . TK_IDENT
   80           | . '#' TK_IDENT
   81           | . TK_IDENT '[' TK_CONSTINT ']'
   82           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   83           | . TK_IDENT '[' TK_IDENT ']'
   84           | . '#' TK_IDENT '[' TK_IDENT ']'
   85 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   87             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   88             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   89             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   90             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   91 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   92                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   93 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   93              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   94              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   95              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   96              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   97 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   98 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 173
    KW_FOR       shift, and go to state 120
    KW_BREAK     shift, and go to state 121
    KW_CONTINUE  shift, and go to state 122
    KW_IF        shift, and go to state 124
    KW_ENDFOR    shift, and go to state 382
    KW_WHILE     shift, and go to state 125
    ';'          shift, and go to state 126
    '#'          shift, and go to state 127

    function_call_no_assgn     go to state 128
    statement                  go to state 174
    fict_token                 go to state 132
    if_statement               go to state 133
    while_statement            go to state 134
    for_statement              go to state 135
    listCompr_with_int_values  go to state 136
    listCompr_with_array       go to state 137


State 381

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 383


State 382

   93 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 93 (for_statement)


State 383

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' . data_type
  143 data_type: . KW_INTEGER
  144          | . KW_SCALAR
  145          | . KW_STR
  146          | . KW_BOOLEAN
  147          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 384


State 384

   98 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 98 (listCompr_with_array)
