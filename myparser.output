Terminals unused in grammar

    KW_ENDCOMP
    KW_OF
    KW_COMP


State 163 conflicts: 1 shift/reduce
State 165 conflicts: 2 shift/reduce
State 208 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    7 function_param_decl: %empty
    8                    | var_declaration
    9                    | function_param_decl ',' var_declaration

   10 function_return_type: TK_FUNC_RET KW_INTEGER
   11                     | TK_FUNC_RET KW_SCALAR
   12                     | TK_FUNC_RET KW_STR
   13                     | TK_FUNC_RET KW_BOOLEAN

   14 function_blocks: function_block ';'
   15                | function_blocks function_block ';'

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   21 function_call: TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | TK_IDENT '(' func_param_call ')'

   23 func_param_call: %empty
   24                | expr
   25                | func_param_call ',' expr

   26 listofexpr: expr
   27           | listofexpr expr

   28 expr: TK_CONSTINT
   29     | TK_CONSTFLOAT
   30     | TK_IDENT
   31     | TK_CONSTSTR
   32     | expr KW_OR expr
   33     | expr KW_AND expr
   34     | KW_NOT expr
   35     | expr TK_NOTEQ expr
   36     | expr TK_EQEQ expr
   37     | expr TK_LESEQ expr
   38     | expr TK_GREEQ expr
   39     | expr '<' expr
   40     | expr '>' expr
   41     | expr '+' expr
   42     | expr '-' expr
   43     | expr '*' expr
   44     | expr '/' expr
   45     | expr '%' expr
   46     | expr TK_POW expr
   47     | '-' expr
   48     | '+' expr
   49     | '(' expr ')'
   50     | TK_IDENT '[' expr ']'
   51     | expr '.' expr

   52 listofinstructions: var_declarations const_declarations statements
   53                   | const_declarations var_declarations statements
   54                   | statements
   55                   | var_declarations statements
   56                   | const_declarations statements

   57 statements: statement
   58           | statements statement

   59 statement: TK_IDENT '=' listofexpr ';'
   60          | TK_IDENT TK_PLUEQ expr ';'
   61          | TK_IDENT TK_MINEQ expr ';'
   62          | TK_IDENT TK_MULEQ expr ';'
   63          | TK_IDENT TK_MODEQ expr ';'
   64          | TK_IDENT TK_DIVEQ expr ';'
   65          | TK_IDENT TK_COLEQ expr ';'
   66          | if_statement ';'
   67          | for_statement ';'
   68          | while_statement ';'
   69          | KW_BREAK ';'
   70          | KW_CONTINUE ';'
   71          | function_call ';'
   72          | ';'

   73 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   79 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   85 const_declarations: const_declaration ';'
   86                   | const_declarations const_declaration ';'

   87 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

   92 var_declarations: var_declaration ';'
   93                 | var_declarations var_declaration ';'

   94 var_declaration: one_var
   95                | multi_var

   96 one_var: TK_IDENT ':' data_type
   97        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | TK_IDENT '[' ']' ':' data_type

   99 multi_var: multi_var_1
  100          | multi_var_2
  101          | multi_var_3

  102 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | TK_IDENT '[' ']' ',' multi_var_3

  104 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  106 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  107            | TK_IDENT ',' multi_var_1

  108 data_type: KW_INTEGER
  109          | KW_SCALAR
  110          | KW_STR
  111          | KW_BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 45
    '(' (40) 5 6 16 17 18 19 20 21 22 49 73 74 75 76 77 78 79 80
    ')' (41) 5 6 16 17 18 19 20 21 22 49 73 74 75 76 77 78 79 80
    '*' (42) 43
    '+' (43) 41 48
    ',' (44) 9 25 102 103 104 105 106 107
    '-' (45) 42 47
    '.' (46) 51
    '/' (47) 44
    ':' (58) 5 6 16 17 18 19 20 73 74 75 76 77 78 79 80 81 82 83 84 87 88 89 90 91 96 97 98 102 104 106
    ';' (59) 5 6 14 15 17 18 19 20 59 60 61 62 63 64 65 66 67 68 69 70 71 72 85 86 92 93
    '<' (60) 39
    '=' (61) 21 59 87 88 89 90 91
    '>' (62) 40
    '[' (91) 50 81 82 83 84 97 98 102 103 104 105
    ']' (93) 50 81 82 83 84 97 98 102 103 104 105
    error (256)
    TK_IDENT <str> (258) 16 17 18 19 20 21 22 30 50 59 60 61 62 63 64 65 81 82 83 84 87 88 89 90 91 96 97 98 102 103 104 105 106 107
    TK_CONSTINT <str> (259) 28 88 97 104 105
    TK_CONSTFLOAT <str> (260) 29 87
    TK_CONSTSTR <str> (261) 31 89
    TK_POW (262) 46
    TK_PLUEQ (263) 60
    TK_MINEQ (264) 61
    TK_MULEQ (265) 62
    TK_DIVEQ (266) 64
    TK_MODEQ (267) 63
    TK_EQEQ (268) 36
    TK_NOTEQ (269) 35
    TK_GREEQ (270) 38
    TK_LESEQ (271) 37
    TK_COLEQ (272) 65
    TK_FUNC_RET (273) 10 11 12 13
    KW_AND (274) 33
    KW_OR (275) 32
    KW_NOT (276) 34
    KW_INTEGER (277) 10 88 108
    KW_FOR (278) 81 82 83 84
    KW_BREAK (279) 69
    KW_DEF (280) 5 6 16 17 18 19 20
    KW_ENDCOMP (281)
    KW_SCALAR (282) 11 87 109
    KW_CONST (283) 87 88 89 90 91
    KW_IN (284) 81 82 83 84
    KW_CONTINUE (285) 70
    KW_ENDDEF (286) 5 6 16 17 18 19 20
    KW_OF (287)
    KW_STR (288) 12 89 110
    KW_IF (289) 73 74 75 76 77 78
    KW_ENDFOR (290) 81 82 83 84
    KW_MAIN (291) 5 6
    KW_BOOLEAN (292) 13 90 91 111
    KW_ELSE (293) 75 76 77 78
    KW_WHILE (294) 79 80
    KW_RETURN (295) 17 18 19 20
    KW_ENDIF (296) 73 74 75 76 77 78
    KW_ENDWHILE (297) 79 80
    KW_COMP (298)
    KW_TRUE (299) 90
    KW_FALSE (300) 91
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program (65)
        on left: 1 2 3 4
        on right: 0
    main_block <str> (66)
        on left: 5 6
        on right: 1 2 3 4
    function_param_decl <str> (67)
        on left: 7 8 9
        on right: 9 16 17 18 19 20
    function_return_type <str> (68)
        on left: 10 11 12 13
        on right: 19 20
    function_blocks <str> (69)
        on left: 14 15
        on right: 2 3 4 15
    function_block <str> (70)
        on left: 16 17 18 19 20
        on right: 14 15
    function_call <str> (71)
        on left: 21 22
        on right: 71
    func_param_call <str> (72)
        on left: 23 24 25
        on right: 21 22 25
    listofexpr <str> (73)
        on left: 26 27
        on right: 27 59 73 74 75 76 77 78 79 80
    expr <str> (74)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51
        on right: 19 20 24 25 26 27 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 60 61 62 63 64 65 81 82 83 84
    listofinstructions <str> (75)
        on left: 52 53 54 55 56
        on right: 6 16 17 19
    statements <str> (76)
        on left: 57 58
        on right: 52 53 54 55 56 58 73 75 76 77 79 81 83
    statement <str> (77)
        on left: 59 60 61 62 63 64 65 66 67 68 69 70 71 72
        on right: 57 58
    if_statement <str> (78)
        on left: 73 74 75 76 77 78
        on right: 66
    while_statement <str> (79)
        on left: 79 80
        on right: 68
    for_statement <str> (80)
        on left: 81 82 83 84
        on right: 67
    const_declarations <str> (81)
        on left: 85 86
        on right: 4 52 53 56 86
    const_declaration <str> (82)
        on left: 87 88 89 90 91
        on right: 85 86
    var_declarations <str> (83)
        on left: 92 93
        on right: 3 4 52 53 55 93
    var_declaration <str> (84)
        on left: 94 95
        on right: 8 9 92 93
    one_var <str> (85)
        on left: 96 97 98
        on right: 94
    multi_var <str> (86)
        on left: 99 100 101
        on right: 95
    multi_var_3 <str> (87)
        on left: 102 103
        on right: 101 103
    multi_var_2 <str> (88)
        on left: 104 105
        on right: 100 105
    multi_var_1 <str> (89)
        on left: 106 107
        on right: 99 107
    data_type <str> (90)
        on left: 108 109 110 111
        on right: 96 97 98 102 104 106


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   85 const_declarations: . const_declaration ';'
   86                   | . const_declarations const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    program             go to state 4
    main_block          go to state 5
    function_blocks     go to state 6
    function_block      go to state 7
    const_declarations  go to state 8
    const_declaration   go to state 9
    var_declarations    go to state 10
    var_declaration     go to state 11
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 1

   96 one_var: TK_IDENT . ':' data_type
   97        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
   98        | TK_IDENT . '[' ']' ':' data_type
  102 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | TK_IDENT . '[' ']' ',' multi_var_3
  104 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  107            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 17
    ':'  shift, and go to state 18
    ','  shift, and go to state 19


State 2

    5 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 20
    KW_MAIN   shift, and go to state 21


State 3

   87 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 22


State 4

    0 $accept: program . $end

    $end  shift, and go to state 23


State 5

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 6

    2 program: function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 24
    function_block  go to state 25


State 7

   14 function_blocks: function_block . ';'

    ';'  shift, and go to state 26


State 8

    4 program: const_declarations . var_declarations function_blocks main_block
   86 const_declarations: const_declarations . const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 27
    var_declarations   go to state 28
    var_declaration    go to state 11
    one_var            go to state 12
    multi_var          go to state 13
    multi_var_3        go to state 14
    multi_var_2        go to state 15
    multi_var_1        go to state 16


State 9

   85 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 29


State 10

    3 program: var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   93 var_declarations: var_declarations . var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 30

    function_blocks  go to state 31
    function_block   go to state 7
    var_declaration  go to state 32
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 11

   92 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 33


State 12

   94 var_declaration: one_var .

    $default  reduce using rule 94 (var_declaration)


State 13

   95 var_declaration: multi_var .

    $default  reduce using rule 95 (var_declaration)


State 14

  101 multi_var: multi_var_3 .

    $default  reduce using rule 101 (multi_var)


State 15

  100 multi_var: multi_var_2 .

    $default  reduce using rule 100 (multi_var)


State 16

   99 multi_var: multi_var_1 .

    $default  reduce using rule 99 (multi_var)


State 17

   97 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
   98        | TK_IDENT '[' . ']' ':' data_type
  102 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | TK_IDENT '[' . ']' ',' multi_var_3
  104 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 34
    ']'          shift, and go to state 35


State 18

   96 one_var: TK_IDENT ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 40


State 19

  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  106            | TK_IDENT ',' . TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1
  107            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 41

    multi_var_1  go to state 42


State 20

   16 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 43


State 21

    5 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 44


State 22

   87 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
   89                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
   90                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
   91                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 45


State 23

    0 $accept: program $end .

    $default  accept


State 24

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 25

   15 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 46


State 26

   14 function_blocks: function_block ';' .

    $default  reduce using rule 14 (function_blocks)


State 27

   86 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 47


State 28

    4 program: const_declarations var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   93 var_declarations: var_declarations . var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 30

    function_blocks  go to state 48
    function_block   go to state 7
    var_declaration  go to state 32
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 29

   85 const_declarations: const_declaration ';' .

    $default  reduce using rule 85 (const_declarations)


State 30

   16 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 20


State 31

    3 program: var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 49
    function_block  go to state 25


State 32

   93 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 50


State 33

   92 var_declarations: var_declaration ';' .

    $default  reduce using rule 92 (var_declarations)


State 34

   97 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  104 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 51


State 35

   98 one_var: TK_IDENT '[' ']' . ':' data_type
  102 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  103            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 52
    ','  shift, and go to state 53


State 36

  108 data_type: KW_INTEGER .

    $default  reduce using rule 108 (data_type)


State 37

  109 data_type: KW_SCALAR .

    $default  reduce using rule 109 (data_type)


State 38

  110 data_type: KW_STR .

    $default  reduce using rule 110 (data_type)


State 39

  111 data_type: KW_BOOLEAN .

    $default  reduce using rule 111 (data_type)


State 40

   96 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 96 (one_var)


State 41

  106 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  106            | TK_IDENT ',' TK_IDENT . ':' data_type
  107            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 54
    ','  shift, and go to state 19


State 42

  107 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 107 (multi_var_1)


State 43

    7 function_param_decl: . %empty  [')', ',']
    8                    | . var_declaration
    9                    | . function_param_decl ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 7 (function_param_decl)

    function_param_decl  go to state 55
    var_declaration      go to state 56
    one_var              go to state 12
    multi_var            go to state 13
    multi_var_3          go to state 14
    multi_var_2          go to state 15
    multi_var_1          go to state 16


State 44

    5 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 57


State 45

   87 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
   88                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
   89                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
   90                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
   91                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 58
    TK_CONSTFLOAT  shift, and go to state 59
    TK_CONSTSTR    shift, and go to state 60
    KW_TRUE        shift, and go to state 61
    KW_FALSE       shift, and go to state 62


State 46

   15 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 15 (function_blocks)


State 47

   86 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 86 (const_declarations)


State 48

    4 program: const_declarations var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 63
    function_block  go to state 25


State 49

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 50

   93 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 93 (var_declarations)


State 51

   97 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  104 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 64
    ','  shift, and go to state 65


State 52

   98 one_var: TK_IDENT '[' ']' ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 66


State 53

  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  102            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  103            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 67

    multi_var_3  go to state 68


State 54

  106 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 69


State 55

    9 function_param_decl: function_param_decl . ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 70
    ','  shift, and go to state 71


State 56

    8 function_param_decl: var_declaration .

    $default  reduce using rule 8 (function_param_decl)


State 57

    5 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 72


State 58

   88 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 73


State 59

   87 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 74


State 60

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 75


State 61

   90 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 76


State 62

   91 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 77


State 63

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 64

   97 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 78


State 65

  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  105            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 79

    multi_var_2  go to state 80


State 66

   98 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 98 (one_var)


State 67

  102 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  102            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  103            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 81


State 68

  103 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 103 (multi_var_3)


State 69

  106 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 106 (multi_var_1)


State 70

   10 function_return_type: . TK_FUNC_RET KW_INTEGER
   11                     | . TK_FUNC_RET KW_SCALAR
   12                     | . TK_FUNC_RET KW_STR
   13                     | . TK_FUNC_RET KW_BOOLEAN
   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 82
    ':'          shift, and go to state 83

    function_return_type  go to state 84


State 71

    9 function_param_decl: function_param_decl ',' . var_declaration
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 85
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 72

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: . var_declarations const_declarations statements
   53                   | . const_declarations var_declarations statements
   54                   | . statements
   55                   | . var_declarations statements
   56                   | . const_declarations statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   85 const_declarations: . const_declaration ';'
   86                   | . const_declarations const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_ENDDEF    shift, and go to state 90
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call       go to state 94
    listofinstructions  go to state 95
    statements          go to state 96
    statement           go to state 97
    if_statement        go to state 98
    while_statement     go to state 99
    for_statement       go to state 100
    const_declarations  go to state 101
    const_declaration   go to state 9
    var_declarations    go to state 102
    var_declaration     go to state 11
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 73

   88 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 103


State 74

   87 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 104


State 75

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 105


State 76

   90 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 106


State 77

   91 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 107


State 78

   97 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 97 (one_var)


State 79

  104 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 108


State 80

  105 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 105 (multi_var_2)


State 81

  102 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  102            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  103            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 109


State 82

   10 function_return_type: TK_FUNC_RET . KW_INTEGER
   11                     | TK_FUNC_RET . KW_SCALAR
   12                     | TK_FUNC_RET . KW_STR
   13                     | TK_FUNC_RET . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 110
    KW_SCALAR   shift, and go to state 111
    KW_STR      shift, and go to state 112
    KW_BOOLEAN  shift, and go to state 113


State 83

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: . var_declarations const_declarations statements
   53                   | . const_declarations var_declarations statements
   54                   | . statements
   55                   | . var_declarations statements
   56                   | . const_declarations statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   85 const_declarations: . const_declaration ';'
   86                   | . const_declarations const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_RETURN    shift, and go to state 114
    ';'          shift, and go to state 93

    function_call       go to state 94
    listofinstructions  go to state 115
    statements          go to state 96
    statement           go to state 97
    if_statement        go to state 98
    while_statement     go to state 99
    for_statement       go to state 100
    const_declarations  go to state 101
    const_declaration   go to state 9
    var_declarations    go to state 102
    var_declaration     go to state 11
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 84

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 116


State 85

    9 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 9 (function_param_decl)


State 86

   21 function_call: TK_IDENT . '=' TK_IDENT '(' func_param_call ')'
   22              | TK_IDENT . '(' func_param_call ')'
   59 statement: TK_IDENT . '=' listofexpr ';'
   60          | TK_IDENT . TK_PLUEQ expr ';'
   61          | TK_IDENT . TK_MINEQ expr ';'
   62          | TK_IDENT . TK_MULEQ expr ';'
   63          | TK_IDENT . TK_MODEQ expr ';'
   64          | TK_IDENT . TK_DIVEQ expr ';'
   65          | TK_IDENT . TK_COLEQ expr ';'
   96 one_var: TK_IDENT . ':' data_type
   97        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
   98        | TK_IDENT . '[' ']' ':' data_type
  102 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | TK_IDENT . '[' ']' ',' multi_var_3
  104 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  107            | TK_IDENT . ',' multi_var_1

    TK_PLUEQ  shift, and go to state 117
    TK_MINEQ  shift, and go to state 118
    TK_MULEQ  shift, and go to state 119
    TK_DIVEQ  shift, and go to state 120
    TK_MODEQ  shift, and go to state 121
    TK_COLEQ  shift, and go to state 122
    '='       shift, and go to state 123
    '('       shift, and go to state 124
    '['       shift, and go to state 17
    ':'       shift, and go to state 18
    ','       shift, and go to state 19


State 87

   81 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 125


State 88

   69 statement: KW_BREAK . ';'

    ';'  shift, and go to state 126


State 89

   70 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 127


State 90

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 128


State 91

   73 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   74             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   75             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 129


State 92

   79 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 130


State 93

   72 statement: ';' .

    $default  reduce using rule 72 (statement)


State 94

   71 statement: function_call . ';'

    ';'  shift, and go to state 131


State 95

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 132


State 96

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   54 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    $default  reduce using rule 54 (listofinstructions)

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 97

   57 statements: statement .

    $default  reduce using rule 57 (statements)


State 98

   66 statement: if_statement . ';'

    ';'  shift, and go to state 135


State 99

   68 statement: while_statement . ';'

    ';'  shift, and go to state 136


State 100

   67 statement: for_statement . ';'

    ';'  shift, and go to state 137


State 101

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   53 listofinstructions: const_declarations . var_declarations statements
   56                   | const_declarations . statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   86 const_declarations: const_declarations . const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call      go to state 94
    statements         go to state 138
    statement          go to state 97
    if_statement       go to state 98
    while_statement    go to state 99
    for_statement      go to state 100
    const_declaration  go to state 27
    var_declarations   go to state 139
    var_declaration    go to state 11
    one_var            go to state 12
    multi_var          go to state 13
    multi_var_3        go to state 14
    multi_var_2        go to state 15
    multi_var_1        go to state 16


State 102

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: var_declarations . const_declarations statements
   55                   | var_declarations . statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   85 const_declarations: . const_declaration ';'
   86                   | . const_declarations const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   93 var_declarations: var_declarations . var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call       go to state 94
    statements          go to state 140
    statement           go to state 97
    if_statement        go to state 98
    while_statement     go to state 99
    for_statement       go to state 100
    const_declarations  go to state 141
    const_declaration   go to state 9
    var_declaration     go to state 32
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 103

   88 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 88 (const_declaration)


State 104

   87 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 87 (const_declaration)


State 105

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 89 (const_declaration)


State 106

   90 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 90 (const_declaration)


State 107

   91 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 91 (const_declaration)


State 108

  104 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  105            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 142


State 109

  102 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  102            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  103            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 143
    ','  shift, and go to state 53


State 110

   10 function_return_type: TK_FUNC_RET KW_INTEGER .

    $default  reduce using rule 10 (function_return_type)


State 111

   11 function_return_type: TK_FUNC_RET KW_SCALAR .

    $default  reduce using rule 11 (function_return_type)


State 112

   12 function_return_type: TK_FUNC_RET KW_STR .

    $default  reduce using rule 12 (function_return_type)


State 113

   13 function_return_type: TK_FUNC_RET KW_BOOLEAN .

    $default  reduce using rule 13 (function_return_type)


State 114

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 144


State 115

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 145
    KW_RETURN  shift, and go to state 146


State 116

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: . var_declarations const_declarations statements
   53                   | . const_declarations var_declarations statements
   54                   | . statements
   55                   | . var_declarations statements
   56                   | . const_declarations statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   85 const_declarations: . const_declaration ';'
   86                   | . const_declarations const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   92 var_declarations: . var_declaration ';'
   93                 | . var_declarations var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_RETURN    shift, and go to state 147
    ';'          shift, and go to state 93

    function_call       go to state 94
    listofinstructions  go to state 148
    statements          go to state 96
    statement           go to state 97
    if_statement        go to state 98
    while_statement     go to state 99
    for_statement       go to state 100
    const_declarations  go to state 101
    const_declaration   go to state 9
    var_declarations    go to state 102
    var_declaration     go to state 11
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 117

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   60 statement: TK_IDENT TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 157


State 118

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   61 statement: TK_IDENT TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 158


State 119

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   62 statement: TK_IDENT TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 159


State 120

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   64 statement: TK_IDENT TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 160


State 121

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   63 statement: TK_IDENT TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 161


State 122

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   65 statement: TK_IDENT TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 162


State 123

   21 function_call: TK_IDENT '=' . TK_IDENT '(' func_param_call ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   59 statement: TK_IDENT '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    listofexpr  go to state 164
    expr        go to state 165


State 124

   22 function_call: TK_IDENT '(' . func_param_call ')'
   23 func_param_call: . %empty  [')', ',']
   24                | . expr
   25                | . func_param_call ',' expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    $default  reduce using rule 23 (func_param_call)

    func_param_call  go to state 166
    expr             go to state 167


State 125

   81 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 168


State 126

   69 statement: KW_BREAK ';' .

    $default  reduce using rule 69 (statement)


State 127

   70 statement: KW_CONTINUE ';' .

    $default  reduce using rule 70 (statement)


State 128

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 5 (main_block)


State 129

   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   73 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   74             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   75             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    listofexpr  go to state 169
    expr        go to state 165


State 130

   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   79 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   80                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    listofexpr  go to state 170
    expr        go to state 165


State 131

   71 statement: function_call ';' .

    $default  reduce using rule 71 (statement)


State 132

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 171


State 133

   21 function_call: TK_IDENT . '=' TK_IDENT '(' func_param_call ')'
   22              | TK_IDENT . '(' func_param_call ')'
   59 statement: TK_IDENT . '=' listofexpr ';'
   60          | TK_IDENT . TK_PLUEQ expr ';'
   61          | TK_IDENT . TK_MINEQ expr ';'
   62          | TK_IDENT . TK_MULEQ expr ';'
   63          | TK_IDENT . TK_MODEQ expr ';'
   64          | TK_IDENT . TK_DIVEQ expr ';'
   65          | TK_IDENT . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 117
    TK_MINEQ  shift, and go to state 118
    TK_MULEQ  shift, and go to state 119
    TK_DIVEQ  shift, and go to state 120
    TK_MODEQ  shift, and go to state 121
    TK_COLEQ  shift, and go to state 122
    '='       shift, and go to state 123
    '('       shift, and go to state 124


State 134

   58 statements: statements statement .

    $default  reduce using rule 58 (statements)


State 135

   66 statement: if_statement ';' .

    $default  reduce using rule 66 (statement)


State 136

   68 statement: while_statement ';' .

    $default  reduce using rule 68 (statement)


State 137

   67 statement: for_statement ';' .

    $default  reduce using rule 67 (statement)


State 138

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   56 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    $default  reduce using rule 56 (listofinstructions)

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 139

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   53 listofinstructions: const_declarations var_declarations . statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 var_declarations: var_declarations . var_declaration ';'
   94 var_declaration: . one_var
   95                | . multi_var
   96 one_var: . TK_IDENT ':' data_type
   97        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
   98        | . TK_IDENT '[' ']' ':' data_type
   99 multi_var: . multi_var_1
  100          | . multi_var_2
  101          | . multi_var_3
  102 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  103            | . TK_IDENT '[' ']' ',' multi_var_3
  104 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  105            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  106 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  107            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 86
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 172
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100
    var_declaration  go to state 32
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 140

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   55 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    $default  reduce using rule 55 (listofinstructions)

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 141

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: var_declarations const_declarations . statements
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   86 const_declarations: const_declarations . const_declaration ';'
   87 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   88                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   89                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   90                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   91                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call      go to state 94
    statements         go to state 173
    statement          go to state 97
    if_statement       go to state 98
    while_statement    go to state 99
    for_statement      go to state 100
    const_declaration  go to state 27


State 142

  104 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  105            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 174


State 143

  102 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 175


State 144

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 176


State 145

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 16 (function_block)


State 146

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 177


State 147

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 178


State 148

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 179


State 149

   30 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']
   50     | TK_IDENT . '[' expr ']'

    '['  shift, and go to state 180

    $default  reduce using rule 30 (expr)


State 150

   28 expr: TK_CONSTINT .

    $default  reduce using rule 28 (expr)


State 151

   29 expr: TK_CONSTFLOAT .

    $default  reduce using rule 29 (expr)


State 152

   31 expr: TK_CONSTSTR .

    $default  reduce using rule 31 (expr)


State 153

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   34     | KW_NOT . expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 181


State 154

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   48     | '+' . expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 182


State 155

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   47     | '-' . expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 183


State 156

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   49     | '(' . expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 184


State 157

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   60 statement: TK_IDENT TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 200


State 158

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   61 statement: TK_IDENT TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 201


State 159

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   62 statement: TK_IDENT TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 202


State 160

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   64 statement: TK_IDENT TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 203


State 161

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   63 statement: TK_IDENT TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 204


State 162

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   65 statement: TK_IDENT TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 205


State 163

   21 function_call: TK_IDENT '=' TK_IDENT . '(' func_param_call ')'
   30 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ';']
   50     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 206
    '['  shift, and go to state 180

    '('       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 164

   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   59 statement: TK_IDENT '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156
    ';'            shift, and go to state 207

    expr  go to state 208


State 165

   26 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, '+', '-', '(', ')', ';']
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    '+'       [reduce using rule 26 (listofexpr)]
    '-'       [reduce using rule 26 (listofexpr)]
    $default  reduce using rule 26 (listofexpr)


State 166

   22 function_call: TK_IDENT '(' func_param_call . ')'
   25 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 209
    ','  shift, and go to state 210


State 167

   24 func_param_call: expr .  [')', ',']
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 24 (func_param_call)


State 168

   81 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 211


State 169

   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   73 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   74             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   75             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156
    ')'            shift, and go to state 212

    expr  go to state 208


State 170

   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   79 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   80                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156
    ')'            shift, and go to state 213

    expr  go to state 208


State 171

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 172

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   53 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    $default  reduce using rule 53 (listofinstructions)

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 173

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   52 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    $default  reduce using rule 52 (listofinstructions)

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 174

  104 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  105            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 214
    ','  shift, and go to state 65


State 175

  102 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 102 (multi_var_3)


State 176

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 18 (function_block)


State 177

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 215


State 178

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 216


State 179

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 217


State 180

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   50     | TK_IDENT '[' . expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 218


State 181

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   34     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';', ',']
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 34 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 34 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 34 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 34 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 34 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 34 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 34 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 34 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 34 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 34 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 34 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 34 and token '.' resolved as shift (KW_NOT < '.').


State 182

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   48     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 48 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 48 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 48 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 48 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 48 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 48 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 48 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 48 and token '.' resolved as shift (UPLUS < '.').


State 183

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   47     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 47 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 47 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 47 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 47 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 47 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 47 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 47 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 47 and token '.' resolved as shift (UMINUS < '.').


State 184

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   49     | '(' expr . ')'
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ')'       shift, and go to state 219


State 185

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   46     | expr TK_POW . expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 220


State 186

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   36     | expr TK_EQEQ . expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 221


State 187

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   35     | expr TK_NOTEQ . expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 222


State 188

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   38     | expr TK_GREEQ . expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 223


State 189

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   37     | expr TK_LESEQ . expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 224


State 190

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   33     | expr KW_AND . expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 225


State 191

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   32     | expr KW_OR . expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 226


State 192

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   39     | expr '<' . expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 227


State 193

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   40     | expr '>' . expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 228


State 194

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   41     | expr '+' . expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 229


State 195

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   42     | expr '-' . expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 230


State 196

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   43     | expr '*' . expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 231


State 197

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   44     | expr '/' . expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 232


State 198

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   45     | expr '%' . expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 233


State 199

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   51     | expr '.' . expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 234


State 200

   60 statement: TK_IDENT TK_PLUEQ expr ';' .

    $default  reduce using rule 60 (statement)


State 201

   61 statement: TK_IDENT TK_MINEQ expr ';' .

    $default  reduce using rule 61 (statement)


State 202

   62 statement: TK_IDENT TK_MULEQ expr ';' .

    $default  reduce using rule 62 (statement)


State 203

   64 statement: TK_IDENT TK_DIVEQ expr ';' .

    $default  reduce using rule 64 (statement)


State 204

   63 statement: TK_IDENT TK_MODEQ expr ';' .

    $default  reduce using rule 63 (statement)


State 205

   65 statement: TK_IDENT TK_COLEQ expr ';' .

    $default  reduce using rule 65 (statement)


State 206

   21 function_call: TK_IDENT '=' TK_IDENT '(' . func_param_call ')'
   23 func_param_call: . %empty  [')', ',']
   24                | . expr
   25                | . func_param_call ',' expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    $default  reduce using rule 23 (func_param_call)

    func_param_call  go to state 235
    expr             go to state 167


State 207

   59 statement: TK_IDENT '=' listofexpr ';' .

    $default  reduce using rule 59 (statement)


State 208

   27 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, '+', '-', '(', ')', ';']
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    '+'       [reduce using rule 27 (listofexpr)]
    '-'       [reduce using rule 27 (listofexpr)]
    $default  reduce using rule 27 (listofexpr)


State 209

   22 function_call: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 22 (function_call)


State 210

   25 func_param_call: func_param_call ',' . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 236


State 211

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 237


State 212

   73 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   74             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   75             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 238


State 213

   79 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   80                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 239


State 214

  104 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  108 data_type: . KW_INTEGER
  109          | . KW_SCALAR
  110          | . KW_STR
  111          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 240


State 215

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 17 (function_block)


State 216

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 241


State 217

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ';'       shift, and go to state 242


State 218

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   50     | TK_IDENT '[' expr . ']'
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ']'       shift, and go to state 243


State 219

   49 expr: '(' expr ')' .

    $default  reduce using rule 49 (expr)


State 220

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   46     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 46 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 46 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 46 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 46 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 46 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 46 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 46 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 46 and token '.' resolved as shift (TK_POW < '.').


State 221

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   36     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';', ',']
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 36 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 36 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 36 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 36 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 36 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 36 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 36 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 36 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 36 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 36 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 36 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 36 and token '.' resolved as shift (TK_EQEQ < '.').


State 222

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   35     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';', ',']
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 35 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 35 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 35 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 35 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 35 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 35 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 35 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 35 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 35 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 35 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 35 and token '.' resolved as shift (TK_NOTEQ < '.').


State 223

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   38     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';', ',']
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '+'     shift, and go to state 194
    '-'     shift, and go to state 195
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 38 and token '<' resolved as reduce (%left '<').
    Conflict between rule 38 and token '>' resolved as reduce (%left '>').
    Conflict between rule 38 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 38 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 38 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 38 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 38 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 38 and token '.' resolved as shift (TK_GREEQ < '.').


State 224

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   37     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';', ',']
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '+'     shift, and go to state 194
    '-'     shift, and go to state 195
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 37 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 37 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 37 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 37 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 37 and token '<' resolved as reduce (%left '<').
    Conflict between rule 37 and token '>' resolved as reduce (%left '>').
    Conflict between rule 37 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 37 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 37 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 37 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 37 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 37 and token '.' resolved as shift (TK_LESEQ < '.').


State 225

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   33     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';', ',']
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 33 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 33 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 33 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 33 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 33 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 33 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 33 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 33 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 33 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 33 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 33 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 33 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 33 and token '.' resolved as shift (KW_AND < '.').


State 226

   32 expr: expr . KW_OR expr
   32     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, '(', ')', ']', ':', ';', ',']
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 32 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 32 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 32 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 32 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 32 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 32 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 32 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 32 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 32 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 32 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 32 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 32 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 32 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 32 and token '.' resolved as shift (KW_OR < '.').


State 227

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   39     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';', ',']
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '+'     shift, and go to state 194
    '-'     shift, and go to state 195
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 39 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 39 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 39 and token '<' resolved as reduce (%left '<').
    Conflict between rule 39 and token '>' resolved as reduce (%left '>').
    Conflict between rule 39 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 39 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 39 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 39 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 39 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 39 and token '.' resolved as shift ('<' < '.').


State 228

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   40     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';', ',']
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '+'     shift, and go to state 194
    '-'     shift, and go to state 195
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 40 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 40 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 40 and token '<' resolved as reduce (%left '<').
    Conflict between rule 40 and token '>' resolved as reduce (%left '>').
    Conflict between rule 40 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 40 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 40 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 40 and token '.' resolved as shift ('>' < '.').


State 229

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   41     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 41 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 41 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 41 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 41 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 41 and token '+' resolved as reduce (%left '+').
    Conflict between rule 41 and token '-' resolved as reduce (%left '-').
    Conflict between rule 41 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 41 and token '.' resolved as shift ('+' < '.').


State 230

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   42     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '*'     shift, and go to state 196
    '/'     shift, and go to state 197
    '%'     shift, and go to state 198
    '.'     shift, and go to state 199

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 42 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 42 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 42 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 42 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 42 and token '+' resolved as reduce (%left '+').
    Conflict between rule 42 and token '-' resolved as reduce (%left '-').
    Conflict between rule 42 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 42 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 42 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 42 and token '.' resolved as shift ('-' < '.').


State 231

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   43     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 43 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 43 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 43 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 43 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 43 and token '*' resolved as reduce (%left '*').
    Conflict between rule 43 and token '/' resolved as reduce (%left '/').
    Conflict between rule 43 and token '%' resolved as reduce (%left '%').
    Conflict between rule 43 and token '.' resolved as shift ('*' < '.').


State 232

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   44     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 44 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '%' resolved as reduce (%left '%').
    Conflict between rule 44 and token '.' resolved as shift ('/' < '.').


State 233

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   45     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW  shift, and go to state 185
    '.'     shift, and go to state 199

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 45 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 45 and token '*' resolved as reduce (%left '*').
    Conflict between rule 45 and token '/' resolved as reduce (%left '/').
    Conflict between rule 45 and token '%' resolved as reduce (%left '%').
    Conflict between rule 45 and token '.' resolved as shift ('%' < '.').


State 234

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   51     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 51 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 51 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 51 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 51 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 51 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 51 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 51 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 51 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 51 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 51 and token '.' resolved as reduce (%left '.').


State 235

   21 function_call: TK_IDENT '=' TK_IDENT '(' func_param_call . ')'
   25 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 244
    ','  shift, and go to state 210


State 236

   25 func_param_call: func_param_call ',' expr .  [')', ',']
   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199

    $default  reduce using rule 25 (func_param_call)


State 237

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ':'       shift, and go to state 245


State 238

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   73             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   74             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ELSE      shift, and go to state 246
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 247
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 248
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 239

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   79                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   80                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDWHILE  shift, and go to state 249
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 250
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 240

  104 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 104 (multi_var_2)


State 241

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 242

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 251


State 243

   50 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 50 (expr)


State 244

   21 function_call: TK_IDENT '=' TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 21 (function_call)


State 245

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 252


State 246

   76 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 253


State 247

   74 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 74 (if_statement)


State 248

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   73             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ELSE      shift, and go to state 254
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 255
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 249

   80 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 80 (while_statement)


State 250

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   79                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDWHILE  shift, and go to state 256
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 251

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 19 (function_block)


State 252

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ']'       shift, and go to state 257
    ':'       shift, and go to state 258


State 253

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 259
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 260
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 254

   75 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 261


State 255

   73 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 73 (if_statement)


State 256

   79 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 79 (while_statement)


State 257

   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 262


State 258

   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . expr KW_OR expr
   33     | . expr KW_AND expr
   34     | . KW_NOT expr
   35     | . expr TK_NOTEQ expr
   36     | . expr TK_EQEQ expr
   37     | . expr TK_LESEQ expr
   38     | . expr TK_GREEQ expr
   39     | . expr '<' expr
   40     | . expr '>' expr
   41     | . expr '+' expr
   42     | . expr '-' expr
   43     | . expr '*' expr
   44     | . expr '/' expr
   45     | . expr '%' expr
   46     | . expr TK_POW expr
   47     | . '-' expr
   48     | . '+' expr
   49     | . '(' expr ')'
   50     | . TK_IDENT '[' expr ']'
   51     | . expr '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 149
    TK_CONSTINT    shift, and go to state 150
    TK_CONSTFLOAT  shift, and go to state 151
    TK_CONSTSTR    shift, and go to state 152
    KW_NOT         shift, and go to state 153
    '+'            shift, and go to state 154
    '-'            shift, and go to state 155
    '('            shift, and go to state 156

    expr  go to state 263


State 259

   78 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 78 (if_statement)


State 260

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 264
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 261

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 265
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 266
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 262

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ENDFOR    shift, and go to state 267
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 268
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 263

   32 expr: expr . KW_OR expr
   33     | expr . KW_AND expr
   35     | expr . TK_NOTEQ expr
   36     | expr . TK_EQEQ expr
   37     | expr . TK_LESEQ expr
   38     | expr . TK_GREEQ expr
   39     | expr . '<' expr
   40     | expr . '>' expr
   41     | expr . '+' expr
   42     | expr . '-' expr
   43     | expr . '*' expr
   44     | expr . '/' expr
   45     | expr . '%' expr
   46     | expr . TK_POW expr
   51     | expr . '.' expr
   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 185
    TK_EQEQ   shift, and go to state 186
    TK_NOTEQ  shift, and go to state 187
    TK_GREEQ  shift, and go to state 188
    TK_LESEQ  shift, and go to state 189
    KW_AND    shift, and go to state 190
    KW_OR     shift, and go to state 191
    '<'       shift, and go to state 192
    '>'       shift, and go to state 193
    '+'       shift, and go to state 194
    '-'       shift, and go to state 195
    '*'       shift, and go to state 196
    '/'       shift, and go to state 197
    '%'       shift, and go to state 198
    '.'       shift, and go to state 199
    ']'       shift, and go to state 269


State 264

   76 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 76 (if_statement)


State 265

   77 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 77 (if_statement)


State 266

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_WHILE     shift, and go to state 92
    KW_ENDIF     shift, and go to state 270
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 267

   84 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 84 (for_statement)


State 268

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ENDFOR    shift, and go to state 271
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 269

   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 272


State 270

   75 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 75 (if_statement)


State 271

   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 83 (for_statement)


State 272

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   57 statements: . statement
   58           | . statements statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   81              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   82              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ENDFOR    shift, and go to state 273
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call    go to state 94
    statements       go to state 274
    statement        go to state 97
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 273

   82 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 82 (for_statement)


State 274

   21 function_call: . TK_IDENT '=' TK_IDENT '(' func_param_call ')'
   22              | . TK_IDENT '(' func_param_call ')'
   58 statements: statements . statement
   59 statement: . TK_IDENT '=' listofexpr ';'
   60          | . TK_IDENT TK_PLUEQ expr ';'
   61          | . TK_IDENT TK_MINEQ expr ';'
   62          | . TK_IDENT TK_MULEQ expr ';'
   63          | . TK_IDENT TK_MODEQ expr ';'
   64          | . TK_IDENT TK_DIVEQ expr ';'
   65          | . TK_IDENT TK_COLEQ expr ';'
   66          | . if_statement ';'
   67          | . for_statement ';'
   68          | . while_statement ';'
   69          | . KW_BREAK ';'
   70          | . KW_CONTINUE ';'
   71          | . function_call ';'
   72          | . ';'
   73 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   74             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   75             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   79 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   80                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   81 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   81              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   82              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   83              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 133
    KW_FOR       shift, and go to state 87
    KW_BREAK     shift, and go to state 88
    KW_CONTINUE  shift, and go to state 89
    KW_IF        shift, and go to state 91
    KW_ENDFOR    shift, and go to state 275
    KW_WHILE     shift, and go to state 92
    ';'          shift, and go to state 93

    function_call    go to state 94
    statement        go to state 134
    if_statement     go to state 98
    while_statement  go to state 99
    for_statement    go to state 100


State 275

   81 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 81 (for_statement)
