Nonterminals useless in grammar

    in_loop_stmts


Terminals unused in grammar

    KW_ENDCOMP
    KW_OF
    KW_COMP


State 117 conflicts: 2 shift/reduce
State 155 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    7 function_blocks: function_block ';'
    8                | function_blocks function_block ';'

    9 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

   14 listofexpr: expr
   15           | listofexpr expr

   16 expr: TK_CONSTINT
   17     | TK_CONSTFLOAT
   18     | TK_IDENT
   19     | expr KW_OR expr
   20     | expr KW_AND expr
   21     | KW_NOT expr
   22     | expr TK_NOTEQ expr
   23     | expr TK_EQEQ expr
   24     | expr TK_LESEQ expr
   25     | expr TK_GREEQ expr
   26     | expr '<' expr
   27     | expr '>' expr
   28     | expr '+' expr
   29     | expr '-' expr
   30     | expr '*' expr
   31     | expr '/' expr
   32     | expr '%' expr
   33     | expr TK_POW expr
   34     | '-' expr
   35     | '+' expr
   36     | '(' expr ')'
   37     | TK_IDENT '[' expr ']'
   38     | expr '.' expr

   39 listofinstructions: var_declarations const_declarations statements
   40                   | const_declarations var_declarations statements
   41                   | statements

   42 statements: statement
   43           | statements statement

   44 statement: TK_IDENT '=' listofexpr ';'
   45          | TK_IDENT TK_PLUEQ expr ';'
   46          | TK_IDENT TK_MINEQ expr ';'
   47          | TK_IDENT TK_MULEQ expr ';'
   48          | TK_IDENT TK_MODEQ expr ';'
   49          | TK_IDENT TK_DIVEQ expr ';'
   50          | TK_IDENT TK_COLEQ expr ';'
   51          | if_statement ';'
   52          | for_statement ';'
   53          | while_statement ';'
   54          | KW_BREAK ';'
   55          | KW_CONTINUE ';'
   56          | ';'

   57 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   63 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   69 const_declarations: const_declaration ';'
   70                   | const_declarations const_declaration ';'

   71 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

   76 var_declarations: var_declaration ';'
   77                 | var_declarations var_declaration ';'

   78 var_declaration: TK_IDENT ':' data_type

   79 data_type: KW_INTEGER
   80          | KW_SCALAR
   81          | KW_STR
   82          | KW_BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 32
    '(' (40) 5 6 9 10 11 12 13 36 57 58 59 60 61 62 63 64
    ')' (41) 5 6 9 10 11 12 13 36 57 58 59 60 61 62 63 64
    '*' (42) 30
    '+' (43) 28 35
    '-' (45) 29 34
    '.' (46) 38
    '/' (47) 31
    ':' (58) 5 6 9 10 11 12 13 57 58 59 60 61 62 63 64 65 66 67 68 71 72 73 74 75 78
    ';' (59) 5 6 7 8 10 11 12 13 44 45 46 47 48 49 50 51 52 53 54 55 56 69 70 76 77
    '<' (60) 26
    '=' (61) 44 71 72 73 74 75
    '>' (62) 27
    '[' (91) 37 65 66 67 68
    ']' (93) 37 65 66 67 68
    error (256)
    TK_IDENT <str> (258) 9 10 11 12 13 18 37 44 45 46 47 48 49 50 65 66 67 68 71 72 73 74 75 78
    TK_CONSTINT <str> (259) 16 72
    TK_CONSTFLOAT <str> (260) 17 71
    TK_CONSTSTR <str> (261) 73
    TK_POW (262) 33
    TK_PLUEQ (263) 45
    TK_MINEQ (264) 46
    TK_MULEQ (265) 47
    TK_DIVEQ (266) 49
    TK_MODEQ (267) 48
    TK_EQEQ (268) 23
    TK_NOTEQ (269) 22
    TK_GREEQ (270) 25
    TK_LESEQ (271) 24
    TK_COLEQ (272) 50
    KW_AND (273) 20
    KW_OR (274) 19
    KW_NOT (275) 21
    KW_INTEGER (276) 72 79
    KW_FOR (277) 65 66 67 68
    KW_BREAK (278) 54
    KW_DEF (279) 5 6 9 10 11 12 13
    KW_ENDCOMP (280)
    KW_SCALAR (281) 71 80
    KW_CONST (282) 71 72 73 74 75
    KW_IN (283) 65 66 67 68
    KW_CONTINUE (284) 55
    KW_ENDDEF (285) 5 6 9 10 11 12 13
    KW_OF (286)
    KW_STR (287) 73 81
    KW_IF (288) 57 58 59 60 61 62
    KW_ENDFOR (289) 65 66 67 68
    KW_MAIN (290) 5 6
    KW_BOOLEAN (291) 74 75 82
    KW_ELSE (292) 59 60 61 62
    KW_WHILE (293) 63 64
    KW_RETURN (294) 10 11 12 13
    KW_ENDIF (295) 57 58 59 60 61 62
    KW_ENDWHILE (296) 63 64
    KW_COMP (297)
    KW_TRUE (298) 74
    KW_FALSE (299) 75
    UMINUS (300)
    UPLUS (301)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    program (63)
        on left: 1 2 3 4
        on right: 0
    main_block <str> (64)
        on left: 5 6
        on right: 1 2 3 4
    function_blocks <str> (65)
        on left: 7 8
        on right: 2 3 4 8
    function_block <str> (66)
        on left: 9 10 11 12 13
        on right: 7 8
    listofexpr <str> (67)
        on left: 14 15
        on right: 15 44 57 58 59 60 61 62 63 64
    expr <str> (68)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38
        on right: 12 13 14 15 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 45 46 47 48 49 50 65 66 67 68
    listofinstructions <str> (69)
        on left: 39 40 41
        on right: 6 9 10 12
    statements <str> (70)
        on left: 42 43
        on right: 39 40 41 43 57 59 60 61 63 65 67
    statement <str> (71)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55 56
        on right: 42 43
    if_statement <str> (72)
        on left: 57 58 59 60 61 62
        on right: 51
    while_statement <str> (73)
        on left: 63 64
        on right: 53
    for_statement <str> (74)
        on left: 65 66 67 68
        on right: 52
    const_declarations <str> (75)
        on left: 69 70
        on right: 4 39 40 70
    const_declaration <str> (76)
        on left: 71 72 73 74 75
        on right: 69 70
    var_declarations <str> (77)
        on left: 76 77
        on right: 3 4 39 40 77
    var_declaration <str> (78)
        on left: 78
        on right: 76 77
    data_type <str> (79)
        on left: 79 80 81 82
        on right: 78


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
    7 function_blocks: . function_block ';'
    8                | . function_blocks function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF
   69 const_declarations: . const_declaration ';'
   70                   | . const_declarations const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   76 var_declarations: . var_declaration ';'
   77                 | . var_declarations var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    program             go to state 4
    main_block          go to state 5
    function_blocks     go to state 6
    function_block      go to state 7
    const_declarations  go to state 8
    const_declaration   go to state 9
    var_declarations    go to state 10
    var_declaration     go to state 11


State 1

   78 var_declaration: TK_IDENT . ':' data_type

    ':'  shift, and go to state 12


State 2

    5 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
    9 function_block: KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF . TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF . TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 13
    KW_MAIN   shift, and go to state 14


State 3

   71 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 15


State 4

    0 $accept: program . $end

    $end  shift, and go to state 16


State 5

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 6

    2 program: function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
    8 function_blocks: function_blocks . function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 17
    function_block  go to state 18


State 7

    7 function_blocks: function_block . ';'

    ';'  shift, and go to state 19


State 8

    4 program: const_declarations . var_declarations function_blocks main_block
   70 const_declarations: const_declarations . const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   76 var_declarations: . var_declaration ';'
   77                 | . var_declarations var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 20
    var_declarations   go to state 21
    var_declaration    go to state 11


State 9

   69 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 22


State 10

    3 program: var_declarations . function_blocks main_block
    7 function_blocks: . function_block ';'
    8                | . function_blocks function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF
   77 var_declarations: var_declarations . var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 23

    function_blocks  go to state 24
    function_block   go to state 7
    var_declaration  go to state 25


State 11

   76 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 26


State 12

   78 var_declaration: TK_IDENT ':' . data_type
   79 data_type: . KW_INTEGER
   80          | . KW_SCALAR
   81          | . KW_STR
   82          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 27
    KW_SCALAR   shift, and go to state 28
    KW_STR      shift, and go to state 29
    KW_BOOLEAN  shift, and go to state 30

    data_type  go to state 31


State 13

    9 function_block: KW_DEF TK_IDENT . '(' ')' ':' listofinstructions KW_ENDDEF
   10               | KW_DEF TK_IDENT . '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF TK_IDENT . '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT . '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT . '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 32


State 14

    5 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 33


State 15

   71 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
   73                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
   74                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
   75                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 34


State 16

    0 $accept: program $end .

    $default  accept


State 17

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 18

    8 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 35


State 19

    7 function_blocks: function_block ';' .

    $default  reduce using rule 7 (function_blocks)


State 20

   70 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 36


State 21

    4 program: const_declarations var_declarations . function_blocks main_block
    7 function_blocks: . function_block ';'
    8                | . function_blocks function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF
   77 var_declarations: var_declarations . var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 23

    function_blocks  go to state 37
    function_block   go to state 7
    var_declaration  go to state 25


State 22

   69 const_declarations: const_declaration ';' .

    $default  reduce using rule 69 (const_declarations)


State 23

    9 function_block: KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF . TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF . TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF . TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 13


State 24

    3 program: var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
    8 function_blocks: function_blocks . function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 38
    function_block  go to state 18


State 25

   77 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 39


State 26

   76 var_declarations: var_declaration ';' .

    $default  reduce using rule 76 (var_declarations)


State 27

   79 data_type: KW_INTEGER .

    $default  reduce using rule 79 (data_type)


State 28

   80 data_type: KW_SCALAR .

    $default  reduce using rule 80 (data_type)


State 29

   81 data_type: KW_STR .

    $default  reduce using rule 81 (data_type)


State 30

   82 data_type: KW_BOOLEAN .

    $default  reduce using rule 82 (data_type)


State 31

   78 var_declaration: TK_IDENT ':' data_type .

    $default  reduce using rule 78 (var_declaration)


State 32

    9 function_block: KW_DEF TK_IDENT '(' . ')' ':' listofinstructions KW_ENDDEF
   10               | KW_DEF TK_IDENT '(' . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF TK_IDENT '(' . ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' . ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT '(' . ')' ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 40


State 33

    5 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 41


State 34

   71 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
   72                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
   73                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
   74                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
   75                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 42
    TK_CONSTFLOAT  shift, and go to state 43
    TK_CONSTSTR    shift, and go to state 44
    KW_TRUE        shift, and go to state 45
    KW_FALSE       shift, and go to state 46


State 35

    8 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 8 (function_blocks)


State 36

   70 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 70 (const_declarations)


State 37

    4 program: const_declarations var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
    8 function_blocks: function_blocks . function_block ';'
    9 function_block: . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF
   10               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF
   12               | . KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | . KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 47
    function_block  go to state 18


State 38

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 39

   77 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 77 (var_declarations)


State 40

    9 function_block: KW_DEF TK_IDENT '(' ')' . ':' listofinstructions KW_ENDDEF
   10               | KW_DEF TK_IDENT '(' ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF TK_IDENT '(' ')' . ':' KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' ')' . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT '(' ')' . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 48


State 41

    5 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 49


State 42

   72 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 50


State 43

   71 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 51


State 44

   73 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 52


State 45

   74 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 53


State 46

   75 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 54


State 47

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 48

    9 function_block: KW_DEF TK_IDENT '(' ')' ':' . listofinstructions KW_ENDDEF
   10               | KW_DEF TK_IDENT '(' ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   11               | KW_DEF TK_IDENT '(' ')' ':' . KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' ')' ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT '(' ')' ':' . KW_RETURN expr ';' KW_ENDDEF
   39 listofinstructions: . var_declarations const_declarations statements
   40                   | . const_declarations var_declarations statements
   41                   | . statements
   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   69 const_declarations: . const_declaration ';'
   70                   | . const_declarations const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   76 var_declarations: . var_declaration ';'
   77                 | . var_declarations var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 55
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_RETURN    shift, and go to state 61
    ';'          shift, and go to state 62

    listofinstructions  go to state 63
    statements          go to state 64
    statement           go to state 65
    if_statement        go to state 66
    while_statement     go to state 67
    for_statement       go to state 68
    const_declarations  go to state 69
    const_declaration   go to state 9
    var_declarations    go to state 70
    var_declaration     go to state 11


State 49

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   39 listofinstructions: . var_declarations const_declarations statements
   40                   | . const_declarations var_declarations statements
   41                   | . statements
   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   69 const_declarations: . const_declaration ';'
   70                   | . const_declarations const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   76 var_declarations: . var_declaration ';'
   77                 | . var_declarations var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 55
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 58
    KW_ENDDEF    shift, and go to state 71
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    listofinstructions  go to state 72
    statements          go to state 64
    statement           go to state 65
    if_statement        go to state 66
    while_statement     go to state 67
    for_statement       go to state 68
    const_declarations  go to state 69
    const_declaration   go to state 9
    var_declarations    go to state 70
    var_declaration     go to state 11


State 50

   72 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 73


State 51

   71 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 74


State 52

   73 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 75


State 53

   74 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 76


State 54

   75 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 77


State 55

   44 statement: TK_IDENT . '=' listofexpr ';'
   45          | TK_IDENT . TK_PLUEQ expr ';'
   46          | TK_IDENT . TK_MINEQ expr ';'
   47          | TK_IDENT . TK_MULEQ expr ';'
   48          | TK_IDENT . TK_MODEQ expr ';'
   49          | TK_IDENT . TK_DIVEQ expr ';'
   50          | TK_IDENT . TK_COLEQ expr ';'
   78 var_declaration: TK_IDENT . ':' data_type

    TK_PLUEQ  shift, and go to state 78
    TK_MINEQ  shift, and go to state 79
    TK_MULEQ  shift, and go to state 80
    TK_DIVEQ  shift, and go to state 81
    TK_MODEQ  shift, and go to state 82
    TK_COLEQ  shift, and go to state 83
    '='       shift, and go to state 84
    ':'       shift, and go to state 12


State 56

   65 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 85


State 57

   54 statement: KW_BREAK . ';'

    ';'  shift, and go to state 86


State 58

   55 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 87


State 59

   57 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   58             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   59             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 88


State 60

   63 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 89


State 61

   11 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN . ';' KW_ENDDEF
   13               | KW_DEF TK_IDENT '(' ')' ':' KW_RETURN . expr ';' KW_ENDDEF
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96
    ';'            shift, and go to state 97

    expr  go to state 98


State 62

   56 statement: ';' .

    $default  reduce using rule 56 (statement)


State 63

    9 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions . KW_ENDDEF
   10               | KW_DEF TK_IDENT '(' ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' ')' ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 99
    KW_RETURN  shift, and go to state 100


State 64

   41 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    $default  reduce using rule 41 (listofinstructions)

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 65

   42 statements: statement .

    $default  reduce using rule 42 (statements)


State 66

   51 statement: if_statement . ';'

    ';'  shift, and go to state 103


State 67

   53 statement: while_statement . ';'

    ';'  shift, and go to state 104


State 68

   52 statement: for_statement . ';'

    ';'  shift, and go to state 105


State 69

   40 listofinstructions: const_declarations . var_declarations statements
   70 const_declarations: const_declarations . const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   76 var_declarations: . var_declaration ';'
   77                 | . var_declarations var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 20
    var_declarations   go to state 106
    var_declaration    go to state 11


State 70

   39 listofinstructions: var_declarations . const_declarations statements
   69 const_declarations: . const_declaration ';'
   70                   | . const_declarations const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   77 var_declarations: var_declarations . var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declarations  go to state 107
    const_declaration   go to state 9
    var_declaration     go to state 25


State 71

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 108


State 72

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 109


State 73

   72 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 72 (const_declaration)


State 74

   71 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 71 (const_declaration)


State 75

   73 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 73 (const_declaration)


State 76

   74 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 74 (const_declaration)


State 77

   75 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 75 (const_declaration)


State 78

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   45 statement: TK_IDENT TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 110


State 79

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   46 statement: TK_IDENT TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 111


State 80

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   47 statement: TK_IDENT TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 112


State 81

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   49 statement: TK_IDENT TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 113


State 82

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   48 statement: TK_IDENT TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 114


State 83

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   50 statement: TK_IDENT TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 115


State 84

   14 listofexpr: . expr
   15           | . listofexpr expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   44 statement: TK_IDENT '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    listofexpr  go to state 116
    expr        go to state 117


State 85

   65 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 118


State 86

   54 statement: KW_BREAK ';' .

    $default  reduce using rule 54 (statement)


State 87

   55 statement: KW_CONTINUE ';' .

    $default  reduce using rule 55 (statement)


State 88

   14 listofexpr: . expr
   15           | . listofexpr expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   57 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   58             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   59             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    listofexpr  go to state 119
    expr        go to state 117


State 89

   14 listofexpr: . expr
   15           | . listofexpr expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   63 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   64                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    listofexpr  go to state 120
    expr        go to state 117


State 90

   18 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';']
   37     | TK_IDENT . '[' expr ']'

    '['  shift, and go to state 121

    $default  reduce using rule 18 (expr)


State 91

   16 expr: TK_CONSTINT .

    $default  reduce using rule 16 (expr)


State 92

   17 expr: TK_CONSTFLOAT .

    $default  reduce using rule 17 (expr)


State 93

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   21     | KW_NOT . expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 122


State 94

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   35     | '+' . expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 123


State 95

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   34     | '-' . expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 124


State 96

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   36     | '(' . expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 125


State 97

   11 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 126


State 98

   13 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr . ';' KW_ENDDEF
   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 142


State 99

    9 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 9 (function_block)


State 100

   10 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF
   12               | KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96
    ';'            shift, and go to state 143

    expr  go to state 144


State 101

   44 statement: TK_IDENT . '=' listofexpr ';'
   45          | TK_IDENT . TK_PLUEQ expr ';'
   46          | TK_IDENT . TK_MINEQ expr ';'
   47          | TK_IDENT . TK_MULEQ expr ';'
   48          | TK_IDENT . TK_MODEQ expr ';'
   49          | TK_IDENT . TK_DIVEQ expr ';'
   50          | TK_IDENT . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 78
    TK_MINEQ  shift, and go to state 79
    TK_MULEQ  shift, and go to state 80
    TK_DIVEQ  shift, and go to state 81
    TK_MODEQ  shift, and go to state 82
    TK_COLEQ  shift, and go to state 83
    '='       shift, and go to state 84


State 102

   43 statements: statements statement .

    $default  reduce using rule 43 (statements)


State 103

   51 statement: if_statement ';' .

    $default  reduce using rule 51 (statement)


State 104

   53 statement: while_statement ';' .

    $default  reduce using rule 53 (statement)


State 105

   52 statement: for_statement ';' .

    $default  reduce using rule 52 (statement)


State 106

   40 listofinstructions: const_declarations var_declarations . statements
   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   77 var_declarations: var_declarations . var_declaration ';'
   78 var_declaration: . TK_IDENT ':' data_type

    TK_IDENT     shift, and go to state 55
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statements       go to state 145
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68
    var_declaration  go to state 25


State 107

   39 listofinstructions: var_declarations const_declarations . statements
   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   70 const_declarations: const_declarations . const_declaration ';'
   71 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   72                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   73                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   74                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   75                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statements         go to state 146
    statement          go to state 65
    if_statement       go to state 66
    while_statement    go to state 67
    for_statement      go to state 68
    const_declaration  go to state 20


State 108

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 5 (main_block)


State 109

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 147


State 110

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   45 statement: TK_IDENT TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 148


State 111

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   46 statement: TK_IDENT TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 149


State 112

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   47 statement: TK_IDENT TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 150


State 113

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   49 statement: TK_IDENT TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 151


State 114

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   48 statement: TK_IDENT TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 152


State 115

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   50 statement: TK_IDENT TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 153


State 116

   15 listofexpr: listofexpr . expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   44 statement: TK_IDENT '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96
    ';'            shift, and go to state 154

    expr  go to state 155


State 117

   14 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_NOT, '+', '-', '(', ')', ';']
   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    '+'       [reduce using rule 14 (listofexpr)]
    '-'       [reduce using rule 14 (listofexpr)]
    $default  reduce using rule 14 (listofexpr)


State 118

   65 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 156


State 119

   15 listofexpr: listofexpr . expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   57 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   58             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   59             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96
    ')'            shift, and go to state 157

    expr  go to state 155


State 120

   15 listofexpr: listofexpr . expr
   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   63 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   64                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96
    ')'            shift, and go to state 158

    expr  go to state 155


State 121

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   37     | TK_IDENT '[' . expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 159


State 122

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   21     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    $default  reduce using rule 21 (expr)

    Conflict between rule 21 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 21 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 21 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 21 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 21 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 21 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 21 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 21 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 21 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 21 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 21 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 21 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 21 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 21 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 21 and token '.' resolved as shift (KW_NOT < '.').


State 123

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   35     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 35 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 35 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 35 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 35 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 35 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 35 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 35 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 35 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 35 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 35 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 35 and token '.' resolved as shift (UPLUS < '.').


State 124

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   34     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 34 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 34 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 34 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 34 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 34 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 34 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 34 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 34 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 34 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 34 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 34 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 34 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 34 and token '.' resolved as shift (UMINUS < '.').


State 125

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   36     | '(' expr . ')'
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ')'       shift, and go to state 160


State 126

   11 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 11 (function_block)


State 127

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   33     | expr TK_POW . expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 161


State 128

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   23     | expr TK_EQEQ . expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 162


State 129

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   22     | expr TK_NOTEQ . expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 163


State 130

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   25     | expr TK_GREEQ . expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 164


State 131

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   24     | expr TK_LESEQ . expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 165


State 132

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   20     | expr KW_AND . expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 166


State 133

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   19     | expr KW_OR . expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 167


State 134

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   26     | expr '<' . expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 168


State 135

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   27     | expr '>' . expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 169


State 136

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   28     | expr '+' . expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 170


State 137

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   29     | expr '-' . expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 171


State 138

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   30     | expr '*' . expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 172


State 139

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   31     | expr '/' . expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 173


State 140

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   32     | expr '%' . expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 174


State 141

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   38     | expr '.' . expr

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 175


State 142

   13 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 176


State 143

   10 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 177


State 144

   12 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ';'       shift, and go to state 178


State 145

   40 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    $default  reduce using rule 40 (listofinstructions)

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 146

   39 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    $default  reduce using rule 39 (listofinstructions)

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 147

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 148

   45 statement: TK_IDENT TK_PLUEQ expr ';' .

    $default  reduce using rule 45 (statement)


State 149

   46 statement: TK_IDENT TK_MINEQ expr ';' .

    $default  reduce using rule 46 (statement)


State 150

   47 statement: TK_IDENT TK_MULEQ expr ';' .

    $default  reduce using rule 47 (statement)


State 151

   49 statement: TK_IDENT TK_DIVEQ expr ';' .

    $default  reduce using rule 49 (statement)


State 152

   48 statement: TK_IDENT TK_MODEQ expr ';' .

    $default  reduce using rule 48 (statement)


State 153

   50 statement: TK_IDENT TK_COLEQ expr ';' .

    $default  reduce using rule 50 (statement)


State 154

   44 statement: TK_IDENT '=' listofexpr ';' .

    $default  reduce using rule 44 (statement)


State 155

   15 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_NOT, '+', '-', '(', ')', ';']
   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    '+'       [reduce using rule 15 (listofexpr)]
    '-'       [reduce using rule 15 (listofexpr)]
    $default  reduce using rule 15 (listofexpr)


State 156

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 179


State 157

   57 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   58             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   59             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   61             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 180


State 158

   63 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   64                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 181


State 159

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   37     | TK_IDENT '[' expr . ']'
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ']'       shift, and go to state 182


State 160

   36 expr: '(' expr ')' .

    $default  reduce using rule 36 (expr)


State 161

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   33     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 33 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 33 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 33 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 33 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 33 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 33 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 33 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 33 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 33 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 33 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 33 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 33 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 33 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 33 and token '.' resolved as shift (TK_POW < '.').


State 162

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   23     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    $default  reduce using rule 23 (expr)

    Conflict between rule 23 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 23 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 23 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 23 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 23 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 23 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 23 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 23 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 23 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 23 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 23 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 23 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 23 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 23 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 23 and token '.' resolved as shift (TK_EQEQ < '.').


State 163

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   22     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    $default  reduce using rule 22 (expr)

    Conflict between rule 22 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 22 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 22 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 22 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 22 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 22 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 22 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 22 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 22 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 22 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 22 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 22 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 22 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 22 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 22 and token '.' resolved as shift (TK_NOTEQ < '.').


State 164

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   25     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '+'     shift, and go to state 136
    '-'     shift, and go to state 137
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 25 (expr)

    Conflict between rule 25 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 25 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 25 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 25 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 25 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 25 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 25 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 25 and token '<' resolved as reduce (%left '<').
    Conflict between rule 25 and token '>' resolved as reduce (%left '>').
    Conflict between rule 25 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 25 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 25 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 25 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 25 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 25 and token '.' resolved as shift (TK_GREEQ < '.').


State 165

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   24     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '+'     shift, and go to state 136
    '-'     shift, and go to state 137
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 24 (expr)

    Conflict between rule 24 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 24 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 24 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 24 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 24 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 24 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 24 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 24 and token '<' resolved as reduce (%left '<').
    Conflict between rule 24 and token '>' resolved as reduce (%left '>').
    Conflict between rule 24 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 24 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 24 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 24 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 24 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 24 and token '.' resolved as shift (TK_LESEQ < '.').


State 166

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   20     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_AND, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    $default  reduce using rule 20 (expr)

    Conflict between rule 20 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 20 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 20 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 20 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 20 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 20 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 20 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 20 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 20 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 20 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 20 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 20 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 20 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 20 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 20 and token '.' resolved as shift (KW_AND < '.').


State 167

   19 expr: expr . KW_OR expr
   19     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, KW_OR, KW_NOT, '(', ')', ']', ':', ';']
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141

    $default  reduce using rule 19 (expr)

    Conflict between rule 19 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 19 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 19 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 19 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 19 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 19 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 19 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 19 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 19 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 19 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 19 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 19 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 19 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 19 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 19 and token '.' resolved as shift (KW_OR < '.').


State 168

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   26     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '+'     shift, and go to state 136
    '-'     shift, and go to state 137
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 26 (expr)

    Conflict between rule 26 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 26 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 26 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 26 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 26 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 26 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 26 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 26 and token '<' resolved as reduce (%left '<').
    Conflict between rule 26 and token '>' resolved as reduce (%left '>').
    Conflict between rule 26 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 26 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 26 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 26 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 26 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 26 and token '.' resolved as shift ('<' < '.').


State 169

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   27     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '(', ')', ']', ':', ';']
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '+'     shift, and go to state 136
    '-'     shift, and go to state 137
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 27 (expr)

    Conflict between rule 27 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 27 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 27 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 27 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 27 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 27 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 27 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 27 and token '<' resolved as reduce (%left '<').
    Conflict between rule 27 and token '>' resolved as reduce (%left '>').
    Conflict between rule 27 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 27 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 27 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 27 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 27 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 27 and token '.' resolved as shift ('>' < '.').


State 170

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   28     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';']
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 28 (expr)

    Conflict between rule 28 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 28 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 28 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 28 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 28 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 28 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 28 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 28 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 28 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 28 and token '+' resolved as reduce (%left '+').
    Conflict between rule 28 and token '-' resolved as reduce (%left '-').
    Conflict between rule 28 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 28 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 28 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 28 and token '.' resolved as shift ('+' < '.').


State 171

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   29     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '(', ')', ']', ':', ';']
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '*'     shift, and go to state 138
    '/'     shift, and go to state 139
    '%'     shift, and go to state 140
    '.'     shift, and go to state 141

    $default  reduce using rule 29 (expr)

    Conflict between rule 29 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 29 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 29 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 29 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 29 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 29 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 29 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 29 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 29 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 29 and token '+' resolved as reduce (%left '+').
    Conflict between rule 29 and token '-' resolved as reduce (%left '-').
    Conflict between rule 29 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 29 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 29 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 29 and token '.' resolved as shift ('-' < '.').


State 172

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   30     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 30 (expr)

    Conflict between rule 30 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 30 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 30 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 30 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 30 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 30 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 30 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 30 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 30 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 30 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 30 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 30 and token '*' resolved as reduce (%left '*').
    Conflict between rule 30 and token '/' resolved as reduce (%left '/').
    Conflict between rule 30 and token '%' resolved as reduce (%left '%').
    Conflict between rule 30 and token '.' resolved as shift ('*' < '.').


State 173

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   31     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 31 (expr)

    Conflict between rule 31 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 31 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 31 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 31 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 31 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 31 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 31 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 31 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 31 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 31 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 31 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 31 and token '*' resolved as reduce (%left '*').
    Conflict between rule 31 and token '/' resolved as reduce (%left '/').
    Conflict between rule 31 and token '%' resolved as reduce (%left '%').
    Conflict between rule 31 and token '.' resolved as shift ('/' < '.').


State 174

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   32     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';']
   33     | expr . TK_POW expr
   38     | expr . '.' expr

    TK_POW  shift, and go to state 127
    '.'     shift, and go to state 141

    $default  reduce using rule 32 (expr)

    Conflict between rule 32 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 32 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 32 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 32 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 32 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 32 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 32 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 32 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 32 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 32 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 32 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 32 and token '*' resolved as reduce (%left '*').
    Conflict between rule 32 and token '/' resolved as reduce (%left '/').
    Conflict between rule 32 and token '%' resolved as reduce (%left '%').
    Conflict between rule 32 and token '.' resolved as shift ('%' < '.').


State 175

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   38     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';']

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 38 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 38 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 38 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 38 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 38 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 38 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 38 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 38 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 38 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 38 and token '.' resolved as reduce (%left '.').


State 176

   13 function_block: KW_DEF TK_IDENT '(' ')' ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 13 (function_block)


State 177

   10 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 10 (function_block)


State 178

   12 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 183


State 179

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ':'       shift, and go to state 184


State 180

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   57             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   58             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   59             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   61             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ELSE      shift, and go to state 185
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 186
    ';'          shift, and go to state 62

    statements       go to state 187
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 181

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   63                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   64                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDWHILE  shift, and go to state 188
    ';'          shift, and go to state 62

    statements       go to state 189
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 182

   37 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 37 (expr)


State 183

   12 function_block: KW_DEF TK_IDENT '(' ')' ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 12 (function_block)


State 184

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 190


State 185

   60 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   62             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 191


State 186

   58 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 58 (if_statement)


State 187

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   57             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   59             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   61             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ELSE      shift, and go to state 192
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 193
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 188

   64 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 64 (while_statement)


State 189

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   63                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDWHILE  shift, and go to state 194
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 190

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ']'       shift, and go to state 195
    ':'       shift, and go to state 196


State 191

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   62             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 197
    ';'          shift, and go to state 62

    statements       go to state 198
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 192

   59 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   61             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 199


State 193

   57 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 57 (if_statement)


State 194

   63 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 63 (while_statement)


State 195

   67 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 200


State 196

   16 expr: . TK_CONSTINT
   17     | . TK_CONSTFLOAT
   18     | . TK_IDENT
   19     | . expr KW_OR expr
   20     | . expr KW_AND expr
   21     | . KW_NOT expr
   22     | . expr TK_NOTEQ expr
   23     | . expr TK_EQEQ expr
   24     | . expr TK_LESEQ expr
   25     | . expr TK_GREEQ expr
   26     | . expr '<' expr
   27     | . expr '>' expr
   28     | . expr '+' expr
   29     | . expr '-' expr
   30     | . expr '*' expr
   31     | . expr '/' expr
   32     | . expr '%' expr
   33     | . expr TK_POW expr
   34     | . '-' expr
   35     | . '+' expr
   36     | . '(' expr ')'
   37     | . TK_IDENT '[' expr ']'
   38     | . expr '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 90
    TK_CONSTINT    shift, and go to state 91
    TK_CONSTFLOAT  shift, and go to state 92
    KW_NOT         shift, and go to state 93
    '+'            shift, and go to state 94
    '-'            shift, and go to state 95
    '('            shift, and go to state 96

    expr  go to state 201


State 197

   62 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 62 (if_statement)


State 198

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   60             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 202
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 199

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   59             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   61             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 203
    ';'          shift, and go to state 62

    statements       go to state 204
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 200

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   68              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ENDFOR    shift, and go to state 205
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statements       go to state 206
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 201

   19 expr: expr . KW_OR expr
   20     | expr . KW_AND expr
   22     | expr . TK_NOTEQ expr
   23     | expr . TK_EQEQ expr
   24     | expr . TK_LESEQ expr
   25     | expr . TK_GREEQ expr
   26     | expr . '<' expr
   27     | expr . '>' expr
   28     | expr . '+' expr
   29     | expr . '-' expr
   30     | expr . '*' expr
   31     | expr . '/' expr
   32     | expr . '%' expr
   33     | expr . TK_POW expr
   38     | expr . '.' expr
   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 127
    TK_EQEQ   shift, and go to state 128
    TK_NOTEQ  shift, and go to state 129
    TK_GREEQ  shift, and go to state 130
    TK_LESEQ  shift, and go to state 131
    KW_AND    shift, and go to state 132
    KW_OR     shift, and go to state 133
    '<'       shift, and go to state 134
    '>'       shift, and go to state 135
    '+'       shift, and go to state 136
    '-'       shift, and go to state 137
    '*'       shift, and go to state 138
    '/'       shift, and go to state 139
    '%'       shift, and go to state 140
    '.'       shift, and go to state 141
    ']'       shift, and go to state 207


State 202

   60 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 60 (if_statement)


State 203

   61 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 61 (if_statement)


State 204

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   59             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_WHILE     shift, and go to state 60
    KW_ENDIF     shift, and go to state 208
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 205

   68 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 68 (for_statement)


State 206

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   67              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ENDFOR    shift, and go to state 209
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 207

   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 210


State 208

   59 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 59 (if_statement)


State 209

   67 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 67 (for_statement)


State 210

   42 statements: . statement
   43           | . statements statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   65              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   66              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ENDFOR    shift, and go to state 211
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statements       go to state 212
    statement        go to state 65
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 211

   66 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 66 (for_statement)


State 212

   43 statements: statements . statement
   44 statement: . TK_IDENT '=' listofexpr ';'
   45          | . TK_IDENT TK_PLUEQ expr ';'
   46          | . TK_IDENT TK_MINEQ expr ';'
   47          | . TK_IDENT TK_MULEQ expr ';'
   48          | . TK_IDENT TK_MODEQ expr ';'
   49          | . TK_IDENT TK_DIVEQ expr ';'
   50          | . TK_IDENT TK_COLEQ expr ';'
   51          | . if_statement ';'
   52          | . for_statement ';'
   53          | . while_statement ';'
   54          | . KW_BREAK ';'
   55          | . KW_CONTINUE ';'
   56          | . ';'
   57 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   58             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   59             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   60             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   61             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   62             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   63 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   64                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   65 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   65              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   66              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   67              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   68              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 101
    KW_FOR       shift, and go to state 56
    KW_BREAK     shift, and go to state 57
    KW_CONTINUE  shift, and go to state 58
    KW_IF        shift, and go to state 59
    KW_ENDFOR    shift, and go to state 213
    KW_WHILE     shift, and go to state 60
    ';'          shift, and go to state 62

    statement        go to state 102
    if_statement     go to state 66
    while_statement  go to state 67
    for_statement    go to state 68


State 213

   65 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 65 (for_statement)
