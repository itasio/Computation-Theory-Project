Nonterminals useless in grammar

    comp_function_blocks
    comp_function_block


Rules useless in grammar

  144 comp_function_blocks: comp_function_block ';'
  145                     | comp_function_blocks comp_function_block ';'

  146 comp_function_block: KW_AND KW_BREAK KW_AND


State 118 conflicts: 1 shift/reduce
State 170 conflicts: 1 shift/reduce
State 204 conflicts: 1 shift/reduce
State 222 conflicts: 2 shift/reduce
State 271 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block
    5        | comp_declarations const_declarations var_declarations function_blocks main_block

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    8 function_param_decl: %empty
    9                    | var_declaration
   10                    | function_param_decl ',' var_declaration

   11 function_return_type: TK_FUNC_RET KW_INTEGER
   12                     | TK_FUNC_RET KW_SCALAR
   13                     | TK_FUNC_RET KW_STR
   14                     | TK_FUNC_RET KW_BOOLEAN

   15 function_blocks: function_block ';'
   16                | function_blocks function_block ';'

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   22 function_call_no_assgn: TK_IDENT '(' func_param_call ')'
   23                       | TK_IDENT '(' ')'

   24 func_param_call: expr
   25                | func_param_call ',' expr

   26 listofexpr: expr
   27           | listofexpr expr

   28 expr: TK_CONSTINT
   29     | TK_CONSTFLOAT
   30     | TK_IDENT
   31     | TK_CONSTSTR
   32     | KW_FALSE
   33     | KW_TRUE
   34     | expr KW_OR expr
   35     | expr KW_AND expr
   36     | KW_NOT expr
   37     | expr TK_NOTEQ expr
   38     | expr TK_EQEQ expr
   39     | expr TK_LESEQ expr
   40     | expr TK_GREEQ expr
   41     | expr '<' expr
   42     | expr '>' expr
   43     | expr '+' expr
   44     | expr '-' expr
   45     | expr '*' expr
   46     | expr '/' expr
   47     | expr '%' expr
   48     | expr TK_POW expr
   49     | '-' expr
   50     | '+' expr
   51     | '(' expr ')'
   52     | TK_IDENT '[' expr ']'
   53     | expr '.' expr
   54     | function_call_no_assgn

   55 listofinstructions: var_declarations const_declarations statements
   56                   | const_declarations var_declarations statements
   57                   | statements
   58                   | var_declarations statements
   59                   | const_declarations statements

   60 statements: statement
   61           | statements statement

   62 statement: fict_token '=' listofexpr ';'
   63          | fict_token TK_PLUEQ expr ';'
   64          | fict_token TK_MINEQ expr ';'
   65          | fict_token TK_MULEQ expr ';'
   66          | fict_token TK_MODEQ expr ';'
   67          | fict_token TK_DIVEQ expr ';'
   68          | fict_token TK_COLEQ expr ';'
   69          | if_statement ';'
   70          | for_statement ';'
   71          | while_statement ';'
   72          | KW_BREAK ';'
   73          | KW_CONTINUE ';'
   74          | function_call_no_assgn ';'
   75          | listCompr_with_int_values ';'
   76          | listCompr_with_array ';'
   77          | ';'

   78 fict_token: TK_IDENT
   79           | TK_IDENT '[' TK_CONSTINT ']'
   80           | TK_IDENT '[' TK_IDENT ']'

   81 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   87 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

   95 comp_declarations: comp_declaration ';'
   96                  | comp_declarations comp_declaration ';'

   97 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

   98 listof_comp_instructions: comp_var_declarations

   99 comp_var_declarations: comp_var_declaration ';'
  100                      | comp_var_declarations comp_var_declaration ';'

  101 comp_var_declaration: '#' one_var
  102                     | comp_multi_var

  103 comp_multi_var: comp_multi_var_1
  104               | comp_multi_var_2
  105               | comp_multi_var_3

  106 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | '#' TK_IDENT '[' ']' ',' comp_multi_var_3

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

  110 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  111                 | '#' TK_IDENT ',' comp_multi_var_1

  112 const_declarations: const_declaration ';'
  113                   | const_declarations const_declaration ';'

  114 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

  123 var_declarations: var_declaration ';'
  124                 | var_declarations var_declaration ';'

  125 var_declaration: one_var
  126                | multi_var

  127 one_var: TK_IDENT ':' data_type
  128        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT '[' ']' ':' data_type

  130 multi_var: multi_var_1
  131          | multi_var_2
  132          | multi_var_3

  133 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT '[' ']' ',' multi_var_3

  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  137 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  138            | TK_IDENT ',' multi_var_1

  139 data_type: KW_INTEGER
  140          | KW_SCALAR
  141          | KW_STR
  142          | KW_BOOLEAN
  143          | TK_IDENT


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 101 106 107 108 109 110 111
    '%' (37) 47
    '(' (40) 6 7 17 18 19 20 21 22 23 51 81 82 83 84 85 86 87 88
    ')' (41) 6 7 17 18 19 20 21 22 23 51 81 82 83 84 85 86 87 88
    '*' (42) 45
    '+' (43) 43 50 115 118
    ',' (44) 10 25 106 107 108 109 110 111 133 134 135 136 137 138
    '-' (45) 44 49 116 119
    '.' (46) 53
    '/' (47) 46
    ':' (58) 6 7 17 18 19 20 21 81 82 83 84 85 86 87 88 89 90 91 92 93 94 97 106 108 110 114 115 116 117 118 119 120 121 122 127 128 129 133 135 137
    ';' (59) 6 7 15 16 18 19 20 21 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 95 96 99 100 112 113 123 124
    '<' (60) 41
    '=' (61) 62 114 115 116 117 118 119 120 121 122
    '>' (62) 42
    '[' (91) 52 79 80 89 90 91 92 93 94 106 107 108 109 128 129 133 134 135 136
    ']' (93) 52 79 80 89 90 91 92 93 94 106 107 108 109 128 129 133 134 135 136
    error (256)
    TK_IDENT <str> (258) 17 18 19 20 21 22 23 30 52 78 79 80 89 90 91 92 93 94 97 106 107 108 109 110 111 114 115 116 117 118 119 120 121 122 127 128 129 133 134 135 136 137 138 143
    TK_CONSTINT <str> (259) 28 79 93 94 108 109 117 118 119 128 135 136
    TK_CONSTFLOAT <str> (260) 29 114 115 116
    TK_CONSTSTR <str> (261) 31 120
    TK_POW (262) 48
    TK_PLUEQ (263) 63
    TK_MINEQ (264) 64
    TK_MULEQ (265) 65
    TK_DIVEQ (266) 67
    TK_MODEQ (267) 66
    TK_EQEQ (268) 38
    TK_NOTEQ (269) 37
    TK_GREEQ (270) 40
    TK_LESEQ (271) 39
    TK_COLEQ (272) 68 93 94
    TK_FUNC_RET (273) 11 12 13 14
    KW_AND (274) 35
    KW_OR (275) 34
    KW_NOT (276) 36
    KW_INTEGER (277) 11 117 118 119 139
    KW_FOR (278) 89 90 91 92 93 94
    KW_BREAK (279) 72
    KW_DEF (280) 6 7 17 18 19 20 21
    KW_ENDCOMP (281) 97
    KW_SCALAR (282) 12 114 115 116 140
    KW_CONST (283) 114 115 116 117 118 119 120 121 122
    KW_IN (284) 89 90 91 92 94
    KW_CONTINUE (285) 73
    KW_ENDDEF (286) 6 7 17 18 19 20 21
    KW_OF (287) 94
    KW_STR (288) 13 120 141
    KW_IF (289) 81 82 83 84 85 86
    KW_ENDFOR (290) 89 90 91 92
    KW_MAIN (291) 6 7
    KW_BOOLEAN (292) 14 121 122 142
    KW_ELSE (293) 83 84 85 86
    KW_WHILE (294) 87 88
    KW_RETURN (295) 18 19 20 21
    KW_ENDIF (296) 81 82 83 84 85 86
    KW_ENDWHILE (297) 87 88
    KW_COMP (298) 97
    KW_TRUE (299) 33 121
    KW_FALSE (300) 32 122
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5
        on right: 0
    main_block <str> (67)
        on left: 6 7
        on right: 1 2 3 4 5
    function_param_decl <str> (68)
        on left: 8 9 10
        on right: 10 17 18 19 20 21
    function_return_type <str> (69)
        on left: 11 12 13 14
        on right: 20 21
    function_blocks <str> (70)
        on left: 15 16
        on right: 2 3 4 5 16
    function_block <str> (71)
        on left: 17 18 19 20 21
        on right: 15 16
    function_call_no_assgn <str> (72)
        on left: 22 23
        on right: 54 74
    func_param_call <str> (73)
        on left: 24 25
        on right: 22 25
    listofexpr <str> (74)
        on left: 26 27
        on right: 27 62 81 82 83 84 85 86 87 88
    expr <str> (75)
        on left: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
        on right: 20 21 24 25 26 27 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 63 64 65 66 67 68 89 90 91 92 93 94
    listofinstructions <str> (76)
        on left: 55 56 57 58 59
        on right: 7 17 18 20
    statements <str> (77)
        on left: 60 61
        on right: 55 56 57 58 59 61 81 83 84 85 87 89 91
    statement <str> (78)
        on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77
        on right: 60 61
    fict_token <str> (79)
        on left: 78 79 80
        on right: 62 63 64 65 66 67 68
    if_statement <str> (80)
        on left: 81 82 83 84 85 86
        on right: 69
    while_statement <str> (81)
        on left: 87 88
        on right: 71
    for_statement <str> (82)
        on left: 89 90 91 92
        on right: 70
    listCompr_with_int_values <str> (83)
        on left: 93
        on right: 75
    listCompr_with_array <str> (84)
        on left: 94
        on right: 76
    comp_declarations <str> (85)
        on left: 95 96
        on right: 5 96
    comp_declaration <str> (86)
        on left: 97
        on right: 95 96
    listof_comp_instructions <str> (87)
        on left: 98
        on right: 97
    comp_var_declarations <str> (88)
        on left: 99 100
        on right: 98 100
    comp_var_declaration <str> (89)
        on left: 101 102
        on right: 99 100
    comp_multi_var <str> (90)
        on left: 103 104 105
        on right: 102
    comp_multi_var_3 <str> (91)
        on left: 106 107
        on right: 105 107
    comp_multi_var_2 <str> (92)
        on left: 108 109
        on right: 104 109
    comp_multi_var_1 <str> (93)
        on left: 110 111
        on right: 103 111
    const_declarations <str> (94)
        on left: 112 113
        on right: 4 5 55 56 59 113
    const_declaration <str> (95)
        on left: 114 115 116 117 118 119 120 121 122
        on right: 112 113
    var_declarations <str> (96)
        on left: 123 124
        on right: 3 4 5 55 56 58 124
    var_declaration <str> (97)
        on left: 125 126
        on right: 9 10 123 124
    one_var <str> (98)
        on left: 127 128 129
        on right: 101 125
    multi_var <str> (99)
        on left: 130 131 132
        on right: 126
    multi_var_3 <str> (100)
        on left: 133 134
        on right: 132 134
    multi_var_2 <str> (101)
        on left: 135 136
        on right: 131 136
    multi_var_1 <str> (102)
        on left: 137 138
        on right: 130 138
    data_type <str> (103)
        on left: 139 140 141 142 143
        on right: 93 94 106 108 110 127 128 129 133 135 137


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5        | . comp_declarations const_declarations var_declarations function_blocks main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   95 comp_declarations: . comp_declaration ';'
   96                  | . comp_declarations comp_declaration ';'
   97 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    program             go to state 5
    main_block          go to state 6
    function_blocks     go to state 7
    function_block      go to state 8
    comp_declarations   go to state 9
    comp_declaration    go to state 10
    const_declarations  go to state 11
    const_declaration   go to state 12
    var_declarations    go to state 13
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 1

  127 one_var: TK_IDENT . ':' data_type
  128        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT . '[' ']' ':' data_type
  133 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT . '[' ']' ',' multi_var_3
  135 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  138            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 20
    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 2

    6 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   17 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23
    KW_MAIN   shift, and go to state 24


State 3

  114 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 25


State 4

   97 comp_declaration: KW_COMP . TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

    TK_IDENT  shift, and go to state 26


State 5

    0 $accept: program . $end

    $end  shift, and go to state 27


State 6

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 7

    2 program: function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 28
    function_block  go to state 29


State 8

   15 function_blocks: function_block . ';'

    ';'  shift, and go to state 30


State 9

    5 program: comp_declarations . const_declarations var_declarations function_blocks main_block
   96 comp_declarations: comp_declarations . comp_declaration ';'
   97 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    comp_declaration    go to state 31
    const_declarations  go to state 32
    const_declaration   go to state 12


State 10

   95 comp_declarations: comp_declaration . ';'

    ';'  shift, and go to state 33


State 11

    4 program: const_declarations . var_declarations function_blocks main_block
  113 const_declarations: const_declarations . const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 34
    var_declarations   go to state 35
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 12

  112 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 36


State 13

    3 program: var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  124 var_declarations: var_declarations . var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 38
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 14

  123 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 40


State 15

  125 var_declaration: one_var .

    $default  reduce using rule 125 (var_declaration)


State 16

  126 var_declaration: multi_var .

    $default  reduce using rule 126 (var_declaration)


State 17

  132 multi_var: multi_var_3 .

    $default  reduce using rule 132 (multi_var)


State 18

  131 multi_var: multi_var_2 .

    $default  reduce using rule 131 (multi_var)


State 19

  130 multi_var: multi_var_1 .

    $default  reduce using rule 130 (multi_var)


State 20

  128 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT '[' . ']' ':' data_type
  133 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT '[' . ']' ',' multi_var_3
  135 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 41
    ']'          shift, and go to state 42


State 21

  127 one_var: TK_IDENT ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 48


State 22

  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  137            | TK_IDENT ',' . TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1
  138            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 49

    multi_var_1  go to state 50


State 23

   17 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 51


State 24

    6 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 52


State 25

  114 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
  118                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
  121                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
  122                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 53


State 26

   97 comp_declaration: KW_COMP TK_IDENT . ':' listof_comp_instructions KW_ENDCOMP

    ':'  shift, and go to state 54


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 29

   16 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 55


State 30

   15 function_blocks: function_block ';' .

    $default  reduce using rule 15 (function_blocks)


State 31

   96 comp_declarations: comp_declarations comp_declaration . ';'

    ';'  shift, and go to state 56


State 32

    5 program: comp_declarations const_declarations . var_declarations function_blocks main_block
  113 const_declarations: const_declarations . const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 34
    var_declarations   go to state 57
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 33

   95 comp_declarations: comp_declaration ';' .

    $default  reduce using rule 95 (comp_declarations)


State 34

  113 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 58


State 35

    4 program: const_declarations var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  124 var_declarations: var_declarations . var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 59
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 36

  112 const_declarations: const_declaration ';' .

    $default  reduce using rule 112 (const_declarations)


State 37

   17 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23


State 38

    3 program: var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 60
    function_block  go to state 29


State 39

  124 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 61


State 40

  123 var_declarations: var_declaration ';' .

    $default  reduce using rule 123 (var_declarations)


State 41

  128 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  135 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 62


State 42

  129 one_var: TK_IDENT '[' ']' . ':' data_type
  133 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 63
    ','  shift, and go to state 64


State 43

  143 data_type: TK_IDENT .

    $default  reduce using rule 143 (data_type)


State 44

  139 data_type: KW_INTEGER .

    $default  reduce using rule 139 (data_type)


State 45

  140 data_type: KW_SCALAR .

    $default  reduce using rule 140 (data_type)


State 46

  141 data_type: KW_STR .

    $default  reduce using rule 141 (data_type)


State 47

  142 data_type: KW_BOOLEAN .

    $default  reduce using rule 142 (data_type)


State 48

  127 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 127 (one_var)


State 49

  137 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  137            | TK_IDENT ',' TK_IDENT . ':' data_type
  138            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 65
    ','  shift, and go to state 22


State 50

  138 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 138 (multi_var_1)


State 51

    8 function_param_decl: . %empty  [')', ',']
    9                    | . var_declaration
   10                    | . function_param_decl ',' var_declaration
   17 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 8 (function_param_decl)

    function_param_decl  go to state 66
    var_declaration      go to state 67
    one_var              go to state 15
    multi_var            go to state 16
    multi_var_3          go to state 17
    multi_var_2          go to state 18
    multi_var_1          go to state 19


State 52

    6 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 68


State 53

  114 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
  115                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
  118                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTINT ':' KW_INTEGER
  119                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTINT ':' KW_INTEGER
  120                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
  121                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
  122                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 69
    TK_CONSTFLOAT  shift, and go to state 70
    TK_CONSTSTR    shift, and go to state 71
    KW_TRUE        shift, and go to state 72
    KW_FALSE       shift, and go to state 73
    '+'            shift, and go to state 74
    '-'            shift, and go to state 75


State 54

   97 comp_declaration: KW_COMP TK_IDENT ':' . listof_comp_instructions KW_ENDCOMP
   98 listof_comp_instructions: . comp_var_declarations
   99 comp_var_declarations: . comp_var_declaration ';'
  100                      | . comp_var_declarations comp_var_declaration ';'
  101 comp_var_declaration: . '#' one_var
  102                     | . comp_multi_var
  103 comp_multi_var: . comp_multi_var_1
  104               | . comp_multi_var_2
  105               | . comp_multi_var_3
  106 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  108 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  110 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  111                 | . '#' TK_IDENT ',' comp_multi_var_1

    '#'  shift, and go to state 76

    listof_comp_instructions  go to state 77
    comp_var_declarations     go to state 78
    comp_var_declaration      go to state 79
    comp_multi_var            go to state 80
    comp_multi_var_3          go to state 81
    comp_multi_var_2          go to state 82
    comp_multi_var_1          go to state 83


State 55

   16 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 16 (function_blocks)


State 56

   96 comp_declarations: comp_declarations comp_declaration ';' .

    $default  reduce using rule 96 (comp_declarations)


State 57

    5 program: comp_declarations const_declarations var_declarations . function_blocks main_block
   15 function_blocks: . function_block ';'
   16                | . function_blocks function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  124 var_declarations: var_declarations . var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 37

    function_blocks  go to state 84
    function_block   go to state 8
    var_declaration  go to state 39
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 58

  113 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 113 (const_declarations)


State 59

    4 program: const_declarations var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 85
    function_block  go to state 29


State 60

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 61

  124 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 124 (var_declarations)


State 62

  128 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 86
    ','  shift, and go to state 87


State 63

  129 one_var: TK_IDENT '[' ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 88


State 64

  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  133            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  134            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 89

    multi_var_3  go to state 90


State 65

  137 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 91


State 66

   10 function_param_decl: function_param_decl . ',' var_declaration
   17 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 92
    ','  shift, and go to state 93


State 67

    9 function_param_decl: var_declaration .

    $default  reduce using rule 9 (function_param_decl)


State 68

    6 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 94


State 69

  117 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 95


State 70

  114 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 96


State 71

  120 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 97


State 72

  121 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 98


State 73

  122 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 99


State 74

  115 const_declaration: KW_CONST TK_IDENT '=' '+' . TK_CONSTFLOAT ':' KW_SCALAR
  118                  | KW_CONST TK_IDENT '=' '+' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 100
    TK_CONSTFLOAT  shift, and go to state 101


State 75

  116 const_declaration: KW_CONST TK_IDENT '=' '-' . TK_CONSTFLOAT ':' KW_SCALAR
  119                  | KW_CONST TK_IDENT '=' '-' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 102
    TK_CONSTFLOAT  shift, and go to state 103


State 76

  101 comp_var_declaration: '#' . one_var
  106 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3
  108 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  110 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  111                 | '#' . TK_IDENT ',' comp_multi_var_1
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type

    TK_IDENT  shift, and go to state 104

    one_var  go to state 105


State 77

   97 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions . KW_ENDCOMP

    KW_ENDCOMP  shift, and go to state 106


State 78

   98 listof_comp_instructions: comp_var_declarations .  [KW_ENDCOMP]
  100 comp_var_declarations: comp_var_declarations . comp_var_declaration ';'
  101 comp_var_declaration: . '#' one_var
  102                     | . comp_multi_var
  103 comp_multi_var: . comp_multi_var_1
  104               | . comp_multi_var_2
  105               | . comp_multi_var_3
  106 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  108 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  110 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  111                 | . '#' TK_IDENT ',' comp_multi_var_1

    '#'  shift, and go to state 76

    $default  reduce using rule 98 (listof_comp_instructions)

    comp_var_declaration  go to state 107
    comp_multi_var        go to state 80
    comp_multi_var_3      go to state 81
    comp_multi_var_2      go to state 82
    comp_multi_var_1      go to state 83


State 79

   99 comp_var_declarations: comp_var_declaration . ';'

    ';'  shift, and go to state 108


State 80

  102 comp_var_declaration: comp_multi_var .

    $default  reduce using rule 102 (comp_var_declaration)


State 81

  105 comp_multi_var: comp_multi_var_3 .

    $default  reduce using rule 105 (comp_multi_var)


State 82

  104 comp_multi_var: comp_multi_var_2 .

    $default  reduce using rule 104 (comp_multi_var)


State 83

  103 comp_multi_var: comp_multi_var_1 .

    $default  reduce using rule 103 (comp_multi_var)


State 84

    5 program: comp_declarations const_declarations var_declarations function_blocks . main_block
    6 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    7           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_blocks: function_blocks . function_block ';'
   17 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 109
    function_block  go to state 29


State 85

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 86

  128 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 110


State 87

  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  135            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  136            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 111

    multi_var_2  go to state 112


State 88

  129 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 129 (one_var)


State 89

  133 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  133            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  134            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 113


State 90

  134 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 134 (multi_var_3)


State 91

  137 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 137 (multi_var_1)


State 92

   11 function_return_type: . TK_FUNC_RET KW_INTEGER
   12                     | . TK_FUNC_RET KW_SCALAR
   13                     | . TK_FUNC_RET KW_STR
   14                     | . TK_FUNC_RET KW_BOOLEAN
   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 114
    ':'          shift, and go to state 115

    function_return_type  go to state 116


State 93

   10 function_param_decl: function_param_decl ',' . var_declaration
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 117
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 94

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    7           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: . var_declarations const_declarations statements
   56                   | . const_declarations var_declarations statements
   57                   | . statements
   58                   | . var_declarations statements
   59                   | . const_declarations statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_ENDDEF    shift, and go to state 122
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    listofinstructions         go to state 127
    statements                 go to state 128
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declarations         go to state 136
    const_declaration          go to state 12
    var_declarations           go to state 137
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 95

  117 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 138


State 96

  114 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 139


State 97

  120 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 140


State 98

  121 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 141


State 99

  122 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 142


State 100

  118 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 143


State 101

  115 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 144


State 102

  119 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 145


State 103

  116 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 146


State 104

  106 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3
  108 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2
  110 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  111                 | '#' TK_IDENT . ',' comp_multi_var_1
  127 one_var: TK_IDENT . ':' data_type
  128        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT . '[' ']' ':' data_type

    '['  shift, and go to state 147
    ':'  shift, and go to state 21
    ','  shift, and go to state 148


State 105

  101 comp_var_declaration: '#' one_var .

    $default  reduce using rule 101 (comp_var_declaration)


State 106

   97 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP .

    $default  reduce using rule 97 (comp_declaration)


State 107

  100 comp_var_declarations: comp_var_declarations comp_var_declaration . ';'

    ';'  shift, and go to state 149


State 108

   99 comp_var_declarations: comp_var_declaration ';' .

    $default  reduce using rule 99 (comp_var_declarations)


State 109

    5 program: comp_declarations const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 5 (program)


State 110

  128 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 128 (one_var)


State 111

  135 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  135            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 150


State 112

  136 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 136 (multi_var_2)


State 113

  133 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  133            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  134            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 151


State 114

   11 function_return_type: TK_FUNC_RET . KW_INTEGER
   12                     | TK_FUNC_RET . KW_SCALAR
   13                     | TK_FUNC_RET . KW_STR
   14                     | TK_FUNC_RET . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 152
    KW_SCALAR   shift, and go to state 153
    KW_STR      shift, and go to state 154
    KW_BOOLEAN  shift, and go to state 155


State 115

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: . var_declarations const_declarations statements
   56                   | . const_declarations var_declarations statements
   57                   | . statements
   58                   | . var_declarations statements
   59                   | . const_declarations statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_RETURN    shift, and go to state 156
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    listofinstructions         go to state 157
    statements                 go to state 128
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declarations         go to state 136
    const_declaration          go to state 12
    var_declarations           go to state 137
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 116

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 158


State 117

   10 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 10 (function_param_decl)


State 118

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   78 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
   79           | TK_IDENT . '[' TK_CONSTINT ']'
   80           | TK_IDENT . '[' TK_IDENT ']'
   93 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  127 one_var: TK_IDENT . ':' data_type
  128        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT . '[' ']' ':' data_type
  133 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT . '[' ']' ',' multi_var_3
  135 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  138            | TK_IDENT . ',' multi_var_1

    TK_COLEQ  shift, and go to state 159
    '('       shift, and go to state 160
    '['       shift, and go to state 161
    ':'       shift, and go to state 21
    ','       shift, and go to state 22

    TK_COLEQ  [reduce using rule 78 (fict_token)]
    $default  reduce using rule 78 (fict_token)


State 119

   89 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 162


State 120

   72 statement: KW_BREAK . ';'

    ';'  shift, and go to state 163


State 121

   73 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 164


State 122

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 165


State 123

   81 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   82             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   83             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 166


State 124

   87 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 167


State 125

   77 statement: ';' .

    $default  reduce using rule 77 (statement)


State 126

   74 statement: function_call_no_assgn . ';'

    ';'  shift, and go to state 168


State 127

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 169


State 128

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   57 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    $default  reduce using rule 57 (listofinstructions)

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 129

   60 statements: statement .

    $default  reduce using rule 60 (statements)


State 130

   62 statement: fict_token . '=' listofexpr ';'
   63          | fict_token . TK_PLUEQ expr ';'
   64          | fict_token . TK_MINEQ expr ';'
   65          | fict_token . TK_MULEQ expr ';'
   66          | fict_token . TK_MODEQ expr ';'
   67          | fict_token . TK_DIVEQ expr ';'
   68          | fict_token . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 172
    TK_MINEQ  shift, and go to state 173
    TK_MULEQ  shift, and go to state 174
    TK_DIVEQ  shift, and go to state 175
    TK_MODEQ  shift, and go to state 176
    TK_COLEQ  shift, and go to state 177
    '='       shift, and go to state 178


State 131

   69 statement: if_statement . ';'

    ';'  shift, and go to state 179


State 132

   71 statement: while_statement . ';'

    ';'  shift, and go to state 180


State 133

   70 statement: for_statement . ';'

    ';'  shift, and go to state 181


State 134

   75 statement: listCompr_with_int_values . ';'

    ';'  shift, and go to state 182


State 135

   76 statement: listCompr_with_array . ';'

    ';'  shift, and go to state 183


State 136

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: const_declarations . var_declarations statements
   59                   | const_declarations . statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  113 const_declarations: const_declarations . const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 184
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declaration          go to state 34
    var_declarations           go to state 185
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 137

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: var_declarations . const_declarations statements
   58                   | var_declarations . statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  124 var_declarations: var_declarations . var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 186
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declarations         go to state 187
    const_declaration          go to state 12
    var_declaration            go to state 39
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 138

  117 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 117 (const_declaration)


State 139

  114 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 114 (const_declaration)


State 140

  120 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 120 (const_declaration)


State 141

  121 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 121 (const_declaration)


State 142

  122 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 122 (const_declaration)


State 143

  118 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 188


State 144

  115 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 189


State 145

  119 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 190


State 146

  116 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 191


State 147

  106 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3
  108 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2
  128 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT '[' . ']' ':' data_type

    TK_CONSTINT  shift, and go to state 192
    ']'          shift, and go to state 193


State 148

  110 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  110                 | '#' TK_IDENT ',' . '#' TK_IDENT ':' data_type
  111                 | . '#' TK_IDENT ',' comp_multi_var_1
  111                 | '#' TK_IDENT ',' . comp_multi_var_1

    '#'  shift, and go to state 194

    comp_multi_var_1  go to state 195


State 149

  100 comp_var_declarations: comp_var_declarations comp_var_declaration ';' .

    $default  reduce using rule 100 (comp_var_declarations)


State 150

  135 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  135            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 196


State 151

  133 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  133            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  134            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 197
    ','  shift, and go to state 64


State 152

   11 function_return_type: TK_FUNC_RET KW_INTEGER .

    $default  reduce using rule 11 (function_return_type)


State 153

   12 function_return_type: TK_FUNC_RET KW_SCALAR .

    $default  reduce using rule 12 (function_return_type)


State 154

   13 function_return_type: TK_FUNC_RET KW_STR .

    $default  reduce using rule 13 (function_return_type)


State 155

   14 function_return_type: TK_FUNC_RET KW_BOOLEAN .

    $default  reduce using rule 14 (function_return_type)


State 156

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 198


State 157

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 199
    KW_RETURN  shift, and go to state 200


State 158

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: . var_declarations const_declarations statements
   56                   | . const_declarations var_declarations statements
   57                   | . statements
   58                   | . var_declarations statements
   59                   | . const_declarations statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  112 const_declarations: . const_declaration ';'
  113                   | . const_declarations const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  123 var_declarations: . var_declaration ';'
  124                 | . var_declarations var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_RETURN    shift, and go to state 201
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    listofinstructions         go to state 202
    statements                 go to state 128
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declarations         go to state 136
    const_declaration          go to state 12
    var_declarations           go to state 137
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 159

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    '['  shift, and go to state 203


State 160

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | TK_IDENT '(' . func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   23                       | TK_IDENT '(' . ')'
   24 func_param_call: . expr
   25                | . func_param_call ',' expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213
    ')'            shift, and go to state 214

    function_call_no_assgn  go to state 215
    func_param_call         go to state 216
    expr                    go to state 217


State 161

   79 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   80           | TK_IDENT '[' . TK_IDENT ']'
  128 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  129        | TK_IDENT '[' . ']' ':' data_type
  133 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | TK_IDENT '[' . ']' ',' multi_var_3
  135 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_IDENT     shift, and go to state 218
    TK_CONSTINT  shift, and go to state 219
    ']'          shift, and go to state 42


State 162

   89 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 220


State 163

   72 statement: KW_BREAK ';' .

    $default  reduce using rule 72 (statement)


State 164

   73 statement: KW_CONTINUE ';' .

    $default  reduce using rule 73 (statement)


State 165

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 166

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   81 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   82             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   83             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    listofexpr              go to state 221
    expr                    go to state 222


State 167

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   87 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   88                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    listofexpr              go to state 223
    expr                    go to state 222


State 168

   74 statement: function_call_no_assgn ';' .

    $default  reduce using rule 74 (statement)


State 169

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 224


State 170

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   78 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
   79           | TK_IDENT . '[' TK_CONSTINT ']'
   80           | TK_IDENT . '[' TK_IDENT ']'
   93 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_COLEQ  shift, and go to state 159
    '('       shift, and go to state 160
    '['       shift, and go to state 225

    TK_COLEQ  [reduce using rule 78 (fict_token)]
    $default  reduce using rule 78 (fict_token)


State 171

   61 statements: statements statement .

    $default  reduce using rule 61 (statements)


State 172

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   63 statement: fict_token TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 226


State 173

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   64 statement: fict_token TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 227


State 174

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   65 statement: fict_token TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 228


State 175

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   67 statement: fict_token TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 229


State 176

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   66 statement: fict_token TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 230


State 177

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   68 statement: fict_token TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 231


State 178

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   26 listofexpr: . expr
   27           | . listofexpr expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   62 statement: fict_token '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    listofexpr              go to state 232
    expr                    go to state 222


State 179

   69 statement: if_statement ';' .

    $default  reduce using rule 69 (statement)


State 180

   71 statement: while_statement ';' .

    $default  reduce using rule 71 (statement)


State 181

   70 statement: for_statement ';' .

    $default  reduce using rule 70 (statement)


State 182

   75 statement: listCompr_with_int_values ';' .

    $default  reduce using rule 75 (statement)


State 183

   76 statement: listCompr_with_array ';' .

    $default  reduce using rule 76 (statement)


State 184

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   59 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    $default  reduce using rule 59 (listofinstructions)

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 185

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: const_declarations var_declarations . statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  124 var_declarations: var_declarations . var_declaration ';'
  125 var_declaration: . one_var
  126                | . multi_var
  127 one_var: . TK_IDENT ':' data_type
  128        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  129        | . TK_IDENT '[' ']' ':' data_type
  130 multi_var: . multi_var_1
  131          | . multi_var_2
  132          | . multi_var_3
  133 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  134            | . TK_IDENT '[' ']' ',' multi_var_3
  135 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  137 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  138            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 118
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 233
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    var_declaration            go to state 39
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 186

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   58 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    $default  reduce using rule 58 (listofinstructions)

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 187

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: var_declarations const_declarations . statements
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  113 const_declarations: const_declarations . const_declaration ';'
  114 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  115                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  116                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  117                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  118                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  119                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  120                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  121                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  122                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 234
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135
    const_declaration          go to state 34


State 188

  118 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 118 (const_declaration)


State 189

  115 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 115 (const_declaration)


State 190

  119 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 119 (const_declaration)


State 191

  116 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 116 (const_declaration)


State 192

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2
  128 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 235


State 193

  106 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  107                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3
  129 one_var: TK_IDENT '[' ']' . ':' data_type

    ':'  shift, and go to state 63
    ','  shift, and go to state 236


State 194

  110 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  110                 | '#' TK_IDENT ',' '#' . TK_IDENT ':' data_type
  111                 | '#' . TK_IDENT ',' comp_multi_var_1

    TK_IDENT  shift, and go to state 237


State 195

  111 comp_multi_var_1: '#' TK_IDENT ',' comp_multi_var_1 .

    $default  reduce using rule 111 (comp_multi_var_1)


State 196

  135 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  135            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 238


State 197

  133 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 239


State 198

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 240


State 199

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 17 (function_block)


State 200

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 241


State 201

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 242


State 202

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 243


State 203

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 244


State 204

   22 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   23                       | TK_IDENT . '(' ')'
   30 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']
   52     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 160
    '['  shift, and go to state 245

    '('       [reduce using rule 30 (expr)]
    $default  reduce using rule 30 (expr)


State 205

   28 expr: TK_CONSTINT .

    $default  reduce using rule 28 (expr)


State 206

   29 expr: TK_CONSTFLOAT .

    $default  reduce using rule 29 (expr)


State 207

   31 expr: TK_CONSTSTR .

    $default  reduce using rule 31 (expr)


State 208

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   36     | KW_NOT . expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 246


State 209

   33 expr: KW_TRUE .

    $default  reduce using rule 33 (expr)


State 210

   32 expr: KW_FALSE .

    $default  reduce using rule 32 (expr)


State 211

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   50     | '+' . expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 247


State 212

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   49     | '-' . expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 248


State 213

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   51     | '(' . expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 249


State 214

   23 function_call_no_assgn: TK_IDENT '(' ')' .

    $default  reduce using rule 23 (function_call_no_assgn)


State 215

   54 expr: function_call_no_assgn .

    $default  reduce using rule 54 (expr)


State 216

   22 function_call_no_assgn: TK_IDENT '(' func_param_call . ')'
   25 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 250
    ','  shift, and go to state 251


State 217

   24 func_param_call: expr .  [')', ',']
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 24 (func_param_call)


State 218

   80 fict_token: TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 267


State 219

   79 fict_token: TK_IDENT '[' TK_CONSTINT . ']'
  128 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  135 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 268


State 220

   89 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 269


State 221

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   81 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   82             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   83             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213
    ')'            shift, and go to state 270

    function_call_no_assgn  go to state 215
    expr                    go to state 271


State 222

   26 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';']
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    '+'       [reduce using rule 26 (listofexpr)]
    '-'       [reduce using rule 26 (listofexpr)]
    $default  reduce using rule 26 (listofexpr)


State 223

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   87 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   88                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213
    ')'            shift, and go to state 272

    function_call_no_assgn  go to state 215
    expr                    go to state 271


State 224

    7 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 7 (main_block)


State 225

   79 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   80           | TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 218
    TK_CONSTINT  shift, and go to state 273


State 226

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   63 statement: fict_token TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 274


State 227

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   64 statement: fict_token TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 275


State 228

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   65 statement: fict_token TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 276


State 229

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   67 statement: fict_token TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 277


State 230

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   66 statement: fict_token TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 278


State 231

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   68 statement: fict_token TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 279


State 232

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   27 listofexpr: listofexpr . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   62 statement: fict_token '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213
    ';'            shift, and go to state 280

    function_call_no_assgn  go to state 215
    expr                    go to state 271


State 233

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   56 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    $default  reduce using rule 56 (listofinstructions)

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 234

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   55 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    $default  reduce using rule 55 (listofinstructions)

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 235

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2
  128 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 86
    ','  shift, and go to state 281


State 236

  106 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  106                 | '#' TK_IDENT '[' ']' ',' . '#' TK_IDENT '[' ']' ':' data_type
  107                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  107                 | '#' TK_IDENT '[' ']' ',' . comp_multi_var_3

    '#'  shift, and go to state 282

    comp_multi_var_3  go to state 283


State 237

  110 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  110                 | '#' TK_IDENT ',' '#' TK_IDENT . ':' data_type
  111                 | '#' TK_IDENT . ',' comp_multi_var_1

    ':'  shift, and go to state 284
    ','  shift, and go to state 148


State 238

  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  135            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 285
    ','  shift, and go to state 87


State 239

  133 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 133 (multi_var_3)


State 240

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 19 (function_block)


State 241

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 286


State 242

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 287


State 243

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 288


State 244

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    KW_FOR    shift, and go to state 289
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266


State 245

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   52     | TK_IDENT '[' . expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 290


State 246

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   36     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 36 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 36 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 36 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 36 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 36 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 36 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 36 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 36 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 36 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 36 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 36 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 36 and token '.' resolved as shift (KW_NOT < '.').


State 247

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   50     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 50 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 50 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 50 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 50 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 50 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 50 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 50 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 50 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 50 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 50 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 50 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 50 and token '.' resolved as shift (UPLUS < '.').


State 248

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   49     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 49 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 49 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 49 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 49 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 49 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 49 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 49 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 49 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 49 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 49 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 49 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 49 and token '.' resolved as shift (UMINUS < '.').


State 249

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   51     | '(' expr . ')'
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ')'       shift, and go to state 291


State 250

   22 function_call_no_assgn: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 22 (function_call_no_assgn)


State 251

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   25 func_param_call: func_param_call ',' . expr
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 292


State 252

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   48     | expr TK_POW . expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 293


State 253

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   38     | expr TK_EQEQ . expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 294


State 254

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   37     | expr TK_NOTEQ . expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 295


State 255

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   40     | expr TK_GREEQ . expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 296


State 256

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   39     | expr TK_LESEQ . expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 297


State 257

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   35     | expr KW_AND . expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 298


State 258

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   34     | expr KW_OR . expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 299


State 259

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   41     | expr '<' . expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 300


State 260

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   42     | expr '>' . expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 301


State 261

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   43     | expr '+' . expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 302


State 262

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   44     | expr '-' . expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 303


State 263

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   45     | expr '*' . expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 304


State 264

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   46     | expr '/' . expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 305


State 265

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   47     | expr '%' . expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 306


State 266

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   53     | expr '.' . expr
   54     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 307


State 267

   80 fict_token: TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 80 (fict_token)


State 268

   79 fict_token: TK_IDENT '[' TK_CONSTINT ']' .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=']
  128 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  136            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 86
    ','  shift, and go to state 87

    $default  reduce using rule 79 (fict_token)


State 269

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 308


State 270

   81 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   82             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   83             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 309


State 271

   27 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';']
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    '+'       [reduce using rule 27 (listofexpr)]
    '-'       [reduce using rule 27 (listofexpr)]
    $default  reduce using rule 27 (listofexpr)


State 272

   87 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   88                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 310


State 273

   79 fict_token: TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 311


State 274

   63 statement: fict_token TK_PLUEQ expr ';' .

    $default  reduce using rule 63 (statement)


State 275

   64 statement: fict_token TK_MINEQ expr ';' .

    $default  reduce using rule 64 (statement)


State 276

   65 statement: fict_token TK_MULEQ expr ';' .

    $default  reduce using rule 65 (statement)


State 277

   67 statement: fict_token TK_DIVEQ expr ';' .

    $default  reduce using rule 67 (statement)


State 278

   66 statement: fict_token TK_MODEQ expr ';' .

    $default  reduce using rule 66 (statement)


State 279

   68 statement: fict_token TK_COLEQ expr ';' .

    $default  reduce using rule 68 (statement)


State 280

   62 statement: fict_token '=' listofexpr ';' .

    $default  reduce using rule 62 (statement)


State 281

  108 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  109                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . comp_multi_var_2

    '#'  shift, and go to state 312

    comp_multi_var_2  go to state 313


State 282

  106 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  106                 | '#' TK_IDENT '[' ']' ',' '#' . TK_IDENT '[' ']' ':' data_type
  107                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3

    TK_IDENT  shift, and go to state 314


State 283

  107 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' comp_multi_var_3 .

    $default  reduce using rule 107 (comp_multi_var_3)


State 284

  110 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 315


State 285

  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 316


State 286

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 18 (function_block)


State 287

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 317


State 288

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ';'       shift, and go to state 318


State 289

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 319


State 290

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   52     | TK_IDENT '[' expr . ']'
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ']'       shift, and go to state 320


State 291

   51 expr: '(' expr ')' .

    $default  reduce using rule 51 (expr)


State 292

   25 func_param_call: func_param_call ',' expr .  [')', ',']
   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 25 (func_param_call)


State 293

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   48     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 48 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 48 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 48 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 48 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 48 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 48 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 48 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 48 and token '.' resolved as shift (TK_POW < '.').


State 294

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   38     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 38 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 38 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 38 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 38 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 38 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 38 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 38 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 38 and token '.' resolved as shift (TK_EQEQ < '.').


State 295

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   37     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 37 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 37 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 37 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 37 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 37 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 37 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 37 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 37 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 37 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 37 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 37 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 37 and token '.' resolved as shift (TK_NOTEQ < '.').


State 296

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   40     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '+'     shift, and go to state 261
    '-'     shift, and go to state 262
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 40 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 40 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 40 and token '<' resolved as reduce (%left '<').
    Conflict between rule 40 and token '>' resolved as reduce (%left '>').
    Conflict between rule 40 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 40 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 40 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 40 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 40 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 40 and token '.' resolved as shift (TK_GREEQ < '.').


State 297

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   39     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '+'     shift, and go to state 261
    '-'     shift, and go to state 262
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 39 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 39 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 39 and token '<' resolved as reduce (%left '<').
    Conflict between rule 39 and token '>' resolved as reduce (%left '>').
    Conflict between rule 39 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 39 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 39 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 39 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 39 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 39 and token '.' resolved as shift (TK_LESEQ < '.').


State 298

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   35     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 35 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 35 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 35 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 35 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 35 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 35 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 35 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 35 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 35 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 35 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 35 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 35 and token '.' resolved as shift (KW_AND < '.').


State 299

   34 expr: expr . KW_OR expr
   34     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 34 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 34 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 34 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 34 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 34 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 34 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 34 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 34 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 34 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 34 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 34 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 34 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 34 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 34 and token '.' resolved as shift (KW_OR < '.').


State 300

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   41     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '+'     shift, and go to state 261
    '-'     shift, and go to state 262
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 41 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 41 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 41 and token '<' resolved as reduce (%left '<').
    Conflict between rule 41 and token '>' resolved as reduce (%left '>').
    Conflict between rule 41 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 41 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 41 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 41 and token '.' resolved as shift ('<' < '.').


State 301

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   42     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '+'     shift, and go to state 261
    '-'     shift, and go to state 262
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 42 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 42 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 42 and token '<' resolved as reduce (%left '<').
    Conflict between rule 42 and token '>' resolved as reduce (%left '>').
    Conflict between rule 42 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 42 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 42 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 42 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 42 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 42 and token '.' resolved as shift ('>' < '.').


State 302

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   43     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 43 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 43 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 43 and token '+' resolved as reduce (%left '+').
    Conflict between rule 43 and token '-' resolved as reduce (%left '-').
    Conflict between rule 43 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 43 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 43 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 43 and token '.' resolved as shift ('+' < '.').


State 303

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   44     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '*'     shift, and go to state 263
    '/'     shift, and go to state 264
    '%'     shift, and go to state 265
    '.'     shift, and go to state 266

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 44 and token '+' resolved as reduce (%left '+').
    Conflict between rule 44 and token '-' resolved as reduce (%left '-').
    Conflict between rule 44 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 44 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 44 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 44 and token '.' resolved as shift ('-' < '.').


State 304

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   45     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 45 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 45 and token '*' resolved as reduce (%left '*').
    Conflict between rule 45 and token '/' resolved as reduce (%left '/').
    Conflict between rule 45 and token '%' resolved as reduce (%left '%').
    Conflict between rule 45 and token '.' resolved as shift ('*' < '.').


State 305

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   46     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 46 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 46 and token '*' resolved as reduce (%left '*').
    Conflict between rule 46 and token '/' resolved as reduce (%left '/').
    Conflict between rule 46 and token '%' resolved as reduce (%left '%').
    Conflict between rule 46 and token '.' resolved as shift ('/' < '.').


State 306

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   47     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   48     | expr . TK_POW expr
   53     | expr . '.' expr

    TK_POW  shift, and go to state 252
    '.'     shift, and go to state 266

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 47 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 47 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 47 and token '*' resolved as reduce (%left '*').
    Conflict between rule 47 and token '/' resolved as reduce (%left '/').
    Conflict between rule 47 and token '%' resolved as reduce (%left '%').
    Conflict between rule 47 and token '.' resolved as shift ('%' < '.').


State 307

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   53     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 53 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 53 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 53 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 53 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 53 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 53 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 53 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 53 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 53 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 53 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 53 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 53 and token '.' resolved as reduce (%left '.').


State 308

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ':'       shift, and go to state 321


State 309

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   81             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   82             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   83             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ELSE      shift, and go to state 322
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 323
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 324
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 310

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   87                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   88                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDWHILE  shift, and go to state 325
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 326
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 311

   79 fict_token: TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 79 (fict_token)


State 312

  108 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

    TK_IDENT  shift, and go to state 327


State 313

  109 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2 .

    $default  reduce using rule 109 (comp_multi_var_2)


State 314

  106 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  106                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT . '[' ']' ':' data_type
  107                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3

    '['  shift, and go to state 328


State 315

  110 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type .

    $default  reduce using rule 110 (comp_multi_var_1)


State 316

  135 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 135 (multi_var_2)


State 317

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 21 (function_block)


State 318

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 329


State 319

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    ':'  shift, and go to state 330


State 320

   52 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 52 (expr)


State 321

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 331


State 322

   84 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 332


State 323

   82 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 82 (if_statement)


State 324

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   81             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   83             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ELSE      shift, and go to state 333
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 334
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 325

   88 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 88 (while_statement)


State 326

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   87                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDWHILE  shift, and go to state 335
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 327

  108 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2

    '['  shift, and go to state 336


State 328

  106 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  106                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' . ']' ':' data_type
  107                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3

    ']'  shift, and go to state 337


State 329

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 330

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT     shift, and go to state 43
    TK_CONSTINT  shift, and go to state 338
    KW_INTEGER   shift, and go to state 44
    KW_SCALAR    shift, and go to state 45
    KW_STR       shift, and go to state 46
    KW_BOOLEAN   shift, and go to state 47

    data_type  go to state 339


State 331

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ']'       shift, and go to state 340
    ':'       shift, and go to state 341


State 332

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   86             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 342
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 343
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 333

   83 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 344


State 334

   81 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 81 (if_statement)


State 335

   87 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 87 (while_statement)


State 336

  108 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  109                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2

    TK_CONSTINT  shift, and go to state 345


State 337

  106 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  106                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' . ':' data_type
  107                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3

    ':'  shift, and go to state 346
    ','  shift, and go to state 236


State 338

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 347


State 339

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type . KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    KW_IN  shift, and go to state 348


State 340

   91 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 349


State 341

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   28 expr: . TK_CONSTINT
   29     | . TK_CONSTFLOAT
   30     | . TK_IDENT
   31     | . TK_CONSTSTR
   32     | . KW_FALSE
   33     | . KW_TRUE
   34     | . expr KW_OR expr
   35     | . expr KW_AND expr
   36     | . KW_NOT expr
   37     | . expr TK_NOTEQ expr
   38     | . expr TK_EQEQ expr
   39     | . expr TK_LESEQ expr
   40     | . expr TK_GREEQ expr
   41     | . expr '<' expr
   42     | . expr '>' expr
   43     | . expr '+' expr
   44     | . expr '-' expr
   45     | . expr '*' expr
   46     | . expr '/' expr
   47     | . expr '%' expr
   48     | . expr TK_POW expr
   49     | . '-' expr
   50     | . '+' expr
   51     | . '(' expr ')'
   52     | . TK_IDENT '[' expr ']'
   53     | . expr '.' expr
   54     | . function_call_no_assgn
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 204
    TK_CONSTINT    shift, and go to state 205
    TK_CONSTFLOAT  shift, and go to state 206
    TK_CONSTSTR    shift, and go to state 207
    KW_NOT         shift, and go to state 208
    KW_TRUE        shift, and go to state 209
    KW_FALSE       shift, and go to state 210
    '+'            shift, and go to state 211
    '-'            shift, and go to state 212
    '('            shift, and go to state 213

    function_call_no_assgn  go to state 215
    expr                    go to state 350


State 342

   86 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 86 (if_statement)


State 343

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   84             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 351
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 344

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   83             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   85             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 352
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 353
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 345

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  109                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2

    ']'  shift, and go to state 354


State 346

  106 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 355


State 347

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 356


State 348

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN . TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 357


State 349

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   92              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ENDFOR    shift, and go to state 358
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 359
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 350

   34 expr: expr . KW_OR expr
   35     | expr . KW_AND expr
   37     | expr . TK_NOTEQ expr
   38     | expr . TK_EQEQ expr
   39     | expr . TK_LESEQ expr
   40     | expr . TK_GREEQ expr
   41     | expr . '<' expr
   42     | expr . '>' expr
   43     | expr . '+' expr
   44     | expr . '-' expr
   45     | expr . '*' expr
   46     | expr . '/' expr
   47     | expr . '%' expr
   48     | expr . TK_POW expr
   53     | expr . '.' expr
   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 252
    TK_EQEQ   shift, and go to state 253
    TK_NOTEQ  shift, and go to state 254
    TK_GREEQ  shift, and go to state 255
    TK_LESEQ  shift, and go to state 256
    KW_AND    shift, and go to state 257
    KW_OR     shift, and go to state 258
    '<'       shift, and go to state 259
    '>'       shift, and go to state 260
    '+'       shift, and go to state 261
    '-'       shift, and go to state 262
    '*'       shift, and go to state 263
    '/'       shift, and go to state 264
    '%'       shift, and go to state 265
    '.'       shift, and go to state 266
    ']'       shift, and go to state 360


State 351

   84 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 84 (if_statement)


State 352

   85 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 85 (if_statement)


State 353

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   83             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_WHILE     shift, and go to state 124
    KW_ENDIF     shift, and go to state 361
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 354

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  108                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  109                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2

    ':'  shift, and go to state 362
    ','  shift, and go to state 281


State 355

  106 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 106 (comp_multi_var_3)


State 356

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 363


State 357

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT . KW_OF TK_CONSTINT ']' ':' data_type

    KW_OF  shift, and go to state 364


State 358

   92 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 92 (for_statement)


State 359

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   91              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ENDFOR    shift, and go to state 365
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 360

   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 366


State 361

   83 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 83 (if_statement)


State 362

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 367


State 363

   93 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 93 (listCompr_with_int_values)


State 364

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF . TK_CONSTINT ']' ':' data_type

    TK_CONSTINT  shift, and go to state 368


State 365

   91 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 91 (for_statement)


State 366

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   60 statements: . statement
   61           | . statements statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   89              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   90              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ENDFOR    shift, and go to state 369
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statements                 go to state 370
    statement                  go to state 129
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 367

  108 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 108 (comp_multi_var_2)


State 368

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 371


State 369

   90 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 90 (for_statement)


State 370

   22 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   23                       | . TK_IDENT '(' ')'
   61 statements: statements . statement
   62 statement: . fict_token '=' listofexpr ';'
   63          | . fict_token TK_PLUEQ expr ';'
   64          | . fict_token TK_MINEQ expr ';'
   65          | . fict_token TK_MULEQ expr ';'
   66          | . fict_token TK_MODEQ expr ';'
   67          | . fict_token TK_DIVEQ expr ';'
   68          | . fict_token TK_COLEQ expr ';'
   69          | . if_statement ';'
   70          | . for_statement ';'
   71          | . while_statement ';'
   72          | . KW_BREAK ';'
   73          | . KW_CONTINUE ';'
   74          | . function_call_no_assgn ';'
   75          | . listCompr_with_int_values ';'
   76          | . listCompr_with_array ';'
   77          | . ';'
   78 fict_token: . TK_IDENT
   79           | . TK_IDENT '[' TK_CONSTINT ']'
   80           | . TK_IDENT '[' TK_IDENT ']'
   81 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   82             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   83             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   84             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   85             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   86             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   87 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   88                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   89 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   89              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   90              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   91              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   92              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   93 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
   94 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 170
    KW_FOR       shift, and go to state 119
    KW_BREAK     shift, and go to state 120
    KW_CONTINUE  shift, and go to state 121
    KW_IF        shift, and go to state 123
    KW_ENDFOR    shift, and go to state 372
    KW_WHILE     shift, and go to state 124
    ';'          shift, and go to state 125

    function_call_no_assgn     go to state 126
    statement                  go to state 171
    fict_token                 go to state 130
    if_statement               go to state 131
    while_statement            go to state 132
    for_statement              go to state 133
    listCompr_with_int_values  go to state 134
    listCompr_with_array       go to state 135


State 371

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 373


State 372

   89 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 89 (for_statement)


State 373

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' . data_type
  139 data_type: . KW_INTEGER
  140          | . KW_SCALAR
  141          | . KW_STR
  142          | . KW_BOOLEAN
  143          | . TK_IDENT

    TK_IDENT    shift, and go to state 43
    KW_INTEGER  shift, and go to state 44
    KW_SCALAR   shift, and go to state 45
    KW_STR      shift, and go to state 46
    KW_BOOLEAN  shift, and go to state 47

    data_type  go to state 374


State 374

   94 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 94 (listCompr_with_array)
