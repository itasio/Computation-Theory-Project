State 129 conflicts: 1 shift/reduce
State 180 conflicts: 1 shift/reduce
State 215 conflicts: 1 shift/reduce
State 235 conflicts: 2 shift/reduce
State 289 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations main_block
    4        | const_declarations main_block
    5        | comp_declarations main_block
    6        | const_declarations function_blocks main_block
    7        | comp_declarations function_blocks main_block
    8        | var_declarations function_blocks main_block
    9        | const_declarations var_declarations function_blocks main_block
   10        | comp_declarations var_declarations function_blocks main_block
   11        | comp_declarations const_declarations var_declarations function_blocks main_block

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

   14 function_param_decl: %empty
   15                    | var_declaration
   16                    | function_param_decl ',' var_declaration

   17 function_return_type: TK_FUNC_RET data_type

   18 function_blocks: function_block ';'
   19                | function_blocks function_block ';'

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   25 function_call_no_assgn: TK_IDENT '(' func_param_call ')'
   26                       | TK_IDENT '(' ')'

   27 func_param_call: expr
   28                | func_param_call ',' expr

   29 listofexpr: expr
   30           | listofexpr expr

   31 expr: TK_CONSTINT
   32     | TK_CONSTFLOAT
   33     | TK_IDENT
   34     | '#' TK_IDENT
   35     | TK_CONSTSTR
   36     | KW_FALSE
   37     | KW_TRUE
   38     | expr KW_OR expr
   39     | expr KW_AND expr
   40     | KW_NOT expr
   41     | expr TK_NOTEQ expr
   42     | expr TK_EQEQ expr
   43     | expr TK_LESEQ expr
   44     | expr TK_GREEQ expr
   45     | expr '<' expr
   46     | expr '>' expr
   47     | expr '+' expr
   48     | expr '-' expr
   49     | expr '*' expr
   50     | expr '/' expr
   51     | expr '%' expr
   52     | expr TK_POW expr
   53     | '-' expr
   54     | '+' expr
   55     | '(' expr ')'
   56     | TK_IDENT '[' expr ']'
   57     | '#' TK_IDENT '[' expr ']'
   58     | expr '.' expr
   59     | function_call_no_assgn

   60 listofinstructions: var_declarations const_declarations statements
   61                   | const_declarations var_declarations statements
   62                   | statements
   63                   | var_declarations statements
   64                   | const_declarations statements

   65 statements: statement
   66           | statements statement

   67 statement: fict_token '=' listofexpr ';'
   68          | fict_token TK_PLUEQ expr ';'
   69          | fict_token TK_MINEQ expr ';'
   70          | fict_token TK_MULEQ expr ';'
   71          | fict_token TK_MODEQ expr ';'
   72          | fict_token TK_DIVEQ expr ';'
   73          | fict_token TK_COLEQ expr ';'
   74          | fict_token '.' function_call_no_assgn ';'
   75          | fict_token '.' expr '=' listofexpr ';'
   76          | function_call_no_assgn ';'
   77          | if_statement ';'
   78          | for_statement ';'
   79          | while_statement ';'
   80          | KW_BREAK ';'
   81          | KW_CONTINUE ';'
   82          | listCompr_with_int_values ';'
   83          | listCompr_with_array ';'
   84          | ';'

   85 fict_token: TK_IDENT
   86           | '#' TK_IDENT
   87           | TK_IDENT '[' TK_CONSTINT ']'
   88           | '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | TK_IDENT '[' TK_IDENT ']'
   90           | '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | '#' TK_IDENT '[' TK_IDENT ']'
   92           | TK_IDENT '[' '#' TK_IDENT ']'

   93 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   99 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

  107 comp_declarations: comp_declaration ';'
  108                  | comp_declarations comp_declaration ';'

  109 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

  110 listof_comp_instructions: comp_var_declarations function_blocks

  111 comp_var_declarations: comp_var_declaration ';'
  112                      | comp_var_declarations comp_var_declaration ';'

  113 comp_var_declaration: '#' one_var
  114                     | comp_multi_var

  115 comp_multi_var: comp_multi_var_1
  116               | comp_multi_var_2
  117               | comp_multi_var_3

  118 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | '#' TK_IDENT '[' ']' ',' comp_multi_var_3

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

  122 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  123                 | '#' TK_IDENT ',' comp_multi_var_1

  124 const_declarations: const_declaration ';'
  125                   | const_declarations const_declaration ';'

  126 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

  135 var_declarations: var_declaration ';'
  136                 | var_declarations var_declaration ';'

  137 var_declaration: one_var
  138                | multi_var

  139 one_var: TK_IDENT ':' data_type
  140        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT '[' ']' ':' data_type

  142 multi_var: multi_var_1
  143          | multi_var_2
  144          | multi_var_3

  145 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT '[' ']' ',' multi_var_3

  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  149 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  150            | TK_IDENT ',' multi_var_1

  151 data_type: KW_INTEGER
  152          | KW_SCALAR
  153          | KW_STR
  154          | KW_BOOLEAN
  155          | TK_IDENT


Terminals, with rules where they appear

    $end (0) 0
    '#' (35) 34 57 86 88 90 91 92 113 118 119 120 121 122 123
    '%' (37) 51
    '(' (40) 12 13 20 21 22 23 24 25 26 55 93 94 95 96 97 98 99 100
    ')' (41) 12 13 20 21 22 23 24 25 26 55 93 94 95 96 97 98 99 100
    '*' (42) 49
    '+' (43) 47 54 127 130
    ',' (44) 16 28 118 119 120 121 122 123 145 146 147 148 149 150
    '-' (45) 48 53 128 131
    '.' (46) 58 74 75
    '/' (47) 50
    ':' (58) 12 13 20 21 22 23 24 93 94 95 96 97 98 99 100 101 102 103 104 105 106 109 118 120 122 126 127 128 129 130 131 132 133 134 139 140 141 145 147 149
    ';' (59) 12 13 18 19 21 22 23 24 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 107 108 111 112 124 125 135 136
    '<' (60) 45
    '=' (61) 67 75 126 127 128 129 130 131 132 133 134
    '>' (62) 46
    '[' (91) 56 57 87 88 89 90 91 92 101 102 103 104 105 106 118 119 120 121 140 141 145 146 147 148
    ']' (93) 56 57 87 88 89 90 91 92 101 102 103 104 105 106 118 119 120 121 140 141 145 146 147 148
    error (256)
    TK_IDENT <str> (258) 20 21 22 23 24 25 26 33 34 56 57 85 86 87 88 89 90 91 92 101 102 103 104 105 106 109 118 119 120 121 122 123 126 127 128 129 130 131 132 133 134 139 140 141 145 146 147 148 149 150 155
    TK_CONSTINT <str> (259) 31 87 88 105 106 120 121 129 130 131 140 147 148
    TK_CONSTFLOAT <str> (260) 32 126 127 128
    TK_CONSTSTR <str> (261) 35 132
    TK_POW (262) 52
    TK_PLUEQ (263) 68
    TK_MINEQ (264) 69
    TK_MULEQ (265) 70
    TK_DIVEQ (266) 72
    TK_MODEQ (267) 71
    TK_EQEQ (268) 42
    TK_NOTEQ (269) 41
    TK_GREEQ (270) 44
    TK_LESEQ (271) 43
    TK_COLEQ (272) 73 105 106
    TK_FUNC_RET (273) 17
    KW_AND (274) 39
    KW_OR (275) 38
    KW_NOT (276) 40
    KW_INTEGER (277) 129 130 131 151
    KW_FOR (278) 101 102 103 104 105 106
    KW_BREAK (279) 80
    KW_DEF (280) 12 13 20 21 22 23 24
    KW_ENDCOMP (281) 109
    KW_SCALAR (282) 126 127 128 152
    KW_CONST (283) 126 127 128 129 130 131 132 133 134
    KW_IN (284) 101 102 103 104 106
    KW_CONTINUE (285) 81
    KW_ENDDEF (286) 12 13 20 21 22 23 24
    KW_OF (287) 106
    KW_STR (288) 132 153
    KW_IF (289) 93 94 95 96 97 98
    KW_ENDFOR (290) 101 102 103 104
    KW_MAIN (291) 12 13
    KW_BOOLEAN (292) 133 134 154
    KW_ELSE (293) 95 96 97 98
    KW_WHILE (294) 99 100
    KW_RETURN (295) 21 22 23 24
    KW_ENDIF (296) 93 94 95 96 97 98
    KW_ENDWHILE (297) 99 100
    KW_COMP (298) 109
    KW_TRUE (299) 37 133
    KW_FALSE (300) 36 134
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    program (66)
        on left: 1 2 3 4 5 6 7 8 9 10 11
        on right: 0
    main_block <str> (67)
        on left: 12 13
        on right: 1 2 3 4 5 6 7 8 9 10 11
    function_param_decl <str> (68)
        on left: 14 15 16
        on right: 16 20 21 22 23 24
    function_return_type <str> (69)
        on left: 17
        on right: 23 24
    function_blocks <str> (70)
        on left: 18 19
        on right: 2 6 7 8 9 10 11 19 110
    function_block <str> (71)
        on left: 20 21 22 23 24
        on right: 18 19
    function_call_no_assgn <str> (72)
        on left: 25 26
        on right: 59 74 76
    func_param_call <str> (73)
        on left: 27 28
        on right: 25 28
    listofexpr <str> (74)
        on left: 29 30
        on right: 30 67 75 93 94 95 96 97 98 99 100
    expr <str> (75)
        on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 23 24 27 28 29 30 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 68 69 70 71 72 73 75 101 102 103 104 105 106
    listofinstructions <str> (76)
        on left: 60 61 62 63 64
        on right: 13 20 21 23
    statements <str> (77)
        on left: 65 66
        on right: 60 61 62 63 64 66 93 95 96 97 99 101 103
    statement <str> (78)
        on left: 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84
        on right: 65 66
    fict_token <str> (79)
        on left: 85 86 87 88 89 90 91 92
        on right: 67 68 69 70 71 72 73 74 75
    if_statement <str> (80)
        on left: 93 94 95 96 97 98
        on right: 77
    while_statement <str> (81)
        on left: 99 100
        on right: 79
    for_statement <str> (82)
        on left: 101 102 103 104
        on right: 78
    listCompr_with_int_values <str> (83)
        on left: 105
        on right: 82
    listCompr_with_array <str> (84)
        on left: 106
        on right: 83
    comp_declarations <str> (85)
        on left: 107 108
        on right: 5 7 10 11 108
    comp_declaration <str> (86)
        on left: 109
        on right: 107 108
    listof_comp_instructions <str> (87)
        on left: 110
        on right: 109
    comp_var_declarations <str> (88)
        on left: 111 112
        on right: 110 112
    comp_var_declaration <str> (89)
        on left: 113 114
        on right: 111 112
    comp_multi_var <str> (90)
        on left: 115 116 117
        on right: 114
    comp_multi_var_3 <str> (91)
        on left: 118 119
        on right: 117 119
    comp_multi_var_2 <str> (92)
        on left: 120 121
        on right: 116 121
    comp_multi_var_1 <str> (93)
        on left: 122 123
        on right: 115 123
    const_declarations <str> (94)
        on left: 124 125
        on right: 4 6 9 11 60 61 64 125
    const_declaration <str> (95)
        on left: 126 127 128 129 130 131 132 133 134
        on right: 124 125
    var_declarations <str> (96)
        on left: 135 136
        on right: 3 8 9 10 11 60 61 63 136
    var_declaration <str> (97)
        on left: 137 138
        on right: 15 16 135 136
    one_var <str> (98)
        on left: 139 140 141
        on right: 113 137
    multi_var <str> (99)
        on left: 142 143 144
        on right: 138
    multi_var_3 <str> (100)
        on left: 145 146
        on right: 144 146
    multi_var_2 <str> (101)
        on left: 147 148
        on right: 143 148
    multi_var_1 <str> (102)
        on left: 149 150
        on right: 142 150
    data_type <str> (103)
        on left: 151 152 153 154 155
        on right: 17 105 106 118 120 122 139 140 141 145 147 149


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations main_block
    4        | . const_declarations main_block
    5        | . comp_declarations main_block
    6        | . const_declarations function_blocks main_block
    7        | . comp_declarations function_blocks main_block
    8        | . var_declarations function_blocks main_block
    9        | . const_declarations var_declarations function_blocks main_block
   10        | . comp_declarations var_declarations function_blocks main_block
   11        | . comp_declarations const_declarations var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  107 comp_declarations: . comp_declaration ';'
  108                  | . comp_declarations comp_declaration ';'
  109 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    program             go to state 5
    main_block          go to state 6
    function_blocks     go to state 7
    function_block      go to state 8
    comp_declarations   go to state 9
    comp_declaration    go to state 10
    const_declarations  go to state 11
    const_declaration   go to state 12
    var_declarations    go to state 13
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 1

  139 one_var: TK_IDENT . ':' data_type
  140        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT . '[' ']' ':' data_type
  145 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT . '[' ']' ',' multi_var_3
  147 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  150            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 20
    ':'  shift, and go to state 21
    ','  shift, and go to state 22


State 2

   12 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   20 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23
    KW_MAIN   shift, and go to state 24


State 3

  126 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 25


State 4

  109 comp_declaration: KW_COMP . TK_IDENT ':' listof_comp_instructions KW_ENDCOMP

    TK_IDENT  shift, and go to state 26


State 5

    0 $accept: program . $end

    $end  shift, and go to state 27


State 6

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 7

    2 program: function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 28
    function_block  go to state 29


State 8

   18 function_blocks: function_block . ';'

    ';'  shift, and go to state 30


State 9

    5 program: comp_declarations . main_block
    7        | comp_declarations . function_blocks main_block
   10        | comp_declarations . var_declarations function_blocks main_block
   11        | comp_declarations . const_declarations var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  108 comp_declarations: comp_declarations . comp_declaration ';'
  109 comp_declaration: . KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3
    KW_COMP   shift, and go to state 4

    main_block          go to state 31
    function_blocks     go to state 32
    function_block      go to state 8
    comp_declaration    go to state 33
    const_declarations  go to state 34
    const_declaration   go to state 12
    var_declarations    go to state 35
    var_declaration     go to state 14
    one_var             go to state 15
    multi_var           go to state 16
    multi_var_3         go to state 17
    multi_var_2         go to state 18
    multi_var_1         go to state 19


State 10

  107 comp_declarations: comp_declaration . ';'

    ';'  shift, and go to state 36


State 11

    4 program: const_declarations . main_block
    6        | const_declarations . function_blocks main_block
    9        | const_declarations . var_declarations function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  125 const_declarations: const_declarations . const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    main_block         go to state 37
    function_blocks    go to state 38
    function_block     go to state 8
    const_declaration  go to state 39
    var_declarations   go to state 40
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 12

  124 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 41


State 13

    3 program: var_declarations . main_block
    8        | var_declarations . function_blocks main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2

    main_block       go to state 42
    function_blocks  go to state 43
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 14

  135 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 45


State 15

  137 var_declaration: one_var .

    $default  reduce using rule 137 (var_declaration)


State 16

  138 var_declaration: multi_var .

    $default  reduce using rule 138 (var_declaration)


State 17

  144 multi_var: multi_var_3 .

    $default  reduce using rule 144 (multi_var)


State 18

  143 multi_var: multi_var_2 .

    $default  reduce using rule 143 (multi_var)


State 19

  142 multi_var: multi_var_1 .

    $default  reduce using rule 142 (multi_var)


State 20

  140 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT '[' . ']' ':' data_type
  145 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT '[' . ']' ',' multi_var_3
  147 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 46
    ']'          shift, and go to state 47


State 21

  139 one_var: TK_IDENT ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 53


State 22

  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  149            | TK_IDENT ',' . TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1
  150            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 54

    multi_var_1  go to state 55


State 23

   20 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 56


State 24

   12 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 57


State 25

  126 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
  130                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
  133                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
  134                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 58


State 26

  109 comp_declaration: KW_COMP TK_IDENT . ':' listof_comp_instructions KW_ENDCOMP

    ':'  shift, and go to state 59


State 27

    0 $accept: program $end .

    $default  accept


State 28

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 29

   19 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 60


State 30

   18 function_blocks: function_block ';' .

    $default  reduce using rule 18 (function_blocks)


State 31

    5 program: comp_declarations main_block .

    $default  reduce using rule 5 (program)


State 32

    7 program: comp_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 61
    function_block  go to state 29


State 33

  108 comp_declarations: comp_declarations comp_declaration . ';'

    ';'  shift, and go to state 62


State 34

   11 program: comp_declarations const_declarations . var_declarations function_blocks main_block
  125 const_declarations: const_declarations . const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 39
    var_declarations   go to state 63
    var_declaration    go to state 14
    one_var            go to state 15
    multi_var          go to state 16
    multi_var_3        go to state 17
    multi_var_2        go to state 18
    multi_var_1        go to state 19


State 35

   10 program: comp_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 65
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 36

  107 comp_declarations: comp_declaration ';' .

    $default  reduce using rule 107 (comp_declarations)


State 37

    4 program: const_declarations main_block .

    $default  reduce using rule 4 (program)


State 38

    6 program: const_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 66
    function_block  go to state 29


State 39

  125 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 67


State 40

    9 program: const_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 68
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 41

  124 const_declarations: const_declaration ';' .

    $default  reduce using rule 124 (const_declarations)


State 42

    3 program: var_declarations main_block .

    $default  reduce using rule 3 (program)


State 43

    8 program: var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 69
    function_block  go to state 29


State 44

  136 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 70


State 45

  135 var_declarations: var_declaration ';' .

    $default  reduce using rule 135 (var_declarations)


State 46

  140 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  147 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 71


State 47

  141 one_var: TK_IDENT '[' ']' . ':' data_type
  145 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 72
    ','  shift, and go to state 73


State 48

  155 data_type: TK_IDENT .

    $default  reduce using rule 155 (data_type)


State 49

  151 data_type: KW_INTEGER .

    $default  reduce using rule 151 (data_type)


State 50

  152 data_type: KW_SCALAR .

    $default  reduce using rule 152 (data_type)


State 51

  153 data_type: KW_STR .

    $default  reduce using rule 153 (data_type)


State 52

  154 data_type: KW_BOOLEAN .

    $default  reduce using rule 154 (data_type)


State 53

  139 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 139 (one_var)


State 54

  149 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  149            | TK_IDENT ',' TK_IDENT . ':' data_type
  150            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 74
    ','  shift, and go to state 22


State 55

  150 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 150 (multi_var_1)


State 56

   14 function_param_decl: . %empty  [')', ',']
   15                    | . var_declaration
   16                    | . function_param_decl ',' var_declaration
   20 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 14 (function_param_decl)

    function_param_decl  go to state 75
    var_declaration      go to state 76
    one_var              go to state 15
    multi_var            go to state 16
    multi_var_3          go to state 17
    multi_var_2          go to state 18
    multi_var_1          go to state 19


State 57

   12 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 77


State 58

  126 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
  127                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
  130                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTINT ':' KW_INTEGER
  131                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTINT ':' KW_INTEGER
  132                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
  133                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
  134                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 78
    TK_CONSTFLOAT  shift, and go to state 79
    TK_CONSTSTR    shift, and go to state 80
    KW_TRUE        shift, and go to state 81
    KW_FALSE       shift, and go to state 82
    '+'            shift, and go to state 83
    '-'            shift, and go to state 84


State 59

  109 comp_declaration: KW_COMP TK_IDENT ':' . listof_comp_instructions KW_ENDCOMP
  110 listof_comp_instructions: . comp_var_declarations function_blocks
  111 comp_var_declarations: . comp_var_declaration ';'
  112                      | . comp_var_declarations comp_var_declaration ';'
  113 comp_var_declaration: . '#' one_var
  114                     | . comp_multi_var
  115 comp_multi_var: . comp_multi_var_1
  116               | . comp_multi_var_2
  117               | . comp_multi_var_3
  118 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  120 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  122 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  123                 | . '#' TK_IDENT ',' comp_multi_var_1

    '#'  shift, and go to state 85

    listof_comp_instructions  go to state 86
    comp_var_declarations     go to state 87
    comp_var_declaration      go to state 88
    comp_multi_var            go to state 89
    comp_multi_var_3          go to state 90
    comp_multi_var_2          go to state 91
    comp_multi_var_1          go to state 92


State 60

   19 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 19 (function_blocks)


State 61

    7 program: comp_declarations function_blocks main_block .

    $default  reduce using rule 7 (program)


State 62

  108 comp_declarations: comp_declarations comp_declaration ';' .

    $default  reduce using rule 108 (comp_declarations)


State 63

   11 program: comp_declarations const_declarations var_declarations . function_blocks main_block
   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 64

    function_blocks  go to state 93
    function_block   go to state 8
    var_declaration  go to state 44
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 64

   20 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 23


State 65

   10 program: comp_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 94
    function_block  go to state 29


State 66

    6 program: const_declarations function_blocks main_block .

    $default  reduce using rule 6 (program)


State 67

  125 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 125 (const_declarations)


State 68

    9 program: const_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 95
    function_block  go to state 29


State 69

    8 program: var_declarations function_blocks main_block .

    $default  reduce using rule 8 (program)


State 70

  136 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 136 (var_declarations)


State 71

  140 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 96
    ','  shift, and go to state 97


State 72

  141 one_var: TK_IDENT '[' ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 98


State 73

  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  145            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  146            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 99

    multi_var_3  go to state 100


State 74

  149 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 101


State 75

   16 function_param_decl: function_param_decl . ',' var_declaration
   20 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 102
    ','  shift, and go to state 103


State 76

   15 function_param_decl: var_declaration .

    $default  reduce using rule 15 (function_param_decl)


State 77

   12 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 104


State 78

  129 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 105


State 79

  126 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 106


State 80

  132 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 107


State 81

  133 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 108


State 82

  134 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 109


State 83

  127 const_declaration: KW_CONST TK_IDENT '=' '+' . TK_CONSTFLOAT ':' KW_SCALAR
  130                  | KW_CONST TK_IDENT '=' '+' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 110
    TK_CONSTFLOAT  shift, and go to state 111


State 84

  128 const_declaration: KW_CONST TK_IDENT '=' '-' . TK_CONSTFLOAT ':' KW_SCALAR
  131                  | KW_CONST TK_IDENT '=' '-' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 112
    TK_CONSTFLOAT  shift, and go to state 113


State 85

  113 comp_var_declaration: '#' . one_var
  118 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3
  120 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  122 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  123                 | '#' . TK_IDENT ',' comp_multi_var_1
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type

    TK_IDENT  shift, and go to state 114

    one_var  go to state 115


State 86

  109 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions . KW_ENDCOMP

    KW_ENDCOMP  shift, and go to state 116


State 87

   18 function_blocks: . function_block ';'
   19                | . function_blocks function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  110 listof_comp_instructions: comp_var_declarations . function_blocks
  112 comp_var_declarations: comp_var_declarations . comp_var_declaration ';'
  113 comp_var_declaration: . '#' one_var
  114                     | . comp_multi_var
  115 comp_multi_var: . comp_multi_var_1
  116               | . comp_multi_var_2
  117               | . comp_multi_var_3
  118 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  120 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  122 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  123                 | . '#' TK_IDENT ',' comp_multi_var_1

    KW_DEF  shift, and go to state 64
    '#'     shift, and go to state 85

    function_blocks       go to state 117
    function_block        go to state 8
    comp_var_declaration  go to state 118
    comp_multi_var        go to state 89
    comp_multi_var_3      go to state 90
    comp_multi_var_2      go to state 91
    comp_multi_var_1      go to state 92


State 88

  111 comp_var_declarations: comp_var_declaration . ';'

    ';'  shift, and go to state 119


State 89

  114 comp_var_declaration: comp_multi_var .

    $default  reduce using rule 114 (comp_var_declaration)


State 90

  117 comp_multi_var: comp_multi_var_3 .

    $default  reduce using rule 117 (comp_multi_var)


State 91

  116 comp_multi_var: comp_multi_var_2 .

    $default  reduce using rule 116 (comp_multi_var)


State 92

  115 comp_multi_var: comp_multi_var_1 .

    $default  reduce using rule 115 (comp_multi_var)


State 93

   11 program: comp_declarations const_declarations var_declarations function_blocks . main_block
   12 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
   13           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 120
    function_block  go to state 29


State 94

   10 program: comp_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 10 (program)


State 95

    9 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 9 (program)


State 96

  140 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 121


State 97

  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  147            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  148            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 122

    multi_var_2  go to state 123


State 98

  141 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 141 (one_var)


State 99

  145 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  145            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  146            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 124


State 100

  146 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 146 (multi_var_3)


State 101

  149 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 149 (multi_var_1)


State 102

   17 function_return_type: . TK_FUNC_RET data_type
   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   23               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 125
    ':'          shift, and go to state 126

    function_return_type  go to state 127


State 103

   16 function_param_decl: function_param_decl ',' . var_declaration
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 128
    one_var          go to state 15
    multi_var        go to state 16
    multi_var_3      go to state 17
    multi_var_2      go to state 18
    multi_var_1      go to state 19


State 104

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
   13           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: . var_declarations const_declarations statements
   61                   | . const_declarations var_declarations statements
   62                   | . statements
   63                   | . var_declarations statements
   64                   | . const_declarations statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_ENDDEF    shift, and go to state 133
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 139
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 105

  129 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 150


State 106

  126 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 151


State 107

  132 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 152


State 108

  133 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 153


State 109

  134 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 154


State 110

  130 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 155


State 111

  127 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 156


State 112

  131 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 157


State 113

  128 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 158


State 114

  118 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3
  120 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2
  122 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  123                 | '#' TK_IDENT . ',' comp_multi_var_1
  139 one_var: TK_IDENT . ':' data_type
  140        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT . '[' ']' ':' data_type

    '['  shift, and go to state 159
    ':'  shift, and go to state 21
    ','  shift, and go to state 160


State 115

  113 comp_var_declaration: '#' one_var .

    $default  reduce using rule 113 (comp_var_declaration)


State 116

  109 comp_declaration: KW_COMP TK_IDENT ':' listof_comp_instructions KW_ENDCOMP .

    $default  reduce using rule 109 (comp_declaration)


State 117

   19 function_blocks: function_blocks . function_block ';'
   20 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   21               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   23               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  110 listof_comp_instructions: comp_var_declarations function_blocks .  [KW_ENDCOMP]

    KW_DEF  shift, and go to state 64

    $default  reduce using rule 110 (listof_comp_instructions)

    function_block  go to state 29


State 118

  112 comp_var_declarations: comp_var_declarations comp_var_declaration . ';'

    ';'  shift, and go to state 161


State 119

  111 comp_var_declarations: comp_var_declaration ';' .

    $default  reduce using rule 111 (comp_var_declarations)


State 120

   11 program: comp_declarations const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 11 (program)


State 121

  140 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 140 (one_var)


State 122

  147 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  147            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 162


State 123

  148 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 148 (multi_var_2)


State 124

  145 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  145            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  146            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 163


State 125

   17 function_return_type: TK_FUNC_RET . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 164


State 126

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   22               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: . var_declarations const_declarations statements
   61                   | . const_declarations var_declarations statements
   62                   | . statements
   63                   | . var_declarations statements
   64                   | . const_declarations statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_RETURN    shift, and go to state 165
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 166
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 127

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 167


State 128

   16 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 16 (function_param_decl)


State 129

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   85 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   87           | TK_IDENT . '[' TK_CONSTINT ']'
   89           | TK_IDENT . '[' TK_IDENT ']'
   92           | TK_IDENT . '[' '#' TK_IDENT ']'
  105 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  139 one_var: TK_IDENT . ':' data_type
  140        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT . '[' ']' ':' data_type
  145 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT . '[' ']' ',' multi_var_3
  147 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  150            | TK_IDENT . ',' multi_var_1

    TK_COLEQ  shift, and go to state 168
    '('       shift, and go to state 169
    '['       shift, and go to state 170
    ':'       shift, and go to state 21
    ','       shift, and go to state 22

    TK_COLEQ  [reduce using rule 85 (fict_token)]
    $default  reduce using rule 85 (fict_token)


State 130

  101 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 171


State 131

   80 statement: KW_BREAK . ';'

    ';'  shift, and go to state 172


State 132

   81 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 173


State 133

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 174


State 134

   93 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   94             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   95             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 175


State 135

   99 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 176


State 136

   84 statement: ';' .

    $default  reduce using rule 84 (statement)


State 137

   86 fict_token: '#' . TK_IDENT
   88           | '#' . TK_IDENT '[' TK_CONSTINT ']'
   90           | '#' . TK_IDENT '[' '#' TK_IDENT ']'
   91           | '#' . TK_IDENT '[' TK_IDENT ']'

    TK_IDENT  shift, and go to state 177


State 138

   76 statement: function_call_no_assgn . ';'

    ';'  shift, and go to state 178


State 139

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 179


State 140

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   62 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 62 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 141

   65 statements: statement .

    $default  reduce using rule 65 (statements)


State 142

   67 statement: fict_token . '=' listofexpr ';'
   68          | fict_token . TK_PLUEQ expr ';'
   69          | fict_token . TK_MINEQ expr ';'
   70          | fict_token . TK_MULEQ expr ';'
   71          | fict_token . TK_MODEQ expr ';'
   72          | fict_token . TK_DIVEQ expr ';'
   73          | fict_token . TK_COLEQ expr ';'
   74          | fict_token . '.' function_call_no_assgn ';'
   75          | fict_token . '.' expr '=' listofexpr ';'

    TK_PLUEQ  shift, and go to state 182
    TK_MINEQ  shift, and go to state 183
    TK_MULEQ  shift, and go to state 184
    TK_DIVEQ  shift, and go to state 185
    TK_MODEQ  shift, and go to state 186
    TK_COLEQ  shift, and go to state 187
    '='       shift, and go to state 188
    '.'       shift, and go to state 189


State 143

   77 statement: if_statement . ';'

    ';'  shift, and go to state 190


State 144

   79 statement: while_statement . ';'

    ';'  shift, and go to state 191


State 145

   78 statement: for_statement . ';'

    ';'  shift, and go to state 192


State 146

   82 statement: listCompr_with_int_values . ';'

    ';'  shift, and go to state 193


State 147

   83 statement: listCompr_with_array . ';'

    ';'  shift, and go to state 194


State 148

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   61 listofinstructions: const_declarations . var_declarations statements
   64                   | const_declarations . statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  125 const_declarations: const_declarations . const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 195
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declaration          go to state 39
    var_declarations           go to state 196
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 149

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: var_declarations . const_declarations statements
   63                   | var_declarations . statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 197
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 198
    const_declaration          go to state 12
    var_declaration            go to state 44
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 150

  129 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 129 (const_declaration)


State 151

  126 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 126 (const_declaration)


State 152

  132 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 132 (const_declaration)


State 153

  133 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 133 (const_declaration)


State 154

  134 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 134 (const_declaration)


State 155

  130 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 199


State 156

  127 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 200


State 157

  131 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 201


State 158

  128 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 202


State 159

  118 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3
  120 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2
  140 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT '[' . ']' ':' data_type

    TK_CONSTINT  shift, and go to state 203
    ']'          shift, and go to state 204


State 160

  122 comp_multi_var_1: . '#' TK_IDENT ',' '#' TK_IDENT ':' data_type
  122                 | '#' TK_IDENT ',' . '#' TK_IDENT ':' data_type
  123                 | . '#' TK_IDENT ',' comp_multi_var_1
  123                 | '#' TK_IDENT ',' . comp_multi_var_1

    '#'  shift, and go to state 205

    comp_multi_var_1  go to state 206


State 161

  112 comp_var_declarations: comp_var_declarations comp_var_declaration ';' .

    $default  reduce using rule 112 (comp_var_declarations)


State 162

  147 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  147            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 207


State 163

  145 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  145            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  146            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 208
    ','  shift, and go to state 73


State 164

   17 function_return_type: TK_FUNC_RET data_type .

    $default  reduce using rule 17 (function_return_type)


State 165

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 209


State 166

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   21               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 210
    KW_RETURN  shift, and go to state 211


State 167

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   24               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: . var_declarations const_declarations statements
   61                   | . const_declarations var_declarations statements
   62                   | . statements
   63                   | . var_declarations statements
   64                   | . const_declarations statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  124 const_declarations: . const_declaration ';'
  125                   | . const_declarations const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
  135 var_declarations: . var_declaration ';'
  136                 | . var_declarations var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_RETURN    shift, and go to state 212
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    listofinstructions         go to state 213
    statements                 go to state 140
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declarations         go to state 148
    const_declaration          go to state 12
    var_declarations           go to state 149
    var_declaration            go to state 14
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 168

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ . '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    '['  shift, and go to state 214


State 169

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   25                       | TK_IDENT '(' . func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   26                       | TK_IDENT '(' . ')'
   27 func_param_call: . expr
   28                | . func_param_call ',' expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 225
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    func_param_call         go to state 228
    expr                    go to state 229


State 170

   87 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   89           | TK_IDENT '[' . TK_IDENT ']'
   92           | TK_IDENT '[' . '#' TK_IDENT ']'
  140 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  141        | TK_IDENT '[' . ']' ':' data_type
  145 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | TK_IDENT '[' . ']' ',' multi_var_3
  147 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_IDENT     shift, and go to state 230
    TK_CONSTINT  shift, and go to state 231
    ']'          shift, and go to state 47
    '#'          shift, and go to state 232


State 171

  101 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 233


State 172

   80 statement: KW_BREAK ';' .

    $default  reduce using rule 80 (statement)


State 173

   81 statement: KW_CONTINUE ';' .

    $default  reduce using rule 81 (statement)


State 174

   12 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 12 (main_block)


State 175

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   93 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   94             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   95             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 234
    expr                    go to state 235


State 176

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   99 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
  100                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 236
    expr                    go to state 235


State 177

   86 fict_token: '#' TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   88           | '#' TK_IDENT . '[' TK_CONSTINT ']'
   90           | '#' TK_IDENT . '[' '#' TK_IDENT ']'
   91           | '#' TK_IDENT . '[' TK_IDENT ']'

    '['  shift, and go to state 237

    $default  reduce using rule 86 (fict_token)


State 178

   76 statement: function_call_no_assgn ';' .

    $default  reduce using rule 76 (statement)


State 179

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 238


State 180

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   85 fict_token: TK_IDENT .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
   87           | TK_IDENT . '[' TK_CONSTINT ']'
   89           | TK_IDENT . '[' TK_IDENT ']'
   92           | TK_IDENT . '[' '#' TK_IDENT ']'
  105 listCompr_with_int_values: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT . TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_COLEQ  shift, and go to state 168
    '('       shift, and go to state 169
    '['       shift, and go to state 239

    TK_COLEQ  [reduce using rule 85 (fict_token)]
    $default  reduce using rule 85 (fict_token)


State 181

   66 statements: statements statement .

    $default  reduce using rule 66 (statements)


State 182

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   68 statement: fict_token TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 240


State 183

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   69 statement: fict_token TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 241


State 184

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   70 statement: fict_token TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 242


State 185

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   72 statement: fict_token TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 243


State 186

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   71 statement: fict_token TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 244


State 187

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   73 statement: fict_token TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 245


State 188

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   67 statement: fict_token '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 246
    expr                    go to state 235


State 189

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   74 statement: fict_token '.' . function_call_no_assgn ';'
   75          | fict_token '.' . expr '=' listofexpr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 247
    expr                    go to state 248


State 190

   77 statement: if_statement ';' .

    $default  reduce using rule 77 (statement)


State 191

   79 statement: while_statement ';' .

    $default  reduce using rule 79 (statement)


State 192

   78 statement: for_statement ';' .

    $default  reduce using rule 78 (statement)


State 193

   82 statement: listCompr_with_int_values ';' .

    $default  reduce using rule 82 (statement)


State 194

   83 statement: listCompr_with_array ';' .

    $default  reduce using rule 83 (statement)


State 195

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   64 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 64 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 196

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   61 listofinstructions: const_declarations var_declarations . statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  136 var_declarations: var_declarations . var_declaration ';'
  137 var_declaration: . one_var
  138                | . multi_var
  139 one_var: . TK_IDENT ':' data_type
  140        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  141        | . TK_IDENT '[' ']' ':' data_type
  142 multi_var: . multi_var_1
  143          | . multi_var_2
  144          | . multi_var_3
  145 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  146            | . TK_IDENT '[' ']' ',' multi_var_3
  147 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  149 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  150            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 129
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 249
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    var_declaration            go to state 44
    one_var                    go to state 15
    multi_var                  go to state 16
    multi_var_3                go to state 17
    multi_var_2                go to state 18
    multi_var_1                go to state 19


State 197

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   63 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 63 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 198

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: var_declarations const_declarations . statements
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  125 const_declarations: const_declarations . const_declaration ';'
  126 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
  127                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
  128                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
  129                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
  130                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
  131                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
  132                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
  133                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
  134                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 250
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147
    const_declaration          go to state 39


State 199

  130 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 130 (const_declaration)


State 200

  127 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 127 (const_declaration)


State 201

  131 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 131 (const_declaration)


State 202

  128 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 128 (const_declaration)


State 203

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2
  140 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 251


State 204

  118 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  119                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3
  141 one_var: TK_IDENT '[' ']' . ':' data_type

    ':'  shift, and go to state 72
    ','  shift, and go to state 252


State 205

  122 comp_multi_var_1: '#' . TK_IDENT ',' '#' TK_IDENT ':' data_type
  122                 | '#' TK_IDENT ',' '#' . TK_IDENT ':' data_type
  123                 | '#' . TK_IDENT ',' comp_multi_var_1

    TK_IDENT  shift, and go to state 253


State 206

  123 comp_multi_var_1: '#' TK_IDENT ',' comp_multi_var_1 .

    $default  reduce using rule 123 (comp_multi_var_1)


State 207

  147 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  147            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 254


State 208

  145 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 255


State 209

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 256


State 210

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 211

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 257


State 212

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 258


State 213

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 259


State 214

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' . expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 260


State 215

   25 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   26                       | TK_IDENT . '(' ')'
   33 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']
   56     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 169
    '['  shift, and go to state 261

    '('       [reduce using rule 33 (expr)]
    $default  reduce using rule 33 (expr)


State 216

   31 expr: TK_CONSTINT .

    $default  reduce using rule 31 (expr)


State 217

   32 expr: TK_CONSTFLOAT .

    $default  reduce using rule 32 (expr)


State 218

   35 expr: TK_CONSTSTR .

    $default  reduce using rule 35 (expr)


State 219

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   40     | KW_NOT . expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 262


State 220

   37 expr: KW_TRUE .

    $default  reduce using rule 37 (expr)


State 221

   36 expr: KW_FALSE .

    $default  reduce using rule 36 (expr)


State 222

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   54     | '+' . expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 263


State 223

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   53     | '-' . expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 264


State 224

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   55     | '(' . expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 265


State 225

   26 function_call_no_assgn: TK_IDENT '(' ')' .

    $default  reduce using rule 26 (function_call_no_assgn)


State 226

   34 expr: '#' . TK_IDENT
   57     | '#' . TK_IDENT '[' expr ']'

    TK_IDENT  shift, and go to state 266


State 227

   59 expr: function_call_no_assgn .

    $default  reduce using rule 59 (expr)


State 228

   25 function_call_no_assgn: TK_IDENT '(' func_param_call . ')'
   28 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 267
    ','  shift, and go to state 268


State 229

   27 func_param_call: expr .  [')', ',']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 27 (func_param_call)


State 230

   89 fict_token: TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 284


State 231

   87 fict_token: TK_IDENT '[' TK_CONSTINT . ']'
  140 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  147 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 285


State 232

   92 fict_token: TK_IDENT '[' '#' . TK_IDENT ']'

    TK_IDENT  shift, and go to state 286


State 233

  101 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 287


State 234

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   93 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   94             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   95             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 288
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 289


State 235

   29 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    '+'       [reduce using rule 29 (listofexpr)]
    '-'       [reduce using rule 29 (listofexpr)]
    $default  reduce using rule 29 (listofexpr)


State 236

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   99 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
  100                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ')'            shift, and go to state 290
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 289


State 237

   88 fict_token: '#' TK_IDENT '[' . TK_CONSTINT ']'
   90           | '#' TK_IDENT '[' . '#' TK_IDENT ']'
   91           | '#' TK_IDENT '[' . TK_IDENT ']'

    TK_IDENT     shift, and go to state 291
    TK_CONSTINT  shift, and go to state 292
    '#'          shift, and go to state 293


State 238

   13 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 13 (main_block)


State 239

   87 fict_token: TK_IDENT '[' . TK_CONSTINT ']'
   89           | TK_IDENT '[' . TK_IDENT ']'
   92           | TK_IDENT '[' . '#' TK_IDENT ']'

    TK_IDENT     shift, and go to state 230
    TK_CONSTINT  shift, and go to state 294
    '#'          shift, and go to state 232


State 240

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   68 statement: fict_token TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 295


State 241

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   69 statement: fict_token TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 296


State 242

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   70 statement: fict_token TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 297


State 243

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   72 statement: fict_token TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 298


State 244

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   71 statement: fict_token TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 299


State 245

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   73 statement: fict_token TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 300


State 246

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   67 statement: fict_token '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ';'            shift, and go to state 301
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 289


State 247

   59 expr: function_call_no_assgn .  [TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, '=', '<', '>', '+', '-', '*', '/', '%', '.']
   74 statement: fict_token '.' function_call_no_assgn . ';'

    ';'  shift, and go to state 302

    $default  reduce using rule 59 (expr)


State 248

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   75 statement: fict_token '.' expr . '=' listofexpr ';'

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '='       shift, and go to state 303
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283


State 249

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   61 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 61 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 250

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   60 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    $default  reduce using rule 60 (listofinstructions)

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 251

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2
  140 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 96
    ','  shift, and go to state 304


State 252

  118 comp_multi_var_3: . '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  118                 | '#' TK_IDENT '[' ']' ',' . '#' TK_IDENT '[' ']' ':' data_type
  119                 | . '#' TK_IDENT '[' ']' ',' comp_multi_var_3
  119                 | '#' TK_IDENT '[' ']' ',' . comp_multi_var_3

    '#'  shift, and go to state 305

    comp_multi_var_3  go to state 306


State 253

  122 comp_multi_var_1: '#' TK_IDENT . ',' '#' TK_IDENT ':' data_type
  122                 | '#' TK_IDENT ',' '#' TK_IDENT . ':' data_type
  123                 | '#' TK_IDENT . ',' comp_multi_var_1

    ':'  shift, and go to state 307
    ','  shift, and go to state 160


State 254

  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  147            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 308
    ','  shift, and go to state 97


State 255

  145 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 145 (multi_var_3)


State 256

   22 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 22 (function_block)


State 257

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 309


State 258

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 310


State 259

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 311


State 260

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr . KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    KW_FOR    shift, and go to state 312
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283


State 261

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   56     | TK_IDENT '[' . expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 313


State 262

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   40     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '(', ')', ']', ':', ';', ',', '#']
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 40 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 40 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 40 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 40 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 40 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 40 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 40 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 40 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 40 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 40 and token '.' resolved as shift (KW_NOT < '.').


State 263

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   54     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 54 (expr)

    Conflict between rule 54 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 54 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 54 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 54 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 54 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 54 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 54 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 54 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 54 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 54 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 54 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 54 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 54 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 54 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 54 and token '.' resolved as shift (UPLUS < '.').


State 264

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   53     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 53 (expr)

    Conflict between rule 53 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 53 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 53 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 53 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 53 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 53 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 53 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 53 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 53 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 53 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 53 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 53 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 53 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 53 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 53 and token '.' resolved as shift (UMINUS < '.').


State 265

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   55     | '(' expr . ')'
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ')'       shift, and go to state 314


State 266

   34 expr: '#' TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']
   57     | '#' TK_IDENT . '[' expr ']'

    '['  shift, and go to state 315

    $default  reduce using rule 34 (expr)


State 267

   25 function_call_no_assgn: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 25 (function_call_no_assgn)


State 268

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   28 func_param_call: func_param_call ',' . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 316


State 269

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   52     | expr TK_POW . expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 317


State 270

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   42     | expr TK_EQEQ . expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 318


State 271

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   41     | expr TK_NOTEQ . expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 319


State 272

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   44     | expr TK_GREEQ . expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 320


State 273

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   43     | expr TK_LESEQ . expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 321


State 274

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   39     | expr KW_AND . expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 322


State 275

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   38     | expr KW_OR . expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 323


State 276

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   45     | expr '<' . expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 324


State 277

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   46     | expr '>' . expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 325


State 278

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   47     | expr '+' . expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 326


State 279

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   48     | expr '-' . expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 327


State 280

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   49     | expr '*' . expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 328


State 281

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   50     | expr '/' . expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 329


State 282

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   51     | expr '%' . expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 330


State 283

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   58     | expr '.' . expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 331


State 284

   89 fict_token: TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 89 (fict_token)


State 285

   87 fict_token: TK_IDENT '[' TK_CONSTINT ']' .  [TK_PLUEQ, TK_MINEQ, TK_MULEQ, TK_DIVEQ, TK_MODEQ, TK_COLEQ, '=', '.']
  140 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  148            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 96
    ','  shift, and go to state 97

    $default  reduce using rule 87 (fict_token)


State 286

   92 fict_token: TK_IDENT '[' '#' TK_IDENT . ']'

    ']'  shift, and go to state 332


State 287

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 333


State 288

   93 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   94             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   95             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   97             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 334


State 289

   30 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';', '#']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    '+'       [reduce using rule 30 (listofexpr)]
    '-'       [reduce using rule 30 (listofexpr)]
    $default  reduce using rule 30 (listofexpr)


State 290

   99 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
  100                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 335


State 291

   91 fict_token: '#' TK_IDENT '[' TK_IDENT . ']'

    ']'  shift, and go to state 336


State 292

   88 fict_token: '#' TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 337


State 293

   90 fict_token: '#' TK_IDENT '[' '#' . TK_IDENT ']'

    TK_IDENT  shift, and go to state 338


State 294

   87 fict_token: TK_IDENT '[' TK_CONSTINT . ']'

    ']'  shift, and go to state 339


State 295

   68 statement: fict_token TK_PLUEQ expr ';' .

    $default  reduce using rule 68 (statement)


State 296

   69 statement: fict_token TK_MINEQ expr ';' .

    $default  reduce using rule 69 (statement)


State 297

   70 statement: fict_token TK_MULEQ expr ';' .

    $default  reduce using rule 70 (statement)


State 298

   72 statement: fict_token TK_DIVEQ expr ';' .

    $default  reduce using rule 72 (statement)


State 299

   71 statement: fict_token TK_MODEQ expr ';' .

    $default  reduce using rule 71 (statement)


State 300

   73 statement: fict_token TK_COLEQ expr ';' .

    $default  reduce using rule 73 (statement)


State 301

   67 statement: fict_token '=' listofexpr ';' .

    $default  reduce using rule 67 (statement)


State 302

   74 statement: fict_token '.' function_call_no_assgn ';' .

    $default  reduce using rule 74 (statement)


State 303

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   29 listofexpr: . expr
   30           | . listofexpr expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   75 statement: fict_token '.' expr '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    listofexpr              go to state 340
    expr                    go to state 235


State 304

  120 comp_multi_var_2: . '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | . '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2
  121                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' . comp_multi_var_2

    '#'  shift, and go to state 341

    comp_multi_var_2  go to state 342


State 305

  118 comp_multi_var_3: '#' . TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  118                 | '#' TK_IDENT '[' ']' ',' '#' . TK_IDENT '[' ']' ':' data_type
  119                 | '#' . TK_IDENT '[' ']' ',' comp_multi_var_3

    TK_IDENT  shift, and go to state 343


State 306

  119 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' comp_multi_var_3 .

    $default  reduce using rule 119 (comp_multi_var_3)


State 307

  122 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 344


State 308

  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 345


State 309

   21 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 21 (function_block)


State 310

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 346


State 311

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ';'       shift, and go to state 347


State 312

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR . TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 348


State 313

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   56     | TK_IDENT '[' expr . ']'
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ']'       shift, and go to state 349


State 314

   55 expr: '(' expr ')' .

    $default  reduce using rule 55 (expr)


State 315

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   57     | '#' TK_IDENT '[' . expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 350


State 316

   28 func_param_call: func_param_call ',' expr .  [')', ',']
   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 28 (func_param_call)


State 317

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   52     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 52 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 52 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 52 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 52 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 52 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 52 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 52 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 52 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 52 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 52 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 52 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 52 and token '.' resolved as shift (TK_POW < '.').


State 318

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   42     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '(', ')', ']', ':', ';', ',', '#']
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 42 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 42 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 42 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 42 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 42 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 42 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 42 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 42 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 42 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 42 and token '.' resolved as shift (TK_EQEQ < '.').


State 319

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   41     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '(', ')', ']', ':', ';', ',', '#']
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 41 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 41 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 41 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 41 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 41 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 41 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 41 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 41 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 41 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 41 and token '.' resolved as shift (TK_NOTEQ < '.').


State 320

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   44     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '(', ')', ']', ':', ';', ',', '#']
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '+'     shift, and go to state 278
    '-'     shift, and go to state 279
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 44 and token '<' resolved as reduce (%left '<').
    Conflict between rule 44 and token '>' resolved as reduce (%left '>').
    Conflict between rule 44 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 44 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 44 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 44 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 44 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 44 and token '.' resolved as shift (TK_GREEQ < '.').


State 321

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   43     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '(', ')', ']', ':', ';', ',', '#']
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '+'     shift, and go to state 278
    '-'     shift, and go to state 279
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 43 and token '<' resolved as reduce (%left '<').
    Conflict between rule 43 and token '>' resolved as reduce (%left '>').
    Conflict between rule 43 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 43 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 43 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 43 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 43 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 43 and token '.' resolved as shift (TK_LESEQ < '.').


State 322

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   39     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '(', ')', ']', ':', ';', ',', '#']
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 39 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 39 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 39 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 39 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 39 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 39 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 39 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 39 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 39 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 39 and token '.' resolved as shift (KW_AND < '.').


State 323

   38 expr: expr . KW_OR expr
   38     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '(', ')', ']', ':', ';', ',', '#']
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 38 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 38 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 38 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 38 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 38 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 38 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 38 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 38 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 38 and token '.' resolved as shift (KW_OR < '.').


State 324

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   45     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '(', ')', ']', ':', ';', ',', '#']
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '+'     shift, and go to state 278
    '-'     shift, and go to state 279
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 45 and token '<' resolved as reduce (%left '<').
    Conflict between rule 45 and token '>' resolved as reduce (%left '>').
    Conflict between rule 45 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 45 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 45 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 45 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 45 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 45 and token '.' resolved as shift ('<' < '.').


State 325

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   46     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '(', ')', ']', ':', ';', ',', '#']
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '+'     shift, and go to state 278
    '-'     shift, and go to state 279
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 46 and token '<' resolved as reduce (%left '<').
    Conflict between rule 46 and token '>' resolved as reduce (%left '>').
    Conflict between rule 46 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 46 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 46 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 46 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 46 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 46 and token '.' resolved as shift ('>' < '.').


State 326

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   47     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 47 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 47 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 47 and token '+' resolved as reduce (%left '+').
    Conflict between rule 47 and token '-' resolved as reduce (%left '-').
    Conflict between rule 47 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 47 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 47 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 47 and token '.' resolved as shift ('+' < '.').


State 327

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   48     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '(', ')', ']', ':', ';', ',', '#']
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '*'     shift, and go to state 280
    '/'     shift, and go to state 281
    '%'     shift, and go to state 282
    '.'     shift, and go to state 283

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 48 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 48 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 48 and token '+' resolved as reduce (%left '+').
    Conflict between rule 48 and token '-' resolved as reduce (%left '-').
    Conflict between rule 48 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 48 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 48 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 48 and token '.' resolved as shift ('-' < '.').


State 328

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   49     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 49 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 49 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 49 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 49 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 49 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 49 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 49 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 49 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 49 and token '*' resolved as reduce (%left '*').
    Conflict between rule 49 and token '/' resolved as reduce (%left '/').
    Conflict between rule 49 and token '%' resolved as reduce (%left '%').
    Conflict between rule 49 and token '.' resolved as shift ('*' < '.').


State 329

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   50     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 50 (expr)

    Conflict between rule 50 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 50 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 50 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 50 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 50 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 50 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 50 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 50 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 50 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 50 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 50 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 50 and token '*' resolved as reduce (%left '*').
    Conflict between rule 50 and token '/' resolved as reduce (%left '/').
    Conflict between rule 50 and token '%' resolved as reduce (%left '%').
    Conflict between rule 50 and token '.' resolved as shift ('/' < '.').


State 330

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   51     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',', '#']
   52     | expr . TK_POW expr
   58     | expr . '.' expr

    TK_POW  shift, and go to state 269
    '.'     shift, and go to state 283

    $default  reduce using rule 51 (expr)

    Conflict between rule 51 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 51 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 51 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 51 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 51 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 51 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 51 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 51 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 51 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 51 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 51 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 51 and token '*' resolved as reduce (%left '*').
    Conflict between rule 51 and token '/' resolved as reduce (%left '/').
    Conflict between rule 51 and token '%' resolved as reduce (%left '%').
    Conflict between rule 51 and token '.' resolved as shift ('%' < '.').


State 331

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
   58     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_FOR, KW_TRUE, KW_FALSE, '=', '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',', '#']

    $default  reduce using rule 58 (expr)

    Conflict between rule 58 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 58 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 58 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 58 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 58 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 58 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 58 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 58 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 58 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 58 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 58 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 58 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 58 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 58 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 58 and token '.' resolved as reduce (%left '.').


State 332

   92 fict_token: TK_IDENT '[' '#' TK_IDENT ']' .

    $default  reduce using rule 92 (fict_token)


State 333

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ':'       shift, and go to state 351


State 334

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   94             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   95             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   97             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ELSE      shift, and go to state 352
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 353
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 354
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 335

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   99                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  100                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDWHILE  shift, and go to state 355
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 356
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 336

   91 fict_token: '#' TK_IDENT '[' TK_IDENT ']' .

    $default  reduce using rule 91 (fict_token)


State 337

   88 fict_token: '#' TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 88 (fict_token)


State 338

   90 fict_token: '#' TK_IDENT '[' '#' TK_IDENT . ']'

    ']'  shift, and go to state 357


State 339

   87 fict_token: TK_IDENT '[' TK_CONSTINT ']' .

    $default  reduce using rule 87 (fict_token)


State 340

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   30 listofexpr: listofexpr . expr
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
   75 statement: fict_token '.' expr '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    ';'            shift, and go to state 358
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 289


State 341

  120 comp_multi_var_2: '#' . TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' . TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2

    TK_IDENT  shift, and go to state 359


State 342

  121 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' comp_multi_var_2 .

    $default  reduce using rule 121 (comp_multi_var_2)


State 343

  118 comp_multi_var_3: '#' TK_IDENT . '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  118                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT . '[' ']' ':' data_type
  119                 | '#' TK_IDENT . '[' ']' ',' comp_multi_var_3

    '['  shift, and go to state 360


State 344

  122 comp_multi_var_1: '#' TK_IDENT ',' '#' TK_IDENT ':' data_type .

    $default  reduce using rule 122 (comp_multi_var_1)


State 345

  147 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 147 (multi_var_2)


State 346

   24 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 24 (function_block)


State 347

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 361


State 348

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT . ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    ':'  shift, and go to state 362


State 349

   56 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 56 (expr)


State 350

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   57     | '#' TK_IDENT '[' expr . ']'
   58     | expr . '.' expr

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ']'       shift, and go to state 363


State 351

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 364


State 352

   96 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   98             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 365


State 353

   94 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 94 (if_statement)


State 354

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   93             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   95             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   97             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ELSE      shift, and go to state 366
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 367
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 355

  100 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 100 (while_statement)


State 356

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   99                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDWHILE  shift, and go to state 368
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 357

   90 fict_token: '#' TK_IDENT '[' '#' TK_IDENT ']' .

    $default  reduce using rule 90 (fict_token)


State 358

   75 statement: fict_token '.' expr '=' listofexpr ';' .

    $default  reduce using rule 75 (statement)


State 359

  120 comp_multi_var_2: '#' TK_IDENT . '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT . '[' TK_CONSTINT ']' ',' comp_multi_var_2

    '['  shift, and go to state 369


State 360

  118 comp_multi_var_3: '#' TK_IDENT '[' . ']' ',' '#' TK_IDENT '[' ']' ':' data_type
  118                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' . ']' ':' data_type
  119                 | '#' TK_IDENT '[' . ']' ',' comp_multi_var_3

    ']'  shift, and go to state 370


State 361

   23 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 23 (function_block)


State 362

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' . data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT     shift, and go to state 48
    TK_CONSTINT  shift, and go to state 371
    KW_INTEGER   shift, and go to state 49
    KW_SCALAR    shift, and go to state 50
    KW_STR       shift, and go to state 51
    KW_BOOLEAN   shift, and go to state 52

    data_type  go to state 372


State 363

   57 expr: '#' TK_IDENT '[' expr ']' .

    $default  reduce using rule 57 (expr)


State 364

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ']'       shift, and go to state 373
    ':'       shift, and go to state 374


State 365

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   98             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 375
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 376
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 366

   95 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   97             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 377


State 367

   93 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 93 (if_statement)


State 368

   99 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 99 (while_statement)


State 369

  120 comp_multi_var_2: '#' TK_IDENT '[' . TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  121                 | '#' TK_IDENT '[' . TK_CONSTINT ']' ',' comp_multi_var_2

    TK_CONSTINT  shift, and go to state 378


State 370

  118 comp_multi_var_3: '#' TK_IDENT '[' ']' . ',' '#' TK_IDENT '[' ']' ':' data_type
  118                 | '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' . ':' data_type
  119                 | '#' TK_IDENT '[' ']' . ',' comp_multi_var_3

    ':'  shift, and go to state 379
    ','  shift, and go to state 252


State 371

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 380


State 372

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type . KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    KW_IN  shift, and go to state 381


State 373

  103 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 382


State 374

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   31 expr: . TK_CONSTINT
   32     | . TK_CONSTFLOAT
   33     | . TK_IDENT
   34     | . '#' TK_IDENT
   35     | . TK_CONSTSTR
   36     | . KW_FALSE
   37     | . KW_TRUE
   38     | . expr KW_OR expr
   39     | . expr KW_AND expr
   40     | . KW_NOT expr
   41     | . expr TK_NOTEQ expr
   42     | . expr TK_EQEQ expr
   43     | . expr TK_LESEQ expr
   44     | . expr TK_GREEQ expr
   45     | . expr '<' expr
   46     | . expr '>' expr
   47     | . expr '+' expr
   48     | . expr '-' expr
   49     | . expr '*' expr
   50     | . expr '/' expr
   51     | . expr '%' expr
   52     | . expr TK_POW expr
   53     | . '-' expr
   54     | . '+' expr
   55     | . '(' expr ')'
   56     | . TK_IDENT '[' expr ']'
   57     | . '#' TK_IDENT '[' expr ']'
   58     | . expr '.' expr
   59     | . function_call_no_assgn
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 215
    TK_CONSTINT    shift, and go to state 216
    TK_CONSTFLOAT  shift, and go to state 217
    TK_CONSTSTR    shift, and go to state 218
    KW_NOT         shift, and go to state 219
    KW_TRUE        shift, and go to state 220
    KW_FALSE       shift, and go to state 221
    '+'            shift, and go to state 222
    '-'            shift, and go to state 223
    '('            shift, and go to state 224
    '#'            shift, and go to state 226

    function_call_no_assgn  go to state 227
    expr                    go to state 383


State 375

   98 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 98 (if_statement)


State 376

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   96             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 384
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 377

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   95             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   97             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 385
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 386
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 378

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT . ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  121                 | '#' TK_IDENT '[' TK_CONSTINT . ']' ',' comp_multi_var_2

    ']'  shift, and go to state 387


State 379

  118 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 388


State 380

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 389


State 381

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN . TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT  shift, and go to state 390


State 382

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  104              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 391
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 392
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 383

   38 expr: expr . KW_OR expr
   39     | expr . KW_AND expr
   41     | expr . TK_NOTEQ expr
   42     | expr . TK_EQEQ expr
   43     | expr . TK_LESEQ expr
   44     | expr . TK_GREEQ expr
   45     | expr . '<' expr
   46     | expr . '>' expr
   47     | expr . '+' expr
   48     | expr . '-' expr
   49     | expr . '*' expr
   50     | expr . '/' expr
   51     | expr . '%' expr
   52     | expr . TK_POW expr
   58     | expr . '.' expr
  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 269
    TK_EQEQ   shift, and go to state 270
    TK_NOTEQ  shift, and go to state 271
    TK_GREEQ  shift, and go to state 272
    TK_LESEQ  shift, and go to state 273
    KW_AND    shift, and go to state 274
    KW_OR     shift, and go to state 275
    '<'       shift, and go to state 276
    '>'       shift, and go to state 277
    '+'       shift, and go to state 278
    '-'       shift, and go to state 279
    '*'       shift, and go to state 280
    '/'       shift, and go to state 281
    '%'       shift, and go to state 282
    '.'       shift, and go to state 283
    ']'       shift, and go to state 393


State 384

   96 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 96 (if_statement)


State 385

   97 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 97 (if_statement)


State 386

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   95             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_WHILE     shift, and go to state 135
    KW_ENDIF     shift, and go to state 394
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 387

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' . ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  120                 | '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  121                 | '#' TK_IDENT '[' TK_CONSTINT ']' . ',' comp_multi_var_2

    ':'  shift, and go to state 395
    ','  shift, and go to state 304


State 388

  118 comp_multi_var_3: '#' TK_IDENT '[' ']' ',' '#' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 118 (comp_multi_var_3)


State 389

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 396


State 390

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT . KW_OF TK_CONSTINT ']' ':' data_type

    KW_OF  shift, and go to state 397


State 391

  104 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 104 (for_statement)


State 392

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  103              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 398
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 393

  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 399


State 394

   95 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 95 (if_statement)


State 395

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 400


State 396

  105 listCompr_with_int_values: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 105 (listCompr_with_int_values)


State 397

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF . TK_CONSTINT ']' ':' data_type

    TK_CONSTINT  shift, and go to state 401


State 398

  103 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 103 (for_statement)


State 399

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   65 statements: . statement
   66           | . statements statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  101              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  102              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 402
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statements                 go to state 403
    statement                  go to state 141
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 400

  120 comp_multi_var_2: '#' TK_IDENT '[' TK_CONSTINT ']' ',' '#' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 120 (comp_multi_var_2)


State 401

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT . ']' ':' data_type

    ']'  shift, and go to state 404


State 402

  102 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 102 (for_statement)


State 403

   25 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   26                       | . TK_IDENT '(' ')'
   66 statements: statements . statement
   67 statement: . fict_token '=' listofexpr ';'
   68          | . fict_token TK_PLUEQ expr ';'
   69          | . fict_token TK_MINEQ expr ';'
   70          | . fict_token TK_MULEQ expr ';'
   71          | . fict_token TK_MODEQ expr ';'
   72          | . fict_token TK_DIVEQ expr ';'
   73          | . fict_token TK_COLEQ expr ';'
   74          | . fict_token '.' function_call_no_assgn ';'
   75          | . fict_token '.' expr '=' listofexpr ';'
   76          | . function_call_no_assgn ';'
   77          | . if_statement ';'
   78          | . for_statement ';'
   79          | . while_statement ';'
   80          | . KW_BREAK ';'
   81          | . KW_CONTINUE ';'
   82          | . listCompr_with_int_values ';'
   83          | . listCompr_with_array ';'
   84          | . ';'
   85 fict_token: . TK_IDENT
   86           | . '#' TK_IDENT
   87           | . TK_IDENT '[' TK_CONSTINT ']'
   88           | . '#' TK_IDENT '[' TK_CONSTINT ']'
   89           | . TK_IDENT '[' TK_IDENT ']'
   90           | . '#' TK_IDENT '[' '#' TK_IDENT ']'
   91           | . '#' TK_IDENT '[' TK_IDENT ']'
   92           | . TK_IDENT '[' '#' TK_IDENT ']'
   93 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   94             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   95             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   96             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   97             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   98             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   99 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
  100                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
  101 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
  101              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
  102              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
  103              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
  104              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
  105 listCompr_with_int_values: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' TK_CONSTINT ']' ':' data_type
  106 listCompr_with_array: . TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type

    TK_IDENT     shift, and go to state 180
    KW_FOR       shift, and go to state 130
    KW_BREAK     shift, and go to state 131
    KW_CONTINUE  shift, and go to state 132
    KW_IF        shift, and go to state 134
    KW_ENDFOR    shift, and go to state 405
    KW_WHILE     shift, and go to state 135
    ';'          shift, and go to state 136
    '#'          shift, and go to state 137

    function_call_no_assgn     go to state 138
    statement                  go to state 181
    fict_token                 go to state 142
    if_statement               go to state 143
    while_statement            go to state 144
    for_statement              go to state 145
    listCompr_with_int_values  go to state 146
    listCompr_with_array       go to state 147


State 404

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' . ':' data_type

    ':'  shift, and go to state 406


State 405

  101 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 101 (for_statement)


State 406

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' . data_type
  151 data_type: . KW_INTEGER
  152          | . KW_SCALAR
  153          | . KW_STR
  154          | . KW_BOOLEAN
  155          | . TK_IDENT

    TK_IDENT    shift, and go to state 48
    KW_INTEGER  shift, and go to state 49
    KW_SCALAR   shift, and go to state 50
    KW_STR      shift, and go to state 51
    KW_BOOLEAN  shift, and go to state 52

    data_type  go to state 407


State 407

  106 listCompr_with_array: TK_IDENT TK_COLEQ '[' expr KW_FOR TK_IDENT ':' data_type KW_IN TK_IDENT KW_OF TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 106 (listCompr_with_array)
