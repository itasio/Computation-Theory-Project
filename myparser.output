Terminals unused in grammar

    KW_ENDCOMP
    KW_OF
    KW_COMP


State 163 conflicts: 1 shift/reduce
State 181 conflicts: 2 shift/reduce
State 224 conflicts: 2 shift/reduce


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | function_blocks main_block
    3        | var_declarations function_blocks main_block
    4        | const_declarations var_declarations function_blocks main_block

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'

    7 function_param_decl: %empty
    8                    | var_declaration
    9                    | function_param_decl ',' var_declaration

   10 function_return_type: TK_FUNC_RET KW_INTEGER
   11                     | TK_FUNC_RET KW_SCALAR
   12                     | TK_FUNC_RET KW_STR
   13                     | TK_FUNC_RET KW_BOOLEAN

   14 function_blocks: function_block ';'
   15                | function_blocks function_block ';'

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

   21 function_call_no_assgn: TK_IDENT '(' func_param_call ')'
   22                       | TK_IDENT '(' ')'

   23 func_param_call: expr
   24                | func_param_call ',' expr

   25 listofexpr: expr
   26           | listofexpr expr

   27 expr: TK_CONSTINT
   28     | TK_CONSTFLOAT
   29     | TK_IDENT
   30     | TK_CONSTSTR
   31     | KW_FALSE
   32     | KW_TRUE
   33     | expr KW_OR expr
   34     | expr KW_AND expr
   35     | KW_NOT expr
   36     | expr TK_NOTEQ expr
   37     | expr TK_EQEQ expr
   38     | expr TK_LESEQ expr
   39     | expr TK_GREEQ expr
   40     | expr '<' expr
   41     | expr '>' expr
   42     | expr '+' expr
   43     | expr '-' expr
   44     | expr '*' expr
   45     | expr '/' expr
   46     | expr '%' expr
   47     | expr TK_POW expr
   48     | '-' expr
   49     | '+' expr
   50     | '(' expr ')'
   51     | TK_IDENT '[' expr ']'
   52     | expr '.' expr
   53     | function_call_no_assgn

   54 listofinstructions: var_declarations const_declarations statements
   55                   | const_declarations var_declarations statements
   56                   | statements
   57                   | var_declarations statements
   58                   | const_declarations statements

   59 statements: statement
   60           | statements statement

   61 statement: TK_IDENT '=' listofexpr ';'
   62          | TK_IDENT TK_PLUEQ expr ';'
   63          | TK_IDENT TK_MINEQ expr ';'
   64          | TK_IDENT TK_MULEQ expr ';'
   65          | TK_IDENT TK_MODEQ expr ';'
   66          | TK_IDENT TK_DIVEQ expr ';'
   67          | TK_IDENT TK_COLEQ expr ';'
   68          | if_statement ';'
   69          | for_statement ';'
   70          | while_statement ';'
   71          | KW_BREAK ';'
   72          | KW_CONTINUE ';'
   73          | function_call_no_assgn ';'
   74          | ';'

   75 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

   81 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE

   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

   87 const_declarations: const_declaration ';'
   88                   | const_declarations const_declaration ';'

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

   98 var_declarations: var_declaration ';'
   99                 | var_declarations var_declaration ';'

  100 var_declaration: one_var
  101                | multi_var

  102 one_var: TK_IDENT ':' data_type
  103        | TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | TK_IDENT '[' ']' ':' data_type

  105 multi_var: multi_var_1
  106          | multi_var_2
  107          | multi_var_3

  108 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | TK_IDENT '[' ']' ',' multi_var_3

  110 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2

  112 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type
  113            | TK_IDENT ',' multi_var_1

  114 data_type: KW_INTEGER
  115          | KW_SCALAR
  116          | KW_STR
  117          | KW_BOOLEAN


Terminals, with rules where they appear

    $end (0) 0
    '%' (37) 46
    '(' (40) 5 6 16 17 18 19 20 21 22 50 75 76 77 78 79 80 81 82
    ')' (41) 5 6 16 17 18 19 20 21 22 50 75 76 77 78 79 80 81 82
    '*' (42) 44
    '+' (43) 42 49 90 93
    ',' (44) 9 24 108 109 110 111 112 113
    '-' (45) 43 48 91 94
    '.' (46) 52
    '/' (47) 45
    ':' (58) 5 6 16 17 18 19 20 75 76 77 78 79 80 81 82 83 84 85 86 89 90 91 92 93 94 95 96 97 102 103 104 108 110 112
    ';' (59) 5 6 14 15 17 18 19 20 61 62 63 64 65 66 67 68 69 70 71 72 73 74 87 88 98 99
    '<' (60) 40
    '=' (61) 61 89 90 91 92 93 94 95 96 97
    '>' (62) 41
    '[' (91) 51 83 84 85 86 103 104 108 109 110 111
    ']' (93) 51 83 84 85 86 103 104 108 109 110 111
    error (256)
    TK_IDENT <str> (258) 16 17 18 19 20 21 22 29 51 61 62 63 64 65 66 67 83 84 85 86 89 90 91 92 93 94 95 96 97 102 103 104 108 109 110 111 112 113
    TK_CONSTINT <str> (259) 27 92 93 94 103 110 111
    TK_CONSTFLOAT <str> (260) 28 89 90 91
    TK_CONSTSTR <str> (261) 30 95
    TK_POW (262) 47
    TK_PLUEQ (263) 62
    TK_MINEQ (264) 63
    TK_MULEQ (265) 64
    TK_DIVEQ (266) 66
    TK_MODEQ (267) 65
    TK_EQEQ (268) 37
    TK_NOTEQ (269) 36
    TK_GREEQ (270) 39
    TK_LESEQ (271) 38
    TK_COLEQ (272) 67
    TK_FUNC_RET (273) 10 11 12 13
    KW_AND (274) 34
    KW_OR (275) 33
    KW_NOT (276) 35
    KW_INTEGER (277) 10 92 93 94 114
    KW_FOR (278) 83 84 85 86
    KW_BREAK (279) 71
    KW_DEF (280) 5 6 16 17 18 19 20
    KW_ENDCOMP (281)
    KW_SCALAR (282) 11 89 90 91 115
    KW_CONST (283) 89 90 91 92 93 94 95 96 97
    KW_IN (284) 83 84 85 86
    KW_CONTINUE (285) 72
    KW_ENDDEF (286) 5 6 16 17 18 19 20
    KW_OF (287)
    KW_STR (288) 12 95 116
    KW_IF (289) 75 76 77 78 79 80
    KW_ENDFOR (290) 83 84 85 86
    KW_MAIN (291) 5 6
    KW_BOOLEAN (292) 13 96 97 117
    KW_ELSE (293) 77 78 79 80
    KW_WHILE (294) 81 82
    KW_RETURN (295) 17 18 19 20
    KW_ENDIF (296) 75 76 77 78 79 80
    KW_ENDWHILE (297) 81 82
    KW_COMP (298)
    KW_TRUE (299) 32 96
    KW_FALSE (300) 31 97
    UMINUS (301)
    UPLUS (302)


Nonterminals, with rules where they appear

    $accept (64)
        on left: 0
    program (65)
        on left: 1 2 3 4
        on right: 0
    main_block <str> (66)
        on left: 5 6
        on right: 1 2 3 4
    function_param_decl <str> (67)
        on left: 7 8 9
        on right: 9 16 17 18 19 20
    function_return_type <str> (68)
        on left: 10 11 12 13
        on right: 19 20
    function_blocks <str> (69)
        on left: 14 15
        on right: 2 3 4 15
    function_block <str> (70)
        on left: 16 17 18 19 20
        on right: 14 15
    function_call_no_assgn <str> (71)
        on left: 21 22
        on right: 53 73
    func_param_call <str> (72)
        on left: 23 24
        on right: 21 24
    listofexpr <str> (73)
        on left: 25 26
        on right: 26 61 75 76 77 78 79 80 81 82
    expr <str> (74)
        on left: 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53
        on right: 19 20 23 24 25 26 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 62 63 64 65 66 67 83 84 85 86
    listofinstructions <str> (75)
        on left: 54 55 56 57 58
        on right: 6 16 17 19
    statements <str> (76)
        on left: 59 60
        on right: 54 55 56 57 58 60 75 77 78 79 81 83 85
    statement <str> (77)
        on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74
        on right: 59 60
    if_statement <str> (78)
        on left: 75 76 77 78 79 80
        on right: 68
    while_statement <str> (79)
        on left: 81 82
        on right: 70
    for_statement <str> (80)
        on left: 83 84 85 86
        on right: 69
    const_declarations <str> (81)
        on left: 87 88
        on right: 4 54 55 58 88
    const_declaration <str> (82)
        on left: 89 90 91 92 93 94 95 96 97
        on right: 87 88
    var_declarations <str> (83)
        on left: 98 99
        on right: 3 4 54 55 57 99
    var_declaration <str> (84)
        on left: 100 101
        on right: 8 9 98 99
    one_var <str> (85)
        on left: 102 103 104
        on right: 100
    multi_var <str> (86)
        on left: 105 106 107
        on right: 101
    multi_var_3 <str> (87)
        on left: 108 109
        on right: 107 109
    multi_var_2 <str> (88)
        on left: 110 111
        on right: 106 111
    multi_var_1 <str> (89)
        on left: 112 113
        on right: 105 113
    data_type <str> (90)
        on left: 114 115 116 117
        on right: 102 103 104 108 110 112


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . function_blocks main_block
    3        | . var_declarations function_blocks main_block
    4        | . const_declarations var_declarations function_blocks main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   87 const_declarations: . const_declaration ';'
   88                   | . const_declarations const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 2
    KW_CONST  shift, and go to state 3

    program             go to state 4
    main_block          go to state 5
    function_blocks     go to state 6
    function_block      go to state 7
    const_declarations  go to state 8
    const_declaration   go to state 9
    var_declarations    go to state 10
    var_declaration     go to state 11
    one_var             go to state 12
    multi_var           go to state 13
    multi_var_3         go to state 14
    multi_var_2         go to state 15
    multi_var_1         go to state 16


State 1

  102 one_var: TK_IDENT . ':' data_type
  103        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  104        | TK_IDENT . '[' ']' ':' data_type
  108 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | TK_IDENT . '[' ']' ',' multi_var_3
  110 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  113            | TK_IDENT . ',' multi_var_1

    '['  shift, and go to state 17
    ':'  shift, and go to state 18
    ','  shift, and go to state 19


State 2

    5 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF . KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   16 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 20
    KW_MAIN   shift, and go to state 21


State 3

   89 const_declaration: KW_CONST . TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | KW_CONST . TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | KW_CONST . TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | KW_CONST . TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | KW_CONST . TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | KW_CONST . TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | KW_CONST . TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT  shift, and go to state 22


State 4

    0 $accept: program . $end

    $end  shift, and go to state 23


State 5

    1 program: main_block .

    $default  reduce using rule 1 (program)


State 6

    2 program: function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 24
    function_block  go to state 25


State 7

   14 function_blocks: function_block . ';'

    ';'  shift, and go to state 26


State 8

    4 program: const_declarations . var_declarations function_blocks main_block
   88 const_declarations: const_declarations . const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_CONST  shift, and go to state 3

    const_declaration  go to state 27
    var_declarations   go to state 28
    var_declaration    go to state 11
    one_var            go to state 12
    multi_var          go to state 13
    multi_var_3        go to state 14
    multi_var_2        go to state 15
    multi_var_1        go to state 16


State 9

   87 const_declarations: const_declaration . ';'

    ';'  shift, and go to state 29


State 10

    3 program: var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   99 var_declarations: var_declarations . var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 30

    function_blocks  go to state 31
    function_block   go to state 7
    var_declaration  go to state 32
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 11

   98 var_declarations: var_declaration . ';'

    ';'  shift, and go to state 33


State 12

  100 var_declaration: one_var .

    $default  reduce using rule 100 (var_declaration)


State 13

  101 var_declaration: multi_var .

    $default  reduce using rule 101 (var_declaration)


State 14

  107 multi_var: multi_var_3 .

    $default  reduce using rule 107 (multi_var)


State 15

  106 multi_var: multi_var_2 .

    $default  reduce using rule 106 (multi_var)


State 16

  105 multi_var: multi_var_1 .

    $default  reduce using rule 105 (multi_var)


State 17

  103 one_var: TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  104        | TK_IDENT '[' . ']' ':' data_type
  108 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | TK_IDENT '[' . ']' ',' multi_var_3
  110 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 34
    ']'          shift, and go to state 35


State 18

  102 one_var: TK_IDENT ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 40


State 19

  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  112            | TK_IDENT ',' . TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1
  113            | TK_IDENT ',' . multi_var_1

    TK_IDENT  shift, and go to state 41

    multi_var_1  go to state 42


State 20

   16 function_block: KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT . '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT . '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    '('  shift, and go to state 43


State 21

    5 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN . '(' ')' ':' listofinstructions KW_ENDDEF ';'

    '('  shift, and go to state 44


State 22

   89 const_declaration: KW_CONST TK_IDENT . '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | KW_CONST TK_IDENT . '=' TK_CONSTINT ':' KW_INTEGER
   93                  | KW_CONST TK_IDENT . '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | KW_CONST TK_IDENT . '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | KW_CONST TK_IDENT . '=' TK_CONSTSTR ':' KW_STR
   96                  | KW_CONST TK_IDENT . '=' KW_TRUE ':' KW_BOOLEAN
   97                  | KW_CONST TK_IDENT . '=' KW_FALSE ':' KW_BOOLEAN

    '='  shift, and go to state 45


State 23

    0 $accept: program $end .

    $default  accept


State 24

    2 program: function_blocks main_block .

    $default  reduce using rule 2 (program)


State 25

   15 function_blocks: function_blocks function_block . ';'

    ';'  shift, and go to state 46


State 26

   14 function_blocks: function_block ';' .

    $default  reduce using rule 14 (function_blocks)


State 27

   88 const_declarations: const_declarations const_declaration . ';'

    ';'  shift, and go to state 47


State 28

    4 program: const_declarations var_declarations . function_blocks main_block
   14 function_blocks: . function_block ';'
   15                | . function_blocks function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
   99 var_declarations: var_declarations . var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1
    KW_DEF    shift, and go to state 30

    function_blocks  go to state 48
    function_block   go to state 7
    var_declaration  go to state 32
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 29

   87 const_declarations: const_declaration ';' .

    $default  reduce using rule 87 (const_declarations)


State 30

   16 function_block: KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF . TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF . TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_IDENT  shift, and go to state 20


State 31

    3 program: var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 49
    function_block  go to state 25


State 32

   99 var_declarations: var_declarations var_declaration . ';'

    ';'  shift, and go to state 50


State 33

   98 var_declarations: var_declaration ';' .

    $default  reduce using rule 98 (var_declarations)


State 34

  103 one_var: TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  110 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 51


State 35

  104 one_var: TK_IDENT '[' ']' . ':' data_type
  108 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  109            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 52
    ','  shift, and go to state 53


State 36

  114 data_type: KW_INTEGER .

    $default  reduce using rule 114 (data_type)


State 37

  115 data_type: KW_SCALAR .

    $default  reduce using rule 115 (data_type)


State 38

  116 data_type: KW_STR .

    $default  reduce using rule 116 (data_type)


State 39

  117 data_type: KW_BOOLEAN .

    $default  reduce using rule 117 (data_type)


State 40

  102 one_var: TK_IDENT ':' data_type .

    $default  reduce using rule 102 (one_var)


State 41

  112 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  112            | TK_IDENT ',' TK_IDENT . ':' data_type
  113            | TK_IDENT . ',' multi_var_1

    ':'  shift, and go to state 54
    ','  shift, and go to state 19


State 42

  113 multi_var_1: TK_IDENT ',' multi_var_1 .

    $default  reduce using rule 113 (multi_var_1)


State 43

    7 function_param_decl: . %empty  [')', ',']
    8                    | . var_declaration
    9                    | . function_param_decl ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' . function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' . function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    $default  reduce using rule 7 (function_param_decl)

    function_param_decl  go to state 55
    var_declaration      go to state 56
    one_var              go to state 12
    multi_var            go to state 13
    multi_var_3          go to state 14
    multi_var_2          go to state 15
    multi_var_1          go to state 16


State 44

    5 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' . ')' ':' listofinstructions KW_ENDDEF ';'

    ')'  shift, and go to state 57


State 45

   89 const_declaration: KW_CONST TK_IDENT '=' . TK_CONSTFLOAT ':' KW_SCALAR
   90                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | KW_CONST TK_IDENT '=' . TK_CONSTINT ':' KW_INTEGER
   93                  | KW_CONST TK_IDENT '=' . '+' TK_CONSTINT ':' KW_INTEGER
   94                  | KW_CONST TK_IDENT '=' . '-' TK_CONSTINT ':' KW_INTEGER
   95                  | KW_CONST TK_IDENT '=' . TK_CONSTSTR ':' KW_STR
   96                  | KW_CONST TK_IDENT '=' . KW_TRUE ':' KW_BOOLEAN
   97                  | KW_CONST TK_IDENT '=' . KW_FALSE ':' KW_BOOLEAN

    TK_CONSTINT    shift, and go to state 58
    TK_CONSTFLOAT  shift, and go to state 59
    TK_CONSTSTR    shift, and go to state 60
    KW_TRUE        shift, and go to state 61
    KW_FALSE       shift, and go to state 62
    '+'            shift, and go to state 63
    '-'            shift, and go to state 64


State 46

   15 function_blocks: function_blocks function_block ';' .

    $default  reduce using rule 15 (function_blocks)


State 47

   88 const_declarations: const_declarations const_declaration ';' .

    $default  reduce using rule 88 (const_declarations)


State 48

    4 program: const_declarations var_declarations function_blocks . main_block
    5 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    6           | . KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';'
   15 function_blocks: function_blocks . function_block ';'
   16 function_block: . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF
   17               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | . KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | . KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    KW_DEF  shift, and go to state 2

    main_block      go to state 65
    function_block  go to state 25


State 49

    3 program: var_declarations function_blocks main_block .

    $default  reduce using rule 3 (program)


State 50

   99 var_declarations: var_declarations var_declaration ';' .

    $default  reduce using rule 99 (var_declarations)


State 51

  103 one_var: TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  110 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 66
    ','  shift, and go to state 67


State 52

  104 one_var: TK_IDENT '[' ']' ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 68


State 53

  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  108            | TK_IDENT '[' ']' ',' . TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  109            | TK_IDENT '[' ']' ',' . multi_var_3

    TK_IDENT  shift, and go to state 69

    multi_var_3  go to state 70


State 54

  112 multi_var_1: TK_IDENT ',' TK_IDENT ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 71


State 55

    9 function_param_decl: function_param_decl . ',' var_declaration
   16 function_block: KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl . ')' ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl . ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    ')'  shift, and go to state 72
    ','  shift, and go to state 73


State 56

    8 function_param_decl: var_declaration .

    $default  reduce using rule 8 (function_param_decl)


State 57

    5 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' . ':' listofinstructions KW_ENDDEF ';'

    ':'  shift, and go to state 74


State 58

   92 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 75


State 59

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 76


State 60

   95 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR . ':' KW_STR

    ':'  shift, and go to state 77


State 61

   96 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE . ':' KW_BOOLEAN

    ':'  shift, and go to state 78


State 62

   97 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE . ':' KW_BOOLEAN

    ':'  shift, and go to state 79


State 63

   90 const_declaration: KW_CONST TK_IDENT '=' '+' . TK_CONSTFLOAT ':' KW_SCALAR
   93                  | KW_CONST TK_IDENT '=' '+' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 80
    TK_CONSTFLOAT  shift, and go to state 81


State 64

   91 const_declaration: KW_CONST TK_IDENT '=' '-' . TK_CONSTFLOAT ':' KW_SCALAR
   94                  | KW_CONST TK_IDENT '=' '-' . TK_CONSTINT ':' KW_INTEGER

    TK_CONSTINT    shift, and go to state 82
    TK_CONSTFLOAT  shift, and go to state 83


State 65

    4 program: const_declarations var_declarations function_blocks main_block .

    $default  reduce using rule 4 (program)


State 66

  103 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 84


State 67

  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  110            | TK_IDENT '[' TK_CONSTINT ']' ',' . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  111            | TK_IDENT '[' TK_CONSTINT ']' ',' . multi_var_2

    TK_IDENT  shift, and go to state 85

    multi_var_2  go to state 86


State 68

  104 one_var: TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 104 (one_var)


State 69

  108 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  108            | TK_IDENT '[' ']' ',' TK_IDENT . '[' ']' ':' data_type
  109            | TK_IDENT . '[' ']' ',' multi_var_3

    '['  shift, and go to state 87


State 70

  109 multi_var_3: TK_IDENT '[' ']' ',' multi_var_3 .

    $default  reduce using rule 109 (multi_var_3)


State 71

  112 multi_var_1: TK_IDENT ',' TK_IDENT ':' data_type .

    $default  reduce using rule 112 (multi_var_1)


State 72

   10 function_return_type: . TK_FUNC_RET KW_INTEGER
   11                     | . TK_FUNC_RET KW_SCALAR
   12                     | . TK_FUNC_RET KW_STR
   13                     | . TK_FUNC_RET KW_BOOLEAN
   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' . ':' KW_RETURN ';' KW_ENDDEF
   19               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' . function_return_type ':' KW_RETURN expr ';' KW_ENDDEF

    TK_FUNC_RET  shift, and go to state 88
    ':'          shift, and go to state 89

    function_return_type  go to state 90


State 73

    9 function_param_decl: function_param_decl ',' . var_declaration
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT  shift, and go to state 1

    var_declaration  go to state 91
    one_var          go to state 12
    multi_var        go to state 13
    multi_var_3      go to state 14
    multi_var_2      go to state 15
    multi_var_1      go to state 16


State 74

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    6           | KW_DEF KW_MAIN '(' ')' ':' . listofinstructions KW_ENDDEF ';'
   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: . var_declarations const_declarations statements
   55                   | . const_declarations var_declarations statements
   56                   | . statements
   57                   | . var_declarations statements
   58                   | . const_declarations statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   87 const_declarations: . const_declaration ';'
   88                   | . const_declarations const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_ENDDEF    shift, and go to state 96
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    listofinstructions      go to state 101
    statements              go to state 102
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declarations      go to state 107
    const_declaration       go to state 9
    var_declarations        go to state 108
    var_declaration         go to state 11
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 75

   92 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 109


State 76

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 110


State 77

   95 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' . KW_STR

    KW_STR  shift, and go to state 111


State 78

   96 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 112


State 79

   97 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' . KW_BOOLEAN

    KW_BOOLEAN  shift, and go to state 113


State 80

   93 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 114


State 81

   90 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 115


State 82

   94 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT . ':' KW_INTEGER

    ':'  shift, and go to state 116


State 83

   91 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT . ':' KW_SCALAR

    ':'  shift, and go to state 117


State 84

  103 one_var: TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 103 (one_var)


State 85

  110 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  110            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2

    '['  shift, and go to state 118


State 86

  111 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2 .

    $default  reduce using rule 111 (multi_var_2)


State 87

  108 multi_var_3: TK_IDENT '[' . ']' ',' TK_IDENT '[' ']' ':' data_type
  108            | TK_IDENT '[' ']' ',' TK_IDENT '[' . ']' ':' data_type
  109            | TK_IDENT '[' . ']' ',' multi_var_3

    ']'  shift, and go to state 119


State 88

   10 function_return_type: TK_FUNC_RET . KW_INTEGER
   11                     | TK_FUNC_RET . KW_SCALAR
   12                     | TK_FUNC_RET . KW_STR
   13                     | TK_FUNC_RET . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 120
    KW_SCALAR   shift, and go to state 121
    KW_STR      shift, and go to state 122
    KW_BOOLEAN  shift, and go to state 123


State 89

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . listofinstructions KW_RETURN ';' KW_ENDDEF
   18               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' . KW_RETURN ';' KW_ENDDEF
   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: . var_declarations const_declarations statements
   55                   | . const_declarations var_declarations statements
   56                   | . statements
   57                   | . var_declarations statements
   58                   | . const_declarations statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   87 const_declarations: . const_declaration ';'
   88                   | . const_declarations const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_RETURN    shift, and go to state 124
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    listofinstructions      go to state 125
    statements              go to state 102
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declarations      go to state 107
    const_declaration       go to state 9
    var_declarations        go to state 108
    var_declaration         go to state 11
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 90

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type . ':' KW_RETURN expr ';' KW_ENDDEF

    ':'  shift, and go to state 126


State 91

    9 function_param_decl: function_param_decl ',' var_declaration .

    $default  reduce using rule 9 (function_param_decl)


State 92

   21 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   22                       | TK_IDENT . '(' ')'
   61 statement: TK_IDENT . '=' listofexpr ';'
   62          | TK_IDENT . TK_PLUEQ expr ';'
   63          | TK_IDENT . TK_MINEQ expr ';'
   64          | TK_IDENT . TK_MULEQ expr ';'
   65          | TK_IDENT . TK_MODEQ expr ';'
   66          | TK_IDENT . TK_DIVEQ expr ';'
   67          | TK_IDENT . TK_COLEQ expr ';'
  102 one_var: TK_IDENT . ':' data_type
  103        | TK_IDENT . '[' TK_CONSTINT ']' ':' data_type
  104        | TK_IDENT . '[' ']' ':' data_type
  108 multi_var_3: TK_IDENT . '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | TK_IDENT . '[' ']' ',' multi_var_3
  110 multi_var_2: TK_IDENT . '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT . '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: TK_IDENT . ',' TK_IDENT ':' data_type
  113            | TK_IDENT . ',' multi_var_1

    TK_PLUEQ  shift, and go to state 127
    TK_MINEQ  shift, and go to state 128
    TK_MULEQ  shift, and go to state 129
    TK_DIVEQ  shift, and go to state 130
    TK_MODEQ  shift, and go to state 131
    TK_COLEQ  shift, and go to state 132
    '='       shift, and go to state 133
    '('       shift, and go to state 134
    '['       shift, and go to state 17
    ':'       shift, and go to state 18
    ','       shift, and go to state 19


State 93

   83 for_statement: KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR . TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT  shift, and go to state 135


State 94

   71 statement: KW_BREAK . ';'

    ';'  shift, and go to state 136


State 95

   72 statement: KW_CONTINUE . ';'

    ';'  shift, and go to state 137


State 96

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 138


State 97

   75 if_statement: KW_IF . '(' listofexpr ')' ':' statements KW_ENDIF
   76             | KW_IF . '(' listofexpr ')' ':' KW_ENDIF
   77             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | KW_IF . '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | KW_IF . '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    '('  shift, and go to state 139


State 98

   81 while_statement: KW_WHILE . '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | KW_WHILE . '(' listofexpr ')' ':' KW_ENDWHILE

    '('  shift, and go to state 140


State 99

   74 statement: ';' .

    $default  reduce using rule 74 (statement)


State 100

   73 statement: function_call_no_assgn . ';'

    ';'  shift, and go to state 141


State 101

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 142


State 102

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   56 listofinstructions: statements .  [KW_ENDDEF, KW_RETURN]
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    $default  reduce using rule 56 (listofinstructions)

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 103

   59 statements: statement .

    $default  reduce using rule 59 (statements)


State 104

   68 statement: if_statement . ';'

    ';'  shift, and go to state 145


State 105

   70 statement: while_statement . ';'

    ';'  shift, and go to state 146


State 106

   69 statement: for_statement . ';'

    ';'  shift, and go to state 147


State 107

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   55 listofinstructions: const_declarations . var_declarations statements
   58                   | const_declarations . statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   88 const_declarations: const_declarations . const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 148
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declaration       go to state 27
    var_declarations        go to state 149
    var_declaration         go to state 11
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 108

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: var_declarations . const_declarations statements
   57                   | var_declarations . statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   87 const_declarations: . const_declaration ';'
   88                   | . const_declarations const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   99 var_declarations: var_declarations . var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 150
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declarations      go to state 151
    const_declaration       go to state 9
    var_declaration         go to state 32
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 109

   92 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 92 (const_declaration)


State 110

   89 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 89 (const_declaration)


State 111

   95 const_declaration: KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR .

    $default  reduce using rule 95 (const_declaration)


State 112

   96 const_declaration: KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN .

    $default  reduce using rule 96 (const_declaration)


State 113

   97 const_declaration: KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN .

    $default  reduce using rule 97 (const_declaration)


State 114

   93 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 152


State 115

   90 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 153


State 116

   94 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' . KW_INTEGER

    KW_INTEGER  shift, and go to state 154


State 117

   91 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' . KW_SCALAR

    KW_SCALAR  shift, and go to state 155


State 118

  110 multi_var_2: TK_IDENT '[' . TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  110            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' . TK_CONSTINT ']' ':' data_type
  111            | TK_IDENT '[' . TK_CONSTINT ']' ',' multi_var_2

    TK_CONSTINT  shift, and go to state 156


State 119

  108 multi_var_3: TK_IDENT '[' ']' . ',' TK_IDENT '[' ']' ':' data_type
  108            | TK_IDENT '[' ']' ',' TK_IDENT '[' ']' . ':' data_type
  109            | TK_IDENT '[' ']' . ',' multi_var_3

    ':'  shift, and go to state 157
    ','  shift, and go to state 53


State 120

   10 function_return_type: TK_FUNC_RET KW_INTEGER .

    $default  reduce using rule 10 (function_return_type)


State 121

   11 function_return_type: TK_FUNC_RET KW_SCALAR .

    $default  reduce using rule 11 (function_return_type)


State 122

   12 function_return_type: TK_FUNC_RET KW_STR .

    $default  reduce using rule 12 (function_return_type)


State 123

   13 function_return_type: TK_FUNC_RET KW_BOOLEAN .

    $default  reduce using rule 13 (function_return_type)


State 124

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 158


State 125

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_ENDDEF
   17               | KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions . KW_RETURN ';' KW_ENDDEF

    KW_ENDDEF  shift, and go to state 159
    KW_RETURN  shift, and go to state 160


State 126

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . listofinstructions KW_RETURN expr ';' KW_ENDDEF
   20               | KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' . KW_RETURN expr ';' KW_ENDDEF
   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: . var_declarations const_declarations statements
   55                   | . const_declarations var_declarations statements
   56                   | . statements
   57                   | . var_declarations statements
   58                   | . const_declarations statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   87 const_declarations: . const_declaration ';'
   88                   | . const_declarations const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN
   98 var_declarations: . var_declaration ';'
   99                 | . var_declarations var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_RETURN    shift, and go to state 161
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    listofinstructions      go to state 162
    statements              go to state 102
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declarations      go to state 107
    const_declaration       go to state 9
    var_declarations        go to state 108
    var_declaration         go to state 11
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 127

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   62 statement: TK_IDENT TK_PLUEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 174


State 128

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   63 statement: TK_IDENT TK_MINEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 175


State 129

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   64 statement: TK_IDENT TK_MULEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 176


State 130

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   66 statement: TK_IDENT TK_DIVEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 177


State 131

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   65 statement: TK_IDENT TK_MODEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 178


State 132

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   67 statement: TK_IDENT TK_COLEQ . expr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 179


State 133

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   25 listofexpr: . expr
   26           | . listofexpr expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   61 statement: TK_IDENT '=' . listofexpr ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    listofexpr              go to state 180
    expr                    go to state 181


State 134

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   21                       | TK_IDENT '(' . func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   22                       | TK_IDENT '(' . ')'
   23 func_param_call: . expr
   24                | . func_param_call ',' expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172
    ')'            shift, and go to state 182

    function_call_no_assgn  go to state 173
    func_param_call         go to state 183
    expr                    go to state 184


State 135

   83 for_statement: KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT . KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    KW_IN  shift, and go to state 185


State 136

   71 statement: KW_BREAK ';' .

    $default  reduce using rule 71 (statement)


State 137

   72 statement: KW_CONTINUE ';' .

    $default  reduce using rule 72 (statement)


State 138

    5 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 5 (main_block)


State 139

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   25 listofexpr: . expr
   26           | . listofexpr expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   75 if_statement: KW_IF '(' . listofexpr ')' ':' statements KW_ENDIF
   76             | KW_IF '(' . listofexpr ')' ':' KW_ENDIF
   77             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | KW_IF '(' . listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' . listofexpr ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    listofexpr              go to state 186
    expr                    go to state 181


State 140

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   25 listofexpr: . expr
   26           | . listofexpr expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   81 while_statement: KW_WHILE '(' . listofexpr ')' ':' statements KW_ENDWHILE
   82                | KW_WHILE '(' . listofexpr ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    listofexpr              go to state 187
    expr                    go to state 181


State 141

   73 statement: function_call_no_assgn ';' .

    $default  reduce using rule 73 (statement)


State 142

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF . ';'

    ';'  shift, and go to state 188


State 143

   21 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   22                       | TK_IDENT . '(' ')'
   61 statement: TK_IDENT . '=' listofexpr ';'
   62          | TK_IDENT . TK_PLUEQ expr ';'
   63          | TK_IDENT . TK_MINEQ expr ';'
   64          | TK_IDENT . TK_MULEQ expr ';'
   65          | TK_IDENT . TK_MODEQ expr ';'
   66          | TK_IDENT . TK_DIVEQ expr ';'
   67          | TK_IDENT . TK_COLEQ expr ';'

    TK_PLUEQ  shift, and go to state 127
    TK_MINEQ  shift, and go to state 128
    TK_MULEQ  shift, and go to state 129
    TK_DIVEQ  shift, and go to state 130
    TK_MODEQ  shift, and go to state 131
    TK_COLEQ  shift, and go to state 132
    '='       shift, and go to state 133
    '('       shift, and go to state 134


State 144

   60 statements: statements statement .

    $default  reduce using rule 60 (statements)


State 145

   68 statement: if_statement ';' .

    $default  reduce using rule 68 (statement)


State 146

   70 statement: while_statement ';' .

    $default  reduce using rule 70 (statement)


State 147

   69 statement: for_statement ';' .

    $default  reduce using rule 69 (statement)


State 148

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   58 listofinstructions: const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    $default  reduce using rule 58 (listofinstructions)

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 149

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   55 listofinstructions: const_declarations var_declarations . statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   99 var_declarations: var_declarations . var_declaration ';'
  100 var_declaration: . one_var
  101                | . multi_var
  102 one_var: . TK_IDENT ':' data_type
  103        | . TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  104        | . TK_IDENT '[' ']' ':' data_type
  105 multi_var: . multi_var_1
  106          | . multi_var_2
  107          | . multi_var_3
  108 multi_var_3: . TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type
  109            | . TK_IDENT '[' ']' ',' multi_var_3
  110 multi_var_2: . TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  111            | . TK_IDENT '[' TK_CONSTINT ']' ',' multi_var_2
  112 multi_var_1: . TK_IDENT ',' TK_IDENT ':' data_type
  113            | . TK_IDENT ',' multi_var_1

    TK_IDENT     shift, and go to state 92
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 189
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    var_declaration         go to state 32
    one_var                 go to state 12
    multi_var               go to state 13
    multi_var_3             go to state 14
    multi_var_2             go to state 15
    multi_var_1             go to state 16


State 150

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   57 listofinstructions: var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    $default  reduce using rule 57 (listofinstructions)

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 151

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: var_declarations const_declarations . statements
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   88 const_declarations: const_declarations . const_declaration ';'
   89 const_declaration: . KW_CONST TK_IDENT '=' TK_CONSTFLOAT ':' KW_SCALAR
   90                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR
   91                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR
   92                  | . KW_CONST TK_IDENT '=' TK_CONSTINT ':' KW_INTEGER
   93                  | . KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER
   94                  | . KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER
   95                  | . KW_CONST TK_IDENT '=' TK_CONSTSTR ':' KW_STR
   96                  | . KW_CONST TK_IDENT '=' KW_TRUE ':' KW_BOOLEAN
   97                  | . KW_CONST TK_IDENT '=' KW_FALSE ':' KW_BOOLEAN

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONST     shift, and go to state 3
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 190
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106
    const_declaration       go to state 27


State 152

   93 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 93 (const_declaration)


State 153

   90 const_declaration: KW_CONST TK_IDENT '=' '+' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 90 (const_declaration)


State 154

   94 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTINT ':' KW_INTEGER .

    $default  reduce using rule 94 (const_declaration)


State 155

   91 const_declaration: KW_CONST TK_IDENT '=' '-' TK_CONSTFLOAT ':' KW_SCALAR .

    $default  reduce using rule 91 (const_declaration)


State 156

  110 multi_var_2: TK_IDENT '[' TK_CONSTINT . ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  110            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT . ']' ':' data_type
  111            | TK_IDENT '[' TK_CONSTINT . ']' ',' multi_var_2

    ']'  shift, and go to state 191


State 157

  108 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 192


State 158

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 193


State 159

   16 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_ENDDEF .

    $default  reduce using rule 16 (function_block)


State 160

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN . ';' KW_ENDDEF

    ';'  shift, and go to state 194


State 161

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN . expr ';' KW_ENDDEF
   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 195


State 162

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions . KW_RETURN expr ';' KW_ENDDEF

    KW_RETURN  shift, and go to state 196


State 163

   21 function_call_no_assgn: TK_IDENT . '(' func_param_call ')'
   22                       | TK_IDENT . '(' ')'
   29 expr: TK_IDENT .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']
   51     | TK_IDENT . '[' expr ']'

    '('  shift, and go to state 134
    '['  shift, and go to state 197

    '('       [reduce using rule 29 (expr)]
    $default  reduce using rule 29 (expr)


State 164

   27 expr: TK_CONSTINT .

    $default  reduce using rule 27 (expr)


State 165

   28 expr: TK_CONSTFLOAT .

    $default  reduce using rule 28 (expr)


State 166

   30 expr: TK_CONSTSTR .

    $default  reduce using rule 30 (expr)


State 167

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   35     | KW_NOT . expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 198


State 168

   32 expr: KW_TRUE .

    $default  reduce using rule 32 (expr)


State 169

   31 expr: KW_FALSE .

    $default  reduce using rule 31 (expr)


State 170

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   49     | '+' . expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 199


State 171

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   48     | '-' . expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 200


State 172

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   50     | '(' . expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 201


State 173

   53 expr: function_call_no_assgn .

    $default  reduce using rule 53 (expr)


State 174

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   62 statement: TK_IDENT TK_PLUEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 217


State 175

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   63 statement: TK_IDENT TK_MINEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 218


State 176

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   64 statement: TK_IDENT TK_MULEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 219


State 177

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   66 statement: TK_IDENT TK_DIVEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 220


State 178

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   65 statement: TK_IDENT TK_MODEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 221


State 179

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   67 statement: TK_IDENT TK_COLEQ expr . ';'

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 222


State 180

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   26 listofexpr: listofexpr . expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   61 statement: TK_IDENT '=' listofexpr . ';'

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172
    ';'            shift, and go to state 223

    function_call_no_assgn  go to state 173
    expr                    go to state 224


State 181

   25 listofexpr: expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';']
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    '+'       [reduce using rule 25 (listofexpr)]
    '-'       [reduce using rule 25 (listofexpr)]
    $default  reduce using rule 25 (listofexpr)


State 182

   22 function_call_no_assgn: TK_IDENT '(' ')' .

    $default  reduce using rule 22 (function_call_no_assgn)


State 183

   21 function_call_no_assgn: TK_IDENT '(' func_param_call . ')'
   24 func_param_call: func_param_call . ',' expr

    ')'  shift, and go to state 225
    ','  shift, and go to state 226


State 184

   23 func_param_call: expr .  [')', ',']
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 23 (func_param_call)


State 185

   83 for_statement: KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN . '[' expr ':' expr ']' ':' KW_ENDFOR

    '['  shift, and go to state 227


State 186

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   26 listofexpr: listofexpr . expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   75 if_statement: KW_IF '(' listofexpr . ')' ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr . ')' ':' KW_ENDIF
   77             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | KW_IF '(' listofexpr . ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' listofexpr . ')' ':' KW_ELSE ':' KW_ENDIF

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172
    ')'            shift, and go to state 228

    function_call_no_assgn  go to state 173
    expr                    go to state 224


State 187

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   26 listofexpr: listofexpr . expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   81 while_statement: KW_WHILE '(' listofexpr . ')' ':' statements KW_ENDWHILE
   82                | KW_WHILE '(' listofexpr . ')' ':' KW_ENDWHILE

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172
    ')'            shift, and go to state 229

    function_call_no_assgn  go to state 173
    expr                    go to state 224


State 188

    6 main_block: KW_DEF KW_MAIN '(' ')' ':' listofinstructions KW_ENDDEF ';' .

    $default  reduce using rule 6 (main_block)


State 189

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   55 listofinstructions: const_declarations var_declarations statements .  [KW_ENDDEF, KW_RETURN]
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    $default  reduce using rule 55 (listofinstructions)

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 190

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   54 listofinstructions: var_declarations const_declarations statements .  [KW_ENDDEF, KW_RETURN]
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    $default  reduce using rule 54 (listofinstructions)

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 191

  110 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' . ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type
  110            | TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' . ':' data_type
  111            | TK_IDENT '[' TK_CONSTINT ']' . ',' multi_var_2

    ':'  shift, and go to state 230
    ','  shift, and go to state 67


State 192

  108 multi_var_3: TK_IDENT '[' ']' ',' TK_IDENT '[' ']' ':' data_type .

    $default  reduce using rule 108 (multi_var_3)


State 193

   18 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 18 (function_block)


State 194

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 231


State 195

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr . ';' KW_ENDDEF
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 232


State 196

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN . expr ';' KW_ENDDEF
   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 233


State 197

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   51     | TK_IDENT '[' . expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 234


State 198

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   35     | KW_NOT expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 35 (expr)

    Conflict between rule 35 and token TK_POW resolved as shift (KW_NOT < TK_POW).
    Conflict between rule 35 and token TK_EQEQ resolved as shift (KW_NOT < TK_EQEQ).
    Conflict between rule 35 and token TK_NOTEQ resolved as shift (KW_NOT < TK_NOTEQ).
    Conflict between rule 35 and token TK_GREEQ resolved as shift (KW_NOT < TK_GREEQ).
    Conflict between rule 35 and token TK_LESEQ resolved as shift (KW_NOT < TK_LESEQ).
    Conflict between rule 35 and token KW_AND resolved as reduce (KW_AND < KW_NOT).
    Conflict between rule 35 and token KW_OR resolved as reduce (KW_OR < KW_NOT).
    Conflict between rule 35 and token '<' resolved as shift (KW_NOT < '<').
    Conflict between rule 35 and token '>' resolved as shift (KW_NOT < '>').
    Conflict between rule 35 and token '+' resolved as shift (KW_NOT < '+').
    Conflict between rule 35 and token '-' resolved as shift (KW_NOT < '-').
    Conflict between rule 35 and token '*' resolved as shift (KW_NOT < '*').
    Conflict between rule 35 and token '/' resolved as shift (KW_NOT < '/').
    Conflict between rule 35 and token '%' resolved as shift (KW_NOT < '%').
    Conflict between rule 35 and token '.' resolved as shift (KW_NOT < '.').


State 199

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   49     | '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 49 (expr)

    Conflict between rule 49 and token TK_POW resolved as shift (UPLUS < TK_POW).
    Conflict between rule 49 and token TK_EQEQ resolved as reduce (TK_EQEQ < UPLUS).
    Conflict between rule 49 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UPLUS).
    Conflict between rule 49 and token TK_GREEQ resolved as reduce (TK_GREEQ < UPLUS).
    Conflict between rule 49 and token TK_LESEQ resolved as reduce (TK_LESEQ < UPLUS).
    Conflict between rule 49 and token KW_AND resolved as reduce (KW_AND < UPLUS).
    Conflict between rule 49 and token KW_OR resolved as reduce (KW_OR < UPLUS).
    Conflict between rule 49 and token '<' resolved as reduce ('<' < UPLUS).
    Conflict between rule 49 and token '>' resolved as reduce ('>' < UPLUS).
    Conflict between rule 49 and token '+' resolved as reduce ('+' < UPLUS).
    Conflict between rule 49 and token '-' resolved as reduce ('-' < UPLUS).
    Conflict between rule 49 and token '*' resolved as reduce ('*' < UPLUS).
    Conflict between rule 49 and token '/' resolved as reduce ('/' < UPLUS).
    Conflict between rule 49 and token '%' resolved as reduce ('%' < UPLUS).
    Conflict between rule 49 and token '.' resolved as shift (UPLUS < '.').


State 200

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   48     | '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 48 (expr)

    Conflict between rule 48 and token TK_POW resolved as shift (UMINUS < TK_POW).
    Conflict between rule 48 and token TK_EQEQ resolved as reduce (TK_EQEQ < UMINUS).
    Conflict between rule 48 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < UMINUS).
    Conflict between rule 48 and token TK_GREEQ resolved as reduce (TK_GREEQ < UMINUS).
    Conflict between rule 48 and token TK_LESEQ resolved as reduce (TK_LESEQ < UMINUS).
    Conflict between rule 48 and token KW_AND resolved as reduce (KW_AND < UMINUS).
    Conflict between rule 48 and token KW_OR resolved as reduce (KW_OR < UMINUS).
    Conflict between rule 48 and token '<' resolved as reduce ('<' < UMINUS).
    Conflict between rule 48 and token '>' resolved as reduce ('>' < UMINUS).
    Conflict between rule 48 and token '+' resolved as reduce ('+' < UMINUS).
    Conflict between rule 48 and token '-' resolved as reduce ('-' < UMINUS).
    Conflict between rule 48 and token '*' resolved as reduce ('*' < UMINUS).
    Conflict between rule 48 and token '/' resolved as reduce ('/' < UMINUS).
    Conflict between rule 48 and token '%' resolved as reduce ('%' < UMINUS).
    Conflict between rule 48 and token '.' resolved as shift (UMINUS < '.').


State 201

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   50     | '(' expr . ')'
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ')'       shift, and go to state 235


State 202

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   47     | expr TK_POW . expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 236


State 203

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   37     | expr TK_EQEQ . expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 237


State 204

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   36     | expr TK_NOTEQ . expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 238


State 205

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   39     | expr TK_GREEQ . expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 239


State 206

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   38     | expr TK_LESEQ . expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 240


State 207

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   34     | expr KW_AND . expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 241


State 208

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   33     | expr KW_OR . expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 242


State 209

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   40     | expr '<' . expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 243


State 210

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   41     | expr '>' . expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 244


State 211

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   42     | expr '+' . expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 245


State 212

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   43     | expr '-' . expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 246


State 213

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   44     | expr '*' . expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 247


State 214

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   45     | expr '/' . expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 248


State 215

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   46     | expr '%' . expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 249


State 216

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   52     | expr '.' . expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 250


State 217

   62 statement: TK_IDENT TK_PLUEQ expr ';' .

    $default  reduce using rule 62 (statement)


State 218

   63 statement: TK_IDENT TK_MINEQ expr ';' .

    $default  reduce using rule 63 (statement)


State 219

   64 statement: TK_IDENT TK_MULEQ expr ';' .

    $default  reduce using rule 64 (statement)


State 220

   66 statement: TK_IDENT TK_DIVEQ expr ';' .

    $default  reduce using rule 66 (statement)


State 221

   65 statement: TK_IDENT TK_MODEQ expr ';' .

    $default  reduce using rule 65 (statement)


State 222

   67 statement: TK_IDENT TK_COLEQ expr ';' .

    $default  reduce using rule 67 (statement)


State 223

   61 statement: TK_IDENT '=' listofexpr ';' .

    $default  reduce using rule 61 (statement)


State 224

   26 listofexpr: listofexpr expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_NOT, KW_TRUE, KW_FALSE, '+', '-', '(', ')', ';']
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    '+'       [reduce using rule 26 (listofexpr)]
    '-'       [reduce using rule 26 (listofexpr)]
    $default  reduce using rule 26 (listofexpr)


State 225

   21 function_call_no_assgn: TK_IDENT '(' func_param_call ')' .

    $default  reduce using rule 21 (function_call_no_assgn)


State 226

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   24 func_param_call: func_param_call ',' . expr
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 251


State 227

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' . expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 252


State 228

   75 if_statement: KW_IF '(' listofexpr ')' . ':' statements KW_ENDIF
   76             | KW_IF '(' listofexpr ')' . ':' KW_ENDIF
   77             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' statements KW_ENDIF
   79             | KW_IF '(' listofexpr ')' . ':' statements KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' listofexpr ')' . ':' KW_ELSE ':' KW_ENDIF

    ':'  shift, and go to state 253


State 229

   81 while_statement: KW_WHILE '(' listofexpr ')' . ':' statements KW_ENDWHILE
   82                | KW_WHILE '(' listofexpr ')' . ':' KW_ENDWHILE

    ':'  shift, and go to state 254


State 230

  110 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' . data_type
  114 data_type: . KW_INTEGER
  115          | . KW_SCALAR
  116          | . KW_STR
  117          | . KW_BOOLEAN

    KW_INTEGER  shift, and go to state 36
    KW_SCALAR   shift, and go to state 37
    KW_STR      shift, and go to state 38
    KW_BOOLEAN  shift, and go to state 39

    data_type  go to state 255


State 231

   17 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' ':' listofinstructions KW_RETURN ';' KW_ENDDEF .

    $default  reduce using rule 17 (function_block)


State 232

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 256


State 233

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr . ';' KW_ENDDEF
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ';'       shift, and go to state 257


State 234

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   51     | TK_IDENT '[' expr . ']'
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ']'       shift, and go to state 258


State 235

   50 expr: '(' expr ')' .

    $default  reduce using rule 50 (expr)


State 236

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   47     | expr TK_POW expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 47 (expr)

    Conflict between rule 47 and token TK_POW resolved as shift (%right TK_POW).
    Conflict between rule 47 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_POW).
    Conflict between rule 47 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_POW).
    Conflict between rule 47 and token TK_GREEQ resolved as reduce (TK_GREEQ < TK_POW).
    Conflict between rule 47 and token TK_LESEQ resolved as reduce (TK_LESEQ < TK_POW).
    Conflict between rule 47 and token KW_AND resolved as reduce (KW_AND < TK_POW).
    Conflict between rule 47 and token KW_OR resolved as reduce (KW_OR < TK_POW).
    Conflict between rule 47 and token '<' resolved as reduce ('<' < TK_POW).
    Conflict between rule 47 and token '>' resolved as reduce ('>' < TK_POW).
    Conflict between rule 47 and token '+' resolved as reduce ('+' < TK_POW).
    Conflict between rule 47 and token '-' resolved as reduce ('-' < TK_POW).
    Conflict between rule 47 and token '*' resolved as reduce ('*' < TK_POW).
    Conflict between rule 47 and token '/' resolved as reduce ('/' < TK_POW).
    Conflict between rule 47 and token '%' resolved as reduce ('%' < TK_POW).
    Conflict between rule 47 and token '.' resolved as shift (TK_POW < '.').


State 237

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   37     | expr TK_EQEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 37 (expr)

    Conflict between rule 37 and token TK_POW resolved as shift (TK_EQEQ < TK_POW).
    Conflict between rule 37 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 37 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 37 and token TK_GREEQ resolved as shift (TK_EQEQ < TK_GREEQ).
    Conflict between rule 37 and token TK_LESEQ resolved as shift (TK_EQEQ < TK_LESEQ).
    Conflict between rule 37 and token KW_AND resolved as reduce (KW_AND < TK_EQEQ).
    Conflict between rule 37 and token KW_OR resolved as reduce (KW_OR < TK_EQEQ).
    Conflict between rule 37 and token '<' resolved as shift (TK_EQEQ < '<').
    Conflict between rule 37 and token '>' resolved as shift (TK_EQEQ < '>').
    Conflict between rule 37 and token '+' resolved as shift (TK_EQEQ < '+').
    Conflict between rule 37 and token '-' resolved as shift (TK_EQEQ < '-').
    Conflict between rule 37 and token '*' resolved as shift (TK_EQEQ < '*').
    Conflict between rule 37 and token '/' resolved as shift (TK_EQEQ < '/').
    Conflict between rule 37 and token '%' resolved as shift (TK_EQEQ < '%').
    Conflict between rule 37 and token '.' resolved as shift (TK_EQEQ < '.').


State 238

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   36     | expr TK_NOTEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 36 (expr)

    Conflict between rule 36 and token TK_POW resolved as shift (TK_NOTEQ < TK_POW).
    Conflict between rule 36 and token TK_EQEQ resolved as reduce (%left TK_EQEQ).
    Conflict between rule 36 and token TK_NOTEQ resolved as reduce (%left TK_NOTEQ).
    Conflict between rule 36 and token TK_GREEQ resolved as shift (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 36 and token TK_LESEQ resolved as shift (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 36 and token KW_AND resolved as reduce (KW_AND < TK_NOTEQ).
    Conflict between rule 36 and token KW_OR resolved as reduce (KW_OR < TK_NOTEQ).
    Conflict between rule 36 and token '<' resolved as shift (TK_NOTEQ < '<').
    Conflict between rule 36 and token '>' resolved as shift (TK_NOTEQ < '>').
    Conflict between rule 36 and token '+' resolved as shift (TK_NOTEQ < '+').
    Conflict between rule 36 and token '-' resolved as shift (TK_NOTEQ < '-').
    Conflict between rule 36 and token '*' resolved as shift (TK_NOTEQ < '*').
    Conflict between rule 36 and token '/' resolved as shift (TK_NOTEQ < '/').
    Conflict between rule 36 and token '%' resolved as shift (TK_NOTEQ < '%').
    Conflict between rule 36 and token '.' resolved as shift (TK_NOTEQ < '.').


State 239

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   39     | expr TK_GREEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '+'     shift, and go to state 211
    '-'     shift, and go to state 212
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 39 (expr)

    Conflict between rule 39 and token TK_POW resolved as shift (TK_GREEQ < TK_POW).
    Conflict between rule 39 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_GREEQ).
    Conflict between rule 39 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_GREEQ).
    Conflict between rule 39 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 39 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 39 and token KW_AND resolved as reduce (KW_AND < TK_GREEQ).
    Conflict between rule 39 and token KW_OR resolved as reduce (KW_OR < TK_GREEQ).
    Conflict between rule 39 and token '<' resolved as reduce (%left '<').
    Conflict between rule 39 and token '>' resolved as reduce (%left '>').
    Conflict between rule 39 and token '+' resolved as shift (TK_GREEQ < '+').
    Conflict between rule 39 and token '-' resolved as shift (TK_GREEQ < '-').
    Conflict between rule 39 and token '*' resolved as shift (TK_GREEQ < '*').
    Conflict between rule 39 and token '/' resolved as shift (TK_GREEQ < '/').
    Conflict between rule 39 and token '%' resolved as shift (TK_GREEQ < '%').
    Conflict between rule 39 and token '.' resolved as shift (TK_GREEQ < '.').


State 240

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   38     | expr TK_LESEQ expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '+'     shift, and go to state 211
    '-'     shift, and go to state 212
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 38 (expr)

    Conflict between rule 38 and token TK_POW resolved as shift (TK_LESEQ < TK_POW).
    Conflict between rule 38 and token TK_EQEQ resolved as reduce (TK_EQEQ < TK_LESEQ).
    Conflict between rule 38 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < TK_LESEQ).
    Conflict between rule 38 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 38 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 38 and token KW_AND resolved as reduce (KW_AND < TK_LESEQ).
    Conflict between rule 38 and token KW_OR resolved as reduce (KW_OR < TK_LESEQ).
    Conflict between rule 38 and token '<' resolved as reduce (%left '<').
    Conflict between rule 38 and token '>' resolved as reduce (%left '>').
    Conflict between rule 38 and token '+' resolved as shift (TK_LESEQ < '+').
    Conflict between rule 38 and token '-' resolved as shift (TK_LESEQ < '-').
    Conflict between rule 38 and token '*' resolved as shift (TK_LESEQ < '*').
    Conflict between rule 38 and token '/' resolved as shift (TK_LESEQ < '/').
    Conflict between rule 38 and token '%' resolved as shift (TK_LESEQ < '%').
    Conflict between rule 38 and token '.' resolved as shift (TK_LESEQ < '.').


State 241

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   34     | expr KW_AND expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 34 (expr)

    Conflict between rule 34 and token TK_POW resolved as shift (KW_AND < TK_POW).
    Conflict between rule 34 and token TK_EQEQ resolved as shift (KW_AND < TK_EQEQ).
    Conflict between rule 34 and token TK_NOTEQ resolved as shift (KW_AND < TK_NOTEQ).
    Conflict between rule 34 and token TK_GREEQ resolved as shift (KW_AND < TK_GREEQ).
    Conflict between rule 34 and token TK_LESEQ resolved as shift (KW_AND < TK_LESEQ).
    Conflict between rule 34 and token KW_AND resolved as reduce (%left KW_AND).
    Conflict between rule 34 and token KW_OR resolved as reduce (KW_OR < KW_AND).
    Conflict between rule 34 and token '<' resolved as shift (KW_AND < '<').
    Conflict between rule 34 and token '>' resolved as shift (KW_AND < '>').
    Conflict between rule 34 and token '+' resolved as shift (KW_AND < '+').
    Conflict between rule 34 and token '-' resolved as shift (KW_AND < '-').
    Conflict between rule 34 and token '*' resolved as shift (KW_AND < '*').
    Conflict between rule 34 and token '/' resolved as shift (KW_AND < '/').
    Conflict between rule 34 and token '%' resolved as shift (KW_AND < '%').
    Conflict between rule 34 and token '.' resolved as shift (KW_AND < '.').


State 242

   33 expr: expr . KW_OR expr
   33     | expr KW_OR expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '(', ')', ']', ':', ';', ',']
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 33 (expr)

    Conflict between rule 33 and token TK_POW resolved as shift (KW_OR < TK_POW).
    Conflict between rule 33 and token TK_EQEQ resolved as shift (KW_OR < TK_EQEQ).
    Conflict between rule 33 and token TK_NOTEQ resolved as shift (KW_OR < TK_NOTEQ).
    Conflict between rule 33 and token TK_GREEQ resolved as shift (KW_OR < TK_GREEQ).
    Conflict between rule 33 and token TK_LESEQ resolved as shift (KW_OR < TK_LESEQ).
    Conflict between rule 33 and token KW_AND resolved as shift (KW_OR < KW_AND).
    Conflict between rule 33 and token KW_OR resolved as reduce (%left KW_OR).
    Conflict between rule 33 and token '<' resolved as shift (KW_OR < '<').
    Conflict between rule 33 and token '>' resolved as shift (KW_OR < '>').
    Conflict between rule 33 and token '+' resolved as shift (KW_OR < '+').
    Conflict between rule 33 and token '-' resolved as shift (KW_OR < '-').
    Conflict between rule 33 and token '*' resolved as shift (KW_OR < '*').
    Conflict between rule 33 and token '/' resolved as shift (KW_OR < '/').
    Conflict between rule 33 and token '%' resolved as shift (KW_OR < '%').
    Conflict between rule 33 and token '.' resolved as shift (KW_OR < '.').


State 243

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   40     | expr '<' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '+'     shift, and go to state 211
    '-'     shift, and go to state 212
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 40 (expr)

    Conflict between rule 40 and token TK_POW resolved as shift ('<' < TK_POW).
    Conflict between rule 40 and token TK_EQEQ resolved as reduce (TK_EQEQ < '<').
    Conflict between rule 40 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '<').
    Conflict between rule 40 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 40 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 40 and token KW_AND resolved as reduce (KW_AND < '<').
    Conflict between rule 40 and token KW_OR resolved as reduce (KW_OR < '<').
    Conflict between rule 40 and token '<' resolved as reduce (%left '<').
    Conflict between rule 40 and token '>' resolved as reduce (%left '>').
    Conflict between rule 40 and token '+' resolved as shift ('<' < '+').
    Conflict between rule 40 and token '-' resolved as shift ('<' < '-').
    Conflict between rule 40 and token '*' resolved as shift ('<' < '*').
    Conflict between rule 40 and token '/' resolved as shift ('<' < '/').
    Conflict between rule 40 and token '%' resolved as shift ('<' < '%').
    Conflict between rule 40 and token '.' resolved as shift ('<' < '.').


State 244

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   41     | expr '>' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '(', ')', ']', ':', ';', ',']
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '+'     shift, and go to state 211
    '-'     shift, and go to state 212
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 41 (expr)

    Conflict between rule 41 and token TK_POW resolved as shift ('>' < TK_POW).
    Conflict between rule 41 and token TK_EQEQ resolved as reduce (TK_EQEQ < '>').
    Conflict between rule 41 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '>').
    Conflict between rule 41 and token TK_GREEQ resolved as reduce (%left TK_GREEQ).
    Conflict between rule 41 and token TK_LESEQ resolved as reduce (%left TK_LESEQ).
    Conflict between rule 41 and token KW_AND resolved as reduce (KW_AND < '>').
    Conflict between rule 41 and token KW_OR resolved as reduce (KW_OR < '>').
    Conflict between rule 41 and token '<' resolved as reduce (%left '<').
    Conflict between rule 41 and token '>' resolved as reduce (%left '>').
    Conflict between rule 41 and token '+' resolved as shift ('>' < '+').
    Conflict between rule 41 and token '-' resolved as shift ('>' < '-').
    Conflict between rule 41 and token '*' resolved as shift ('>' < '*').
    Conflict between rule 41 and token '/' resolved as shift ('>' < '/').
    Conflict between rule 41 and token '%' resolved as shift ('>' < '%').
    Conflict between rule 41 and token '.' resolved as shift ('>' < '.').


State 245

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   42     | expr '+' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 42 (expr)

    Conflict between rule 42 and token TK_POW resolved as shift ('+' < TK_POW).
    Conflict between rule 42 and token TK_EQEQ resolved as reduce (TK_EQEQ < '+').
    Conflict between rule 42 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '+').
    Conflict between rule 42 and token TK_GREEQ resolved as reduce (TK_GREEQ < '+').
    Conflict between rule 42 and token TK_LESEQ resolved as reduce (TK_LESEQ < '+').
    Conflict between rule 42 and token KW_AND resolved as reduce (KW_AND < '+').
    Conflict between rule 42 and token KW_OR resolved as reduce (KW_OR < '+').
    Conflict between rule 42 and token '<' resolved as reduce ('<' < '+').
    Conflict between rule 42 and token '>' resolved as reduce ('>' < '+').
    Conflict between rule 42 and token '+' resolved as reduce (%left '+').
    Conflict between rule 42 and token '-' resolved as reduce (%left '-').
    Conflict between rule 42 and token '*' resolved as shift ('+' < '*').
    Conflict between rule 42 and token '/' resolved as shift ('+' < '/').
    Conflict between rule 42 and token '%' resolved as shift ('+' < '%').
    Conflict between rule 42 and token '.' resolved as shift ('+' < '.').


State 246

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   43     | expr '-' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '(', ')', ']', ':', ';', ',']
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '*'     shift, and go to state 213
    '/'     shift, and go to state 214
    '%'     shift, and go to state 215
    '.'     shift, and go to state 216

    $default  reduce using rule 43 (expr)

    Conflict between rule 43 and token TK_POW resolved as shift ('-' < TK_POW).
    Conflict between rule 43 and token TK_EQEQ resolved as reduce (TK_EQEQ < '-').
    Conflict between rule 43 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '-').
    Conflict between rule 43 and token TK_GREEQ resolved as reduce (TK_GREEQ < '-').
    Conflict between rule 43 and token TK_LESEQ resolved as reduce (TK_LESEQ < '-').
    Conflict between rule 43 and token KW_AND resolved as reduce (KW_AND < '-').
    Conflict between rule 43 and token KW_OR resolved as reduce (KW_OR < '-').
    Conflict between rule 43 and token '<' resolved as reduce ('<' < '-').
    Conflict between rule 43 and token '>' resolved as reduce ('>' < '-').
    Conflict between rule 43 and token '+' resolved as reduce (%left '+').
    Conflict between rule 43 and token '-' resolved as reduce (%left '-').
    Conflict between rule 43 and token '*' resolved as shift ('-' < '*').
    Conflict between rule 43 and token '/' resolved as shift ('-' < '/').
    Conflict between rule 43 and token '%' resolved as shift ('-' < '%').
    Conflict between rule 43 and token '.' resolved as shift ('-' < '.').


State 247

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   44     | expr '*' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 44 (expr)

    Conflict between rule 44 and token TK_POW resolved as shift ('*' < TK_POW).
    Conflict between rule 44 and token TK_EQEQ resolved as reduce (TK_EQEQ < '*').
    Conflict between rule 44 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '*').
    Conflict between rule 44 and token TK_GREEQ resolved as reduce (TK_GREEQ < '*').
    Conflict between rule 44 and token TK_LESEQ resolved as reduce (TK_LESEQ < '*').
    Conflict between rule 44 and token KW_AND resolved as reduce (KW_AND < '*').
    Conflict between rule 44 and token KW_OR resolved as reduce (KW_OR < '*').
    Conflict between rule 44 and token '<' resolved as reduce ('<' < '*').
    Conflict between rule 44 and token '>' resolved as reduce ('>' < '*').
    Conflict between rule 44 and token '+' resolved as reduce ('+' < '*').
    Conflict between rule 44 and token '-' resolved as reduce ('-' < '*').
    Conflict between rule 44 and token '*' resolved as reduce (%left '*').
    Conflict between rule 44 and token '/' resolved as reduce (%left '/').
    Conflict between rule 44 and token '%' resolved as reduce (%left '%').
    Conflict between rule 44 and token '.' resolved as shift ('*' < '.').


State 248

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   45     | expr '/' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 45 (expr)

    Conflict between rule 45 and token TK_POW resolved as shift ('/' < TK_POW).
    Conflict between rule 45 and token TK_EQEQ resolved as reduce (TK_EQEQ < '/').
    Conflict between rule 45 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '/').
    Conflict between rule 45 and token TK_GREEQ resolved as reduce (TK_GREEQ < '/').
    Conflict between rule 45 and token TK_LESEQ resolved as reduce (TK_LESEQ < '/').
    Conflict between rule 45 and token KW_AND resolved as reduce (KW_AND < '/').
    Conflict between rule 45 and token KW_OR resolved as reduce (KW_OR < '/').
    Conflict between rule 45 and token '<' resolved as reduce ('<' < '/').
    Conflict between rule 45 and token '>' resolved as reduce ('>' < '/').
    Conflict between rule 45 and token '+' resolved as reduce ('+' < '/').
    Conflict between rule 45 and token '-' resolved as reduce ('-' < '/').
    Conflict between rule 45 and token '*' resolved as reduce (%left '*').
    Conflict between rule 45 and token '/' resolved as reduce (%left '/').
    Conflict between rule 45 and token '%' resolved as reduce (%left '%').
    Conflict between rule 45 and token '.' resolved as shift ('/' < '.').


State 249

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   46     | expr '%' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '(', ')', ']', ':', ';', ',']
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW  shift, and go to state 202
    '.'     shift, and go to state 216

    $default  reduce using rule 46 (expr)

    Conflict between rule 46 and token TK_POW resolved as shift ('%' < TK_POW).
    Conflict between rule 46 and token TK_EQEQ resolved as reduce (TK_EQEQ < '%').
    Conflict between rule 46 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '%').
    Conflict between rule 46 and token TK_GREEQ resolved as reduce (TK_GREEQ < '%').
    Conflict between rule 46 and token TK_LESEQ resolved as reduce (TK_LESEQ < '%').
    Conflict between rule 46 and token KW_AND resolved as reduce (KW_AND < '%').
    Conflict between rule 46 and token KW_OR resolved as reduce (KW_OR < '%').
    Conflict between rule 46 and token '<' resolved as reduce ('<' < '%').
    Conflict between rule 46 and token '>' resolved as reduce ('>' < '%').
    Conflict between rule 46 and token '+' resolved as reduce ('+' < '%').
    Conflict between rule 46 and token '-' resolved as reduce ('-' < '%').
    Conflict between rule 46 and token '*' resolved as reduce (%left '*').
    Conflict between rule 46 and token '/' resolved as reduce (%left '/').
    Conflict between rule 46 and token '%' resolved as reduce (%left '%').
    Conflict between rule 46 and token '.' resolved as shift ('%' < '.').


State 250

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   52     | expr '.' expr .  [TK_IDENT, TK_CONSTINT, TK_CONSTFLOAT, TK_CONSTSTR, TK_POW, TK_EQEQ, TK_NOTEQ, TK_GREEQ, TK_LESEQ, KW_AND, KW_OR, KW_NOT, KW_TRUE, KW_FALSE, '<', '>', '+', '-', '*', '/', '%', '.', '(', ')', ']', ':', ';', ',']

    $default  reduce using rule 52 (expr)

    Conflict between rule 52 and token TK_POW resolved as reduce (TK_POW < '.').
    Conflict between rule 52 and token TK_EQEQ resolved as reduce (TK_EQEQ < '.').
    Conflict between rule 52 and token TK_NOTEQ resolved as reduce (TK_NOTEQ < '.').
    Conflict between rule 52 and token TK_GREEQ resolved as reduce (TK_GREEQ < '.').
    Conflict between rule 52 and token TK_LESEQ resolved as reduce (TK_LESEQ < '.').
    Conflict between rule 52 and token KW_AND resolved as reduce (KW_AND < '.').
    Conflict between rule 52 and token KW_OR resolved as reduce (KW_OR < '.').
    Conflict between rule 52 and token '<' resolved as reduce ('<' < '.').
    Conflict between rule 52 and token '>' resolved as reduce ('>' < '.').
    Conflict between rule 52 and token '+' resolved as reduce ('+' < '.').
    Conflict between rule 52 and token '-' resolved as reduce ('-' < '.').
    Conflict between rule 52 and token '*' resolved as reduce ('*' < '.').
    Conflict between rule 52 and token '/' resolved as reduce ('/' < '.').
    Conflict between rule 52 and token '%' resolved as reduce ('%' < '.').
    Conflict between rule 52 and token '.' resolved as reduce (%left '.').


State 251

   24 func_param_call: func_param_call ',' expr .  [')', ',']
   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216

    $default  reduce using rule 24 (func_param_call)


State 252

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr . ':' expr ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ':'       shift, and go to state 259


State 253

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' . statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   76             | KW_IF '(' listofexpr ')' ':' . KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   79             | KW_IF '(' listofexpr ')' ':' . statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' listofexpr ')' ':' . KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ELSE      shift, and go to state 260
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 261
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 262
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 254

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   81                | KW_WHILE '(' listofexpr ')' ':' . statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   82                | KW_WHILE '(' listofexpr ')' ':' . KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDWHILE  shift, and go to state 263
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 264
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 255

  110 multi_var_2: TK_IDENT '[' TK_CONSTINT ']' ',' TK_IDENT '[' TK_CONSTINT ']' ':' data_type .

    $default  reduce using rule 110 (multi_var_2)


State 256

   20 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 20 (function_block)


State 257

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' . KW_ENDDEF

    KW_ENDDEF  shift, and go to state 265


State 258

   51 expr: TK_IDENT '[' expr ']' .

    $default  reduce using rule 51 (expr)


State 259

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 266


State 260

   78 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' statements KW_ENDIF
   80             | KW_IF '(' listofexpr ')' ':' KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 267


State 261

   76 if_statement: KW_IF '(' listofexpr ')' ':' KW_ENDIF .

    $default  reduce using rule 76 (if_statement)


State 262

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   75             | KW_IF '(' listofexpr ')' ':' statements . KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   79             | KW_IF '(' listofexpr ')' ':' statements . KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ELSE      shift, and go to state 268
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 269
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 263

   82 while_statement: KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE .

    $default  reduce using rule 82 (while_statement)


State 264

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   81                | KW_WHILE '(' listofexpr ')' ':' statements . KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDWHILE  shift, and go to state 270
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 265

   19 function_block: KW_DEF TK_IDENT '(' function_param_decl ')' function_return_type ':' listofinstructions KW_RETURN expr ';' KW_ENDDEF .

    $default  reduce using rule 19 (function_block)


State 266

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ':' expr ']' ':' KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ']'       shift, and go to state 271
    ':'       shift, and go to state 272


State 267

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   80             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' . KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 273
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 274
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 268

   77 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' statements KW_ENDIF
   79             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE . ':' KW_ENDIF

    ':'  shift, and go to state 275


State 269

   75 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ENDIF .

    $default  reduce using rule 75 (if_statement)


State 270

   81 while_statement: KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE .

    $default  reduce using rule 81 (while_statement)


State 271

   85 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' statements KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 276


State 272

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   27 expr: . TK_CONSTINT
   28     | . TK_CONSTFLOAT
   29     | . TK_IDENT
   30     | . TK_CONSTSTR
   31     | . KW_FALSE
   32     | . KW_TRUE
   33     | . expr KW_OR expr
   34     | . expr KW_AND expr
   35     | . KW_NOT expr
   36     | . expr TK_NOTEQ expr
   37     | . expr TK_EQEQ expr
   38     | . expr TK_LESEQ expr
   39     | . expr TK_GREEQ expr
   40     | . expr '<' expr
   41     | . expr '>' expr
   42     | . expr '+' expr
   43     | . expr '-' expr
   44     | . expr '*' expr
   45     | . expr '/' expr
   46     | . expr '%' expr
   47     | . expr TK_POW expr
   48     | . '-' expr
   49     | . '+' expr
   50     | . '(' expr ')'
   51     | . TK_IDENT '[' expr ']'
   52     | . expr '.' expr
   53     | . function_call_no_assgn
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' . expr ']' ':' KW_ENDFOR

    TK_IDENT       shift, and go to state 163
    TK_CONSTINT    shift, and go to state 164
    TK_CONSTFLOAT  shift, and go to state 165
    TK_CONSTSTR    shift, and go to state 166
    KW_NOT         shift, and go to state 167
    KW_TRUE        shift, and go to state 168
    KW_FALSE       shift, and go to state 169
    '+'            shift, and go to state 170
    '-'            shift, and go to state 171
    '('            shift, and go to state 172

    function_call_no_assgn  go to state 173
    expr                    go to state 277


State 273

   80 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 80 (if_statement)


State 274

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   78             | KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements . KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 278
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 275

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   79             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' . KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 279
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 280
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 276

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR
   86              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' . KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ENDFOR    shift, and go to state 281
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 282
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 277

   33 expr: expr . KW_OR expr
   34     | expr . KW_AND expr
   36     | expr . TK_NOTEQ expr
   37     | expr . TK_EQEQ expr
   38     | expr . TK_LESEQ expr
   39     | expr . TK_GREEQ expr
   40     | expr . '<' expr
   41     | expr . '>' expr
   42     | expr . '+' expr
   43     | expr . '-' expr
   44     | expr . '*' expr
   45     | expr . '/' expr
   46     | expr . '%' expr
   47     | expr . TK_POW expr
   52     | expr . '.' expr
   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr . ']' ':' KW_ENDFOR

    TK_POW    shift, and go to state 202
    TK_EQEQ   shift, and go to state 203
    TK_NOTEQ  shift, and go to state 204
    TK_GREEQ  shift, and go to state 205
    TK_LESEQ  shift, and go to state 206
    KW_AND    shift, and go to state 207
    KW_OR     shift, and go to state 208
    '<'       shift, and go to state 209
    '>'       shift, and go to state 210
    '+'       shift, and go to state 211
    '-'       shift, and go to state 212
    '*'       shift, and go to state 213
    '/'       shift, and go to state 214
    '%'       shift, and go to state 215
    '.'       shift, and go to state 216
    ']'       shift, and go to state 283


State 278

   78 if_statement: KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 78 (if_statement)


State 279

   79 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF .

    $default  reduce using rule 79 (if_statement)


State 280

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   77             | KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements . KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_WHILE     shift, and go to state 98
    KW_ENDIF     shift, and go to state 284
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 281

   86 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 86 (for_statement)


State 282

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   85              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements . KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ENDFOR    shift, and go to state 285
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 283

   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' statements KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' . ':' KW_ENDFOR

    ':'  shift, and go to state 286


State 284

   77 if_statement: KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF .

    $default  reduce using rule 77 (if_statement)


State 285

   85 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 85 (for_statement)


State 286

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   59 statements: . statement
   60           | . statements statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . statements KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   84              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' . KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ENDFOR    shift, and go to state 287
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statements              go to state 288
    statement               go to state 103
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 287

   84 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR .

    $default  reduce using rule 84 (for_statement)


State 288

   21 function_call_no_assgn: . TK_IDENT '(' func_param_call ')'
   22                       | . TK_IDENT '(' ')'
   60 statements: statements . statement
   61 statement: . TK_IDENT '=' listofexpr ';'
   62          | . TK_IDENT TK_PLUEQ expr ';'
   63          | . TK_IDENT TK_MINEQ expr ';'
   64          | . TK_IDENT TK_MULEQ expr ';'
   65          | . TK_IDENT TK_MODEQ expr ';'
   66          | . TK_IDENT TK_DIVEQ expr ';'
   67          | . TK_IDENT TK_COLEQ expr ';'
   68          | . if_statement ';'
   69          | . for_statement ';'
   70          | . while_statement ';'
   71          | . KW_BREAK ';'
   72          | . KW_CONTINUE ';'
   73          | . function_call_no_assgn ';'
   74          | . ';'
   75 if_statement: . KW_IF '(' listofexpr ')' ':' statements KW_ENDIF
   76             | . KW_IF '(' listofexpr ')' ':' KW_ENDIF
   77             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' statements KW_ENDIF
   78             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' statements KW_ENDIF
   79             | . KW_IF '(' listofexpr ')' ':' statements KW_ELSE ':' KW_ENDIF
   80             | . KW_IF '(' listofexpr ')' ':' KW_ELSE ':' KW_ENDIF
   81 while_statement: . KW_WHILE '(' listofexpr ')' ':' statements KW_ENDWHILE
   82                | . KW_WHILE '(' listofexpr ')' ':' KW_ENDWHILE
   83 for_statement: . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR
   83              | KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements . KW_ENDFOR
   84              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' KW_ENDFOR
   85              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' statements KW_ENDFOR
   86              | . KW_FOR TK_IDENT KW_IN '[' expr ':' expr ']' ':' KW_ENDFOR

    TK_IDENT     shift, and go to state 143
    KW_FOR       shift, and go to state 93
    KW_BREAK     shift, and go to state 94
    KW_CONTINUE  shift, and go to state 95
    KW_IF        shift, and go to state 97
    KW_ENDFOR    shift, and go to state 289
    KW_WHILE     shift, and go to state 98
    ';'          shift, and go to state 99

    function_call_no_assgn  go to state 100
    statement               go to state 144
    if_statement            go to state 104
    while_statement         go to state 105
    for_statement           go to state 106


State 289

   83 for_statement: KW_FOR TK_IDENT KW_IN '[' expr ':' expr ':' expr ']' ':' statements KW_ENDFOR .

    $default  reduce using rule 83 (for_statement)
