Terminals unused in grammar

    TK_CONSTFLOAT
    TK_CONSTSTR
    TK_POW
    TK_PLUEQ
    TK_MINEQ
    TK_MULEQ
    TK_DIVEQ
    TK_ASSIGN
    TK_EQEQ
    TK_NOTEQ
    TK_GREEQ
    TK_LESEQ
    KW_AND
    KW_OR
    KW_NOT
    KW_INTEGER
    KW_FOR
    KW_BREAK
    KW_ENDCOMP
    KW_SCALAR
    KW_CONST
    KW_IN
    KW_CONTINUE
    KW_OF
    KW_STR
    KW_IF
    KW_ENDFOR
    KW_BOOLEAN
    KW_ELSE
    KW_WHILE
    KW_ENDIF
    KW_ENDWHILE
    KW_COMP
    KW_TRUE
    KW_FALSE
    '+'
    '-'
    '*'
    '/'


Grammar

    0 $accept: program $end

    1 program: main_block
    2        | main_block function_block

    3 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    4           | KW_DEF KW_MAIN '(' ')' ':' listOfExprs KW_ENDDEF ';'

    5 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    7 listOfExprs: expr ';'
    8            | listOfExprs expr ';'

    9 expr: TK_IDENT '=' TK_CONSTINT


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 4 5 6
    ')' (41) 3 4 5 6
    '*' (42)
    '+' (43)
    '-' (45)
    '/' (47)
    ':' (58) 3 4 5 6
    ';' (59) 3 4 5 6 7 8
    '=' (61) 9
    error (256)
    TK_IDENT <str> (258) 5 6 9
    TK_CONSTINT <str> (259) 9
    TK_CONSTFLOAT <str> (260)
    TK_CONSTSTR <str> (261)
    TK_POW (262)
    TK_PLUEQ (263)
    TK_MINEQ (264)
    TK_MULEQ (265)
    TK_DIVEQ (266)
    TK_ASSIGN (267)
    TK_EQEQ (268)
    TK_NOTEQ (269)
    TK_GREEQ (270)
    TK_LESEQ (271)
    KW_AND (272)
    KW_OR (273)
    KW_NOT (274)
    KW_INTEGER (275)
    KW_FOR (276)
    KW_BREAK (277)
    KW_DEF (278) 3 4 5 6
    KW_ENDCOMP (279)
    KW_SCALAR (280)
    KW_CONST (281)
    KW_IN (282)
    KW_CONTINUE (283)
    KW_ENDDEF (284) 3 4 5 6
    KW_OF (285)
    KW_STR (286)
    KW_IF (287)
    KW_ENDFOR (288)
    KW_MAIN (289) 3 4
    KW_BOOLEAN (290)
    KW_ELSE (291)
    KW_WHILE (292)
    KW_RETURN (293) 6
    KW_ENDIF (294)
    KW_ENDWHILE (295)
    KW_COMP (296)
    KW_TRUE (297)
    KW_FALSE (298)


Nonterminals, with rules where they appear

    $accept (53)
        on left: 0
    program (54)
        on left: 1 2
        on right: 0
    main_block <str> (55)
        on left: 3 4
        on right: 1 2
    function_block <str> (56)
        on left: 5 6
        on right: 2
    listOfExprs <str> (57)
        on left: 7 8
        on right: 4 5 6 8
    expr <str> (58)
        on left: 9
        on right: 7 8


State 0

    0 $accept: . program $end
    1 program: . main_block
    2        | . main_block function_block
    3 main_block: . KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    4           | . KW_DEF KW_MAIN '(' ')' ':' listOfExprs KW_ENDDEF ';'

    KW_DEF  shift, and go to state 1

    program     go to state 2
    main_block  go to state 3


State 1

    3 main_block: KW_DEF . KW_MAIN '(' ')' ':' KW_ENDDEF ';'
    4           | KW_DEF . KW_MAIN '(' ')' ':' listOfExprs KW_ENDDEF ';'

    KW_MAIN  shift, and go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: main_block .  [$end]
    2        | main_block . function_block
    5 function_block: . KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_ENDDEF ';'
    6               | . KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    KW_DEF  shift, and go to state 6

    $default  reduce using rule 1 (program)

    function_block  go to state 7


State 4

    3 main_block: KW_DEF KW_MAIN . '(' ')' ':' KW_ENDDEF ';'
    4           | KW_DEF KW_MAIN . '(' ')' ':' listOfExprs KW_ENDDEF ';'

    '('  shift, and go to state 8


State 5

    0 $accept: program $end .

    $default  accept


State 6

    5 function_block: KW_DEF . TK_IDENT '(' ')' ':' listOfExprs KW_ENDDEF ';'
    6               | KW_DEF . TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    TK_IDENT  shift, and go to state 9


State 7

    2 program: main_block function_block .

    $default  reduce using rule 2 (program)


State 8

    3 main_block: KW_DEF KW_MAIN '(' . ')' ':' KW_ENDDEF ';'
    4           | KW_DEF KW_MAIN '(' . ')' ':' listOfExprs KW_ENDDEF ';'

    ')'  shift, and go to state 10


State 9

    5 function_block: KW_DEF TK_IDENT . '(' ')' ':' listOfExprs KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT . '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    '('  shift, and go to state 11


State 10

    3 main_block: KW_DEF KW_MAIN '(' ')' . ':' KW_ENDDEF ';'
    4           | KW_DEF KW_MAIN '(' ')' . ':' listOfExprs KW_ENDDEF ';'

    ':'  shift, and go to state 12


State 11

    5 function_block: KW_DEF TK_IDENT '(' . ')' ':' listOfExprs KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT '(' . ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    ')'  shift, and go to state 13


State 12

    3 main_block: KW_DEF KW_MAIN '(' ')' ':' . KW_ENDDEF ';'
    4           | KW_DEF KW_MAIN '(' ')' ':' . listOfExprs KW_ENDDEF ';'
    7 listOfExprs: . expr ';'
    8            | . listOfExprs expr ';'
    9 expr: . TK_IDENT '=' TK_CONSTINT

    TK_IDENT   shift, and go to state 14
    KW_ENDDEF  shift, and go to state 15

    listOfExprs  go to state 16
    expr         go to state 17


State 13

    5 function_block: KW_DEF TK_IDENT '(' ')' . ':' listOfExprs KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT '(' ')' . ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';'

    ':'  shift, and go to state 18


State 14

    9 expr: TK_IDENT . '=' TK_CONSTINT

    '='  shift, and go to state 19


State 15

    3 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF . ';'

    ';'  shift, and go to state 20


State 16

    4 main_block: KW_DEF KW_MAIN '(' ')' ':' listOfExprs . KW_ENDDEF ';'
    8 listOfExprs: listOfExprs . expr ';'
    9 expr: . TK_IDENT '=' TK_CONSTINT

    TK_IDENT   shift, and go to state 14
    KW_ENDDEF  shift, and go to state 21

    expr  go to state 22


State 17

    7 listOfExprs: expr . ';'

    ';'  shift, and go to state 23


State 18

    5 function_block: KW_DEF TK_IDENT '(' ')' ':' . listOfExprs KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT '(' ')' ':' . listOfExprs KW_RETURN ';' KW_ENDDEF ';'
    7 listOfExprs: . expr ';'
    8            | . listOfExprs expr ';'
    9 expr: . TK_IDENT '=' TK_CONSTINT

    TK_IDENT  shift, and go to state 14

    listOfExprs  go to state 24
    expr         go to state 17


State 19

    9 expr: TK_IDENT '=' . TK_CONSTINT

    TK_CONSTINT  shift, and go to state 25


State 20

    3 main_block: KW_DEF KW_MAIN '(' ')' ':' KW_ENDDEF ';' .

    $default  reduce using rule 3 (main_block)


State 21

    4 main_block: KW_DEF KW_MAIN '(' ')' ':' listOfExprs KW_ENDDEF . ';'

    ';'  shift, and go to state 26


State 22

    8 listOfExprs: listOfExprs expr . ';'

    ';'  shift, and go to state 27


State 23

    7 listOfExprs: expr ';' .

    $default  reduce using rule 7 (listOfExprs)


State 24

    5 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs . KW_ENDDEF ';'
    6               | KW_DEF TK_IDENT '(' ')' ':' listOfExprs . KW_RETURN ';' KW_ENDDEF ';'
    8 listOfExprs: listOfExprs . expr ';'
    9 expr: . TK_IDENT '=' TK_CONSTINT

    TK_IDENT   shift, and go to state 14
    KW_ENDDEF  shift, and go to state 28
    KW_RETURN  shift, and go to state 29

    expr  go to state 22


State 25

    9 expr: TK_IDENT '=' TK_CONSTINT .

    $default  reduce using rule 9 (expr)


State 26

    4 main_block: KW_DEF KW_MAIN '(' ')' ':' listOfExprs KW_ENDDEF ';' .

    $default  reduce using rule 4 (main_block)


State 27

    8 listOfExprs: listOfExprs expr ';' .

    $default  reduce using rule 8 (listOfExprs)


State 28

    5 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_ENDDEF . ';'

    ';'  shift, and go to state 30


State 29

    6 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN . ';' KW_ENDDEF ';'

    ';'  shift, and go to state 31


State 30

    5 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_ENDDEF ';' .

    $default  reduce using rule 5 (function_block)


State 31

    6 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' . KW_ENDDEF ';'

    KW_ENDDEF  shift, and go to state 32


State 32

    6 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF . ';'

    ';'  shift, and go to state 33


State 33

    6 function_block: KW_DEF TK_IDENT '(' ')' ':' listOfExprs KW_RETURN ';' KW_ENDDEF ';' .

    $default  reduce using rule 6 (function_block)
