comp Triangle:
  #base: integer;
  #height: integer;

  def setHeight(h: integer):
    #height = h;
  enddef;

  def setBase(b: integer):
    #base = b;
  enddef;

  def printSurface():
    sur : scalar;
    sur = (#base * #height) / 2;
    writeScalar(sur);
  enddef;
endcomp;

limit, num, counter: integer;

def prime(n: integer)-> boolean: 
   i: integer; 
   result, isPrime: boolean;
      
  if (n < 0): 
    result = prime(-n);
  else: 
    if (n < 2): 
      result = False;    
    else: 
      if (n == 2): 
        result = True;
      else: 
        if (n % 2 == 0):
          result = False;
        else:  
          i = 3;
          isPrime = True;
          while (isPrime and (i < n / 2) ): 
            isPrime = n % i != 0;
            i = i + 2;
          endwhile;
          result = isPrime;
        endif;
      endif;
    endif;
  endif;
   
  return result;
enddef;

def main(): 

  tr : Triangle;

  limit = readInteger();  

  -- 2 is prime
  writeInteger(2);
  writeStr(" "); 

  counter = 1; -- count the prime numbers found
  -- check only odd numbers for primality  
  for num in [3: limit+1:2]:  
    if (prime(num)):  
      counter = counter + 1;
      writeInteger(num);
      writeStr(" ");
    endif;      
  endfor;
  
   writeStr("\nThe total number of primes found is:");
   writeInteger(counter);
   writeStr("\n");   

  tr.setBase(4);
  tr.setHeight(5);
  writeStr("\nThe total surface of our triangle is: ");
  tr.printSurface();
enddef;